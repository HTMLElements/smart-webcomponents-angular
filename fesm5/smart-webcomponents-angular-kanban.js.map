{"version":3,"file":"smart-webcomponents-angular-kanban.js","sources":["ng://smart-webcomponents-angular/kanban/smart.element.ts","ng://smart-webcomponents-angular/kanban/smart.kanban.ts","ng://smart-webcomponents-angular/kanban/smart.kanban.module.ts","ng://smart-webcomponents-angular/kanban/smart-webcomponents-angular-kanban.ts"],"sourcesContent":["\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Kanban } from './../index';\nimport { KanbanAddNewButtonDisplayMode, KanbanColumnOrientation, KanbanColumnEditMode, KanbanHeaderPosition, KanbanHierarchy, KanbanSelectionMode, KanbanTaskPosition, KanbanTaskSubTasks, KanbanColumn, KanbanDataSource, KanbanSwimlane, KanbanPriority, KanbanUser, ElementRenderMode} from './../index';\nimport { DataAdapter } from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { KanbanAddNewButtonDisplayMode, KanbanColumnOrientation, KanbanColumnEditMode, KanbanHeaderPosition, KanbanHierarchy, KanbanSelectionMode, KanbanTaskPosition, KanbanTaskSubTasks, KanbanColumn, KanbanDataSource, KanbanSwimlane, KanbanPriority, KanbanUser, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Kanban } from './../index';\nexport { DataAdapter } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-kanban',\tselector: 'smart-kanban, [smart-kanban]'\n})\n\nexport class KanbanComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<Kanban>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Kanban;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Kanban;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Kanban>document.createElement('smart-kanban');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Enables or disables column reordering. When this property is set to true and allowDrag is enabled, users will be able to reoder columns through drag & drop. For example: Click and drag the first column's header and drop it over another column. */\n\t@Input()\n\tget allowColumnReorder(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnReorder : undefined;\n\t}\n\tset allowColumnReorder(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnReorder = value : undefined;\n\t}\n\n\t/** @description Enables or disables column editing. When this property is set to true, users will be able to dynamically change the column's header label by double clicking on it. */\n\t@Input()\n\tget allowColumnEdit(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnEdit : undefined;\n\t}\n\tset allowColumnEdit(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnEdit = value : undefined;\n\t}\n\n\t/** @description Enables or disables column removing. When this property is set to true, users will be able to dynamically remove a column through the column actions menu. the 'columnActions' property should be true. */\n\t@Input()\n\tget allowColumnRemove(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnRemove : undefined;\n\t}\n\tset allowColumnRemove(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnRemove = value : undefined;\n\t}\n\n\t/** @description Enables or disables column hiding. When this property is set to true, users will be able to dynamically hide a column through the column actions menu. the 'columnActions' property should be true. */\n\t@Input()\n\tget allowColumnHide(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnHide : undefined;\n\t}\n\tset allowColumnHide(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnHide = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the column buttons for adding tasks. A particular button can be disabled by setting addNewButton in the column's definition to false. */\n\t@Input()\n\tget addNewButton(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.addNewButton : undefined;\n\t}\n\tset addNewButton(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.addNewButton = value : undefined;\n\t}\n\n\t/** @description Determines whether the add button is visible in the column header and/or after the tasks in the column. */\n\t@Input()\n\tget addNewButtonDisplayMode(): KanbanAddNewButtonDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.addNewButtonDisplayMode : undefined;\n\t}\n\tset addNewButtonDisplayMode(value: KanbanAddNewButtonDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.addNewButtonDisplayMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether a column with a button for adding new status columns to the Kanban will be displayed. */\n\t@Input()\n\tget addNewColumn(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.addNewColumn : undefined;\n\t}\n\tset addNewColumn(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.addNewColumn = value : undefined;\n\t}\n\n\t/** @description Sets the width of the add new column. The property is used, if the 'columnWidth' property is set, too. It specifies the width of the dynamic new column. */\n\t@Input()\n\tget addNewColumnWidth(): number | null {\n\t\treturn this.nativeElement ? this.nativeElement.addNewColumnWidth : undefined;\n\t}\n\tset addNewColumnWidth(value: number | null) {\n\t\tthis.nativeElement ? this.nativeElement.addNewColumnWidth = value : undefined;\n\t}\n\n\t/** @description Allows the dragging of tasks. */\n\t@Input()\n\tget allowDrag(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowDrag : undefined;\n\t}\n\tset allowDrag(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowDrag = value : undefined;\n\t}\n\n\t/** @description Allows the dropping of tasks. */\n\t@Input()\n\tget allowDrop(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowDrop : undefined;\n\t}\n\tset allowDrop(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowDrop = value : undefined;\n\t}\n\n\t/** @description This property changes the visual appeal of the Kanban columns and tasks. When set to true and the Kanban columns have their 'color' property set, the color is also applied to the tasks and edit dialog. */\n\t@Input()\n\tget applyColumnColorToTasks(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.applyColumnColorToTasks : undefined;\n\t}\n\tset applyColumnColorToTasks(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.applyColumnColorToTasks = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto load state from the browser's localStorage. Information about tasks and their position and selected state, filtering, sorting, collapsed columns, as well as the values of the properties taskActions, taskComments, taskDue, taskPriority, taskProgress, taskTags, and taskUserIcon is loaded. */\n\t@Input()\n\tget autoLoadState(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoLoadState : undefined;\n\t}\n\tset autoLoadState(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoLoadState = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto save state to the browser's localStorage. Information about tasks and their position and selected state, filtering, sorting, collapsed columns, as well as the values of the properties taskActions, taskComments, taskDue, taskPriority, taskProgress, taskTags, and taskUserIcon is saved. */\n\t@Input()\n\tget autoSaveState(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoSaveState : undefined;\n\t}\n\tset autoSaveState(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoSaveState = value : undefined;\n\t}\n\n\t/** @description Automatically updates the columns height depending on the tasks inside the column. The effect of this property is observed when 'columnColorEntireSurface' is true. */\n\t@Input()\n\tget autoColumnHeight(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoColumnHeight : undefined;\n\t}\n\tset autoColumnHeight(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoColumnHeight = value : undefined;\n\t}\n\n\t/** @description Allows collapsing the card content. */\n\t@Input()\n\tget collapsible(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.collapsible : undefined;\n\t}\n\tset collapsible(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.collapsible = value : undefined;\n\t}\n\n\t/** @description Displays colors in the column header, when the column's color property is set. */\n\t@Input()\n\tget columnColors(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnColors : undefined;\n\t}\n\tset columnColors(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnColors = value : undefined;\n\t}\n\n\t/** @description Sets the Kanban columns width. When this property is set, the kanban columns width is set and a horizontal scrollbar may appear. */\n\t@Input()\n\tget columnWidth(): number | null {\n\t\treturn this.nativeElement ? this.nativeElement.columnWidth : undefined;\n\t}\n\tset columnWidth(value: number | null) {\n\t\tthis.nativeElement ? this.nativeElement.columnWidth = value : undefined;\n\t}\n\n\t/** @description Displays background in the Kanban column. */\n\t@Input()\n\tget columnColorEntireSurface(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnColorEntireSurface : undefined;\n\t}\n\tset columnColorEntireSurface(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnColorEntireSurface = value : undefined;\n\t}\n\n\t/** @description Displays a column footer which shows the summary of the column. */\n\t@Input()\n\tget columnFooter(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnFooter : undefined;\n\t}\n\tset columnFooter(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnFooter = value : undefined;\n\t}\n\n\t/** @description Describes the columns properties. */\n\t@Input()\n\tget columns(): KanbanColumn[] {\n\t\treturn this.nativeElement ? this.nativeElement.columns : undefined;\n\t}\n\tset columns(value: KanbanColumn[]) {\n\t\tthis.nativeElement ? this.nativeElement.columns = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the column actions icon. */\n\t@Input()\n\tget columnActions(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnActions : undefined;\n\t}\n\tset columnActions(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnActions = value : undefined;\n\t}\n\n\t/** @description Determines whether task count information is displayed in column headers. */\n\t@Input()\n\tget columnSummary(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnSummary : undefined;\n\t}\n\tset columnSummary(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnSummary = value : undefined;\n\t}\n\n\t/** @description Determines whether a column header has a template. You can pass 'string', 'function' or HTMLTemplateElement as a value. */\n\t@Input()\n\tget columnHeaderTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.columnHeaderTemplate : undefined;\n\t}\n\tset columnHeaderTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.columnHeaderTemplate = value : undefined;\n\t}\n\n\t/** @description Determines the column edit behavior. With the 'header' option, edit starts on double click on the column's label. In 'menu' mode, edit is allowed from the 'columnActions' menu. In 'headerAndMenu' option, column editing includes both options. */\n\t@Input()\n\tget columnEditMode(): KanbanColumnEditMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.columnEditMode : undefined;\n\t}\n\tset columnEditMode(value: KanbanColumnEditMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.columnEditMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the id of the current user. Has to correspond to the id of an item from the users property/array. Depending on the current user, different privileges are enabled. If no current user is set, privileges depend on the element's properties. */\n\t@Input()\n\tget currentUser(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.currentUser : undefined;\n\t}\n\tset currentUser(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.currentUser = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the default dialog for adding/removing tasks or comments is disabled. */\n\t@Input()\n\tget disableDialog(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableDialog : undefined;\n\t}\n\tset disableDialog(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableDialog = value : undefined;\n\t}\n\n\t/** @description Sets or gets a customization function for the dialog. This function can be used to customize the dialog look or to replace it. The Kanban calls this function with 5 arguments - 'dialog', 'taskOrComment', 'editors', 'purpose' and 'type'. The dialog is the 'smart-window' instance used as a default Kanban dialog. 'taskOrComment' is object which could be Kanban task or comment. 'purpose' could be 'add' or 'edit' and 'type' could be 'task' or 'column' depending on the action. */\n\t@Input()\n\tget dialogCustomizationFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dialogCustomizationFunction : undefined;\n\t}\n\tset dialogCustomizationFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dialogCustomizationFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets a function called when the dialog is rendered. The Kanban calls this function with 6 arguments - 'dialog', 'editors', 'labels', 'tabs', 'layout', 'taskOrComment'. The dialog is the 'smart-window' instance used as a default Kanban dialog. 'taskOrComment' is object which could be Kanban task or comment. 'editors', 'labels', 'tabs' and 'layout' are JSON objects with key which describes the element type and value which is HTML Element. */\n\t@Input()\n\tget dialogRendered(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dialogRendered : undefined;\n\t}\n\tset dialogRendered(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dialogRendered = value : undefined;\n\t}\n\n\t/** @description Determines the data source to be visualized in the kanban board. */\n\t@Input()\n\tget dataSource(): KanbanDataSource[] {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: KanbanDataSource[]) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Determines the the relation (mapping) between the Kanban's default fields (keywords) and the data fields from the data source. Not necessary if both match. Only some of the default mapping can be overwritten. */\n\t@Input()\n\tget dataSourceMap(): { checklist: string; color: string; comments: string; dueDate: string; id: string; priority: string; progress: string; startDate: string; status: string; swimlane: string; tags: string; text: string; userId: string; createdUserId: string; upDatedUserId: string; createdDate: Date; upDatedDate: Date;} {\n\t\treturn this.nativeElement ? this.nativeElement.dataSourceMap : undefined;\n\t}\n\tset dataSourceMap(value: { checklist: string; color: string; comments: string; dueDate: string; id: string; priority: string; progress: string; startDate: string; status: string; swimlane: string; tags: string; text: string; userId: string; createdUserId: string; upDatedUserId: string; createdDate: Date; upDatedDate: Date;}) {\n\t\tthis.nativeElement ? this.nativeElement.dataSourceMap = value : undefined;\n\t}\n\n\t/** @description Determines the offset of the drag feedback element from the mouse cursor when dragging tasks. The first member of the array is the horizontal offset and the second one - the vertical offset. If set to 'auto', the offset is based on the mouse position when the dragging started. */\n\t@Input()\n\tget dragOffset(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.dragOffset : undefined;\n\t}\n\tset dragOffset(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.dragOffset = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether tasks can be edited (including the assigning of users to tasks). */\n\t@Input()\n\tget editable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.editable : undefined;\n\t}\n\tset editable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.editable = value : undefined;\n\t}\n\n\t/** @description Sets or gets the format string of the \"Due date\" label and the \"Start date\" and \"Due date\" editors. */\n\t@Input()\n\tget formatStringDate(): string {\n\t\treturn this.nativeElement ? this.nativeElement.formatStringDate : undefined;\n\t}\n\tset formatStringDate(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.formatStringDate = value : undefined;\n\t}\n\n\t/** @description Sets or gets the format string of comments time stamp. */\n\t@Input()\n\tget formatStringTime(): string {\n\t\treturn this.nativeElement ? this.nativeElement.formatStringTime : undefined;\n\t}\n\tset formatStringTime(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.formatStringTime = value : undefined;\n\t}\n\n\t/** @description Sets or gets the header position. The header contains the Customize, Filter, Sort, and Search buttons. */\n\t@Input()\n\tget headerPosition(): KanbanHeaderPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.headerPosition : undefined;\n\t}\n\tset headerPosition(value: KanbanHeaderPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.headerPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets the way column hierarchy is represented. */\n\t@Input()\n\tget hierarchy(): KanbanHierarchy | string {\n\t\treturn this.nativeElement ? this.nativeElement.hierarchy : undefined;\n\t}\n\tset hierarchy(value: KanbanHierarchy | string) {\n\t\tthis.nativeElement ? this.nativeElement.hierarchy = value : undefined;\n\t}\n\n\t/** @description Sets or gets the locale. Used in conjunction with the property messages. */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Callback function which can be used for customizing the tasks rendering. The Kanban calls it with 2 arguments - task html element and task data. */\n\t@Input()\n\tget onTaskRender(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onTaskRender : undefined;\n\t}\n\tset onTaskRender(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onTaskRender = value : undefined;\n\t}\n\n\t/** @description Callback function which can be used for customizing the filter items. The function is called with 1 argument - Array of items which will be displayed in the filter drop down. You can modify that array to remove or update items to filter by. */\n\t@Input()\n\tget onFilterPrepare(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onFilterPrepare : undefined;\n\t}\n\tset onFilterPrepare(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onFilterPrepare = value : undefined;\n\t}\n\n\t/** @description Callback function which can be used for customizing the sort items. The function is called with 1 argument - Array of items which will be displayed in the sort drop down. You can modify that array to remove or update items to sort by. */\n\t@Input()\n\tget onSortPrepare(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onSortPrepare : undefined;\n\t}\n\tset onSortPrepare(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onSortPrepare = value : undefined;\n\t}\n\n\t/** @description Callback function which can be used for customizing the column header rendering. The Kanban calls it with 3 arguments - column header html element and column data and column data field. */\n\t@Input()\n\tget onColumnHeaderRender(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onColumnHeaderRender : undefined;\n\t}\n\tset onColumnHeaderRender(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onColumnHeaderRender = value : undefined;\n\t}\n\n\t/** @description Callback function which can be used for customizing the column footer rendering. The Kanban calls it with 3 arguments - column header html element and column data and column data field. */\n\t@Input()\n\tget onColumnFooterRender(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onColumnFooterRender : undefined;\n\t}\n\tset onColumnFooterRender(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onColumnFooterRender = value : undefined;\n\t}\n\n\t/** @description Determines selection mode. */\n\t@Input()\n\tget selectionMode(): KanbanSelectionMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: KanbanSelectionMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the tasks history will be stored and displayed in the task dialog. */\n\t@Input()\n\tget storeHistory(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.storeHistory : undefined;\n\t}\n\tset storeHistory(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.storeHistory = value : undefined;\n\t}\n\n\t/** @description Sets or gets the task history items that will be stored when storeHistory is enabled. */\n\t@Input()\n\tget storeHistoryItems(): number {\n\t\treturn this.nativeElement ? this.nativeElement.storeHistoryItems : undefined;\n\t}\n\tset storeHistoryItems(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.storeHistoryItems = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the edit dialog is displayed in readonly mode. In that mode it shows only the task details, but the editing is disabled. However, if comments are enabled, you will be able to add comments in the dialog. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description Describes the swimlanes in the kanban board. Sub-columns are not applicable when swimlanes are present. */\n\t@Input()\n\tget swimlanes(): KanbanSwimlane[] {\n\t\treturn this.nativeElement ? this.nativeElement.swimlanes : undefined;\n\t}\n\tset swimlanes(value: KanbanSwimlane[]) {\n\t\tthis.nativeElement ? this.nativeElement.swimlanes = value : undefined;\n\t}\n\n\t/** @description Sets or gets the index of the column at which to start the swimlanes. */\n\t@Input()\n\tget swimlanesFrom(): number {\n\t\treturn this.nativeElement ? this.nativeElement.swimlanesFrom : undefined;\n\t}\n\tset swimlanesFrom(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.swimlanesFrom = value : undefined;\n\t}\n\n\t/** @description Sets or gets the index of the column at which to end the swimlanes. By default, swimlanes end at the last column. */\n\t@Input()\n\tget swimlanesTo(): number {\n\t\treturn this.nativeElement ? this.nativeElement.swimlanesTo : undefined;\n\t}\n\tset swimlanesTo(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.swimlanesTo = value : undefined;\n\t}\n\n\t/** @description Sets or gets the allowed tags. If no tags are listed, all tags from the data source are allowed. */\n\t@Input()\n\tget tags(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.tags : undefined;\n\t}\n\tset tags(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.tags = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task actions icon. */\n\t@Input()\n\tget taskActions(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskActions : undefined;\n\t}\n\tset taskActions(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskActions = value : undefined;\n\t}\n\n\t/** @description Represents a callback function which is called when the task actions menu is created. The task actions element is passed as parameter and allows you to customize the menu. Example: (list) => { list.innerHTML = 'Custom Item'; list.onclick = () => { alert('clicked'); }} */\n\t@Input()\n\tget taskActionsRendered(): any {\n\t\treturn this.nativeElement ? this.nativeElement.taskActionsRendered : undefined;\n\t}\n\tset taskActionsRendered(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.taskActionsRendered = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task comments icon. */\n\t@Input()\n\tget taskComments(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskComments : undefined;\n\t}\n\tset taskComments(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskComments = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task due icon. */\n\t@Input()\n\tget taskDue(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskDue : undefined;\n\t}\n\tset taskDue(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskDue = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether tasks can be shown in all levels of column hierarchy or only on leaf columns. */\n\t@Input()\n\tget taskPosition(): KanbanTaskPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.taskPosition : undefined;\n\t}\n\tset taskPosition(value: KanbanTaskPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.taskPosition = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task priority icon (shown when priority is low or high). */\n\t@Input()\n\tget taskPriority(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskPriority : undefined;\n\t}\n\tset taskPriority(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskPriority = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of task progress bar and the completed sub-tasks label. */\n\t@Input()\n\tget taskProgress(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskProgress : undefined;\n\t}\n\tset taskProgress(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskProgress = value : undefined;\n\t}\n\n\t/** @description Sets the task custom fields displayed in the card. Each array item should have 'dataField', 'label' 'dataType' and optionally 'visible', 'image' and 'cover' properties. The 'dataField' determines the value, the label is displayed as title, 'dataType' is used for formatting and 'visible' determines whether the field will be displayed. If your string represents an image either URL or Base64, set image: true. If you want to display that image as a cover image, set cover:true, too. */\n\t@Input()\n\tget taskCustomFields(): any {\n\t\treturn this.nativeElement ? this.nativeElement.taskCustomFields : undefined;\n\t}\n\tset taskCustomFields(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.taskCustomFields = value : undefined;\n\t}\n\n\t/** @description The task's background color depends on the task's color property. By default the color is rendered within the task's left border. */\n\t@Input()\n\tget taskColorEntireSurface(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskColorEntireSurface : undefined;\n\t}\n\tset taskColorEntireSurface(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskColorEntireSurface = value : undefined;\n\t}\n\n\t/** @description Displays an input in the task's card for adding dynamically a sub task. The 'taskSubTasks' property should be set to a value different than 'none'. */\n\t@Input()\n\tget taskSubTasksInput(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskSubTasksInput : undefined;\n\t}\n\tset taskSubTasksInput(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskSubTasksInput = value : undefined;\n\t}\n\n\t/** @description Sets the rendering mode of sub tasks. 'none' - default value. Sub tasks are displayed only in the edit dialog. 'onePerRow' - all sub tasks are displayed in the task's card. 'onlyUnfinished' - only tasks which are not completed are displayed in the task's card. */\n\t@Input()\n\tget taskSubTasks(): KanbanTaskSubTasks | string {\n\t\treturn this.nativeElement ? this.nativeElement.taskSubTasks : undefined;\n\t}\n\tset taskSubTasks(value: KanbanTaskSubTasks | string) {\n\t\tthis.nativeElement ? this.nativeElement.taskSubTasks = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of task tags. */\n\t@Input()\n\tget taskTags(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskTags : undefined;\n\t}\n\tset taskTags(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskTags = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task user icon. */\n\t@Input()\n\tget taskUserIcon(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskUserIcon : undefined;\n\t}\n\tset taskUserIcon(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskUserIcon = value : undefined;\n\t}\n\n\t/** @description Sets or gets a template to be applied to task text. Can be a string beginning with # and referencing the id of a template element on the page. Can also be a function that modifies the task text or the template itself. Finally, it can also be a string that will be parsed. */\n\t@Input()\n\tget textTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.textTemplate : undefined;\n\t}\n\tset textTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.textTemplate = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Determines whether the priority list (as defined by the priority property) will be shown when clicking the priority icon. Only applicable if editable privileges are enabled. */\n\t@Input()\n\tget priorityList(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.priorityList : undefined;\n\t}\n\tset priorityList(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.priorityList = value : undefined;\n\t}\n\n\t/** @description Determines the priority Kanban tasks can be assigned to. Example: [{label: 'low', value: 'low'}, {label: 'high', value: 'high'}] */\n\t@Input()\n\tget priority(): KanbanPriority[] {\n\t\treturn this.nativeElement ? this.nativeElement.priority : undefined;\n\t}\n\tset priority(value: KanbanPriority[]) {\n\t\tthis.nativeElement ? this.nativeElement.priority = value : undefined;\n\t}\n\n\t/** @description Determines whether the user list (as defined by the users property) will be shown when clicking the user icon. Only applicable if editable privileges are enabled. */\n\t@Input()\n\tget userList(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.userList : undefined;\n\t}\n\tset userList(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.userList = value : undefined;\n\t}\n\n\t/** @description Determines the users Kanban tasks can be assigned to and their characteristics and privileges. */\n\t@Input()\n\tget users(): KanbanUser[] {\n\t\treturn this.nativeElement ? this.nativeElement.users : undefined;\n\t}\n\tset users(value: KanbanUser[]) {\n\t\tthis.nativeElement ? this.nativeElement.users = value : undefined;\n\t}\n\n\t/** @description This event is triggered when a task has been updated.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \ttask, \tvalue)\n\t*   oldValue - The old data of the task\n\t*   task - The HTML element of the task whose data has been changed\n\t*   value - The new data of the task\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is closed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is about to be closed. The closing operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is added.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnAdd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is removed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnRemove: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is reordered.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldIndex, \tindex, \tcolumn)\n\t*   oldIndex - The column's old index.\n\t*   index - The column's new index.\n\t*   column - The column's data object with 'label', 'dataField' and 'collapsed' fields.\n\t*/\n\t@Output() onColumnReorder: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is updated.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \tvalue, \tcolumn)\n\t*   oldValue - The column's old label.\n\t*   value - The column's new label.\n\t*   column - The column's data object with 'label', 'dataField' and 'collapsed' fields.\n\t*/\n\t@Output() onColumnUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column header is clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column header is double clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnDoubleClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is shown by using the column's action menu or the Kanban's 'show' method.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*/\n\t@Output() onColumnShow: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is hidden by using the column's action menu or the Kanban's 'hide' method.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*/\n\t@Output() onColumnHide: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is collapsed  by using the column's action menu or the Kanban's 'collapse' method.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*/\n\t@Output() onColumnCollapse: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is expanded by using the column's action menu or the Kanban's 'expand' method.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*/\n\t@Output() onColumnExpand: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a comment is added to the Kanban Task.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tid, \tvalue)\n\t*   id - The task's id.\n\t*   value - The comment object. It has 'text: string, time: Date and userId:number' properties.\n\t*/\n\t@Output() onCommentAdd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a comment is removed from the Kanban Task.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tid, \tvalue)\n\t*   id - The task's id.\n\t*   value - The comment object. It has 'text: string, time: Date and userId:number' properties.\n\t*/\n\t@Output() onCommentRemove: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a comment is updated in the Kanban Task.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tid, \tvalue)\n\t*   id - The task's id.\n\t*   value - The comment object. It has 'text: string, time: Date and userId:number' properties.\n\t*/\n\t@Output() onCommentUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is dropped somewhere in the DOM. The dragging operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcontainer, \tdata, \titem, \titems, \toriginalEvent, \tpreviousContainer, \ttarget)\n\t*   container - the Kanban the dragged task(s) is dropped to\n\t*   data - an object with additional drag details\n\t*   item - the task that is dragged; if multiple tasks are dragged, this is the task that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged tasks\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*   previousContainer - the Kanban the dragged item(s) is dragged from\n\t*   target - the element the dragged tasks are dropped to\n\t*/\n\t@Output() onDragEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user is dragging a task.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tdata, \titem, \titems, \toriginalEvent)\n\t*   data - an object with additional drag details\n\t*   item - the task that is dragged; if multiple tasks are dragged, this is the task that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged tasks\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*/\n\t@Output() onDragging: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user starts dragging task(s). The dragging operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcontainer, \tdata, \titem, \titems, \toriginalEvent, \tpreviousContainer)\n\t*   container - the Kanban the dragged task(s) is dragged from\n\t*   data - an object with additional drag details\n\t*   item - the task that is dragged; if multiple tasks are dragged, this is the task that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged tasks\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*   previousContainer - the Kanban the dragged item(s) is dragged from\n\t*/\n\t@Output() onDragStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a filter has been applied.\n\t*  @param event. The custom event. \t*/\n\t@Output() onFilter: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is opened.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is about to be opened. The opening operation can be canceled by calling event.preventDefault() in the event handler function. If you want to cancel the default Kanban dialog, call event.preventDefault();\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcomment, \tpurpose, \ttask)\n\t*   comment - The comment that is about to be removed (if applicable).\n\t*   purpose - The purpose of the dialog to be opened - <em>'edit'</em> or <em>'prompt'</em>.\n\t*   task - The task that is about to be edited or removed (if applicable).\n\t*/\n\t@Output() onOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when sorting has been applied.\n\t*  @param event. The custom event. \t*/\n\t@Output() onSort: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered before a new task is added. You can use the event.detail.value and event.detail.id to customize the new Task before adding it to the Kanban. Example: kanban.onTaskBeforeAdd = (event) => { const data = event.detail.value; const id = event.detail.id; event.detail.id = 'BG12';}\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \tid)\n\t*   value - The task data that is added to the Kanban.\n\t*   id - The task data id.\n\t*/\n\t@Output() onTaskBeforeAdd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a new task is added. Example: kanban.onTaskAdd = (event) => { const data = event.detail.value; const id = event.detail.id; }\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \tid)\n\t*   value - The task data that is added to the Kanban.\n\t*   id - The task data id.\n\t*/\n\t@Output() onTaskAdd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is removed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \tid)\n\t*   value - The task data that is removed from the Kanban.\n\t*   id - The task data id.\n\t*/\n\t@Output() onTaskRemove: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is updated.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \toldValue, \tid)\n\t*   value - The task data that is updated.\n\t*   oldValue - The update task's old data.\n\t*   id - The task data id.\n\t*/\n\t@Output() onTaskUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \tid)\n\t*   value - The task data.\n\t*   id - The task data id.\n\t*/\n\t@Output() onTaskClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is double clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \tid)\n\t*   value - The task data.\n\t*   id - The task data id.\n\t*/\n\t@Output() onTaskDoubleClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Adds filtering. Example: const filterGroup = new Smart.FilterGroup(); const filterObject = filterGroup.createFilter('string', 'Italy', 'contains'); filterGroup.addFilter('and', filterObject); kanban.addFilter([['Country', filterGroup]]); \n\t* @param {any} filters. Filter information. Example: kanban.addFilter([['Country', filterGroup]]);. Each array item is a sub array with two items - 'dataField' and 'filterGroup' object. The 'dataField' is any valid data field from the data source bound to the Kanban like 'dueDate', 'startDate' or custom fields like 'Country'. Filter conditions which you can use in the expressions: '=', 'EQUAL','&lt;&gt;', 'NOT_EQUAL', '!=', '&lt;', 'LESS_THAN','&gt;', 'GREATER_THAN', '&lt;=', 'LESS_THAN_OR_EQUAL', '&gt;=', 'GREATER_THAN_OR_EQUAL','starts with', 'STARTS_WITH','ends with', 'ENDS_WITH', '', 'EMPTY', 'CONTAINS','DOES_NOT_CONTAIN', 'NULL','NOT_NULL'\n\t* @param {string} operator?. Logical operator between the filters of different fields. Possible values are: 'and', 'or'. \n\t*/\n    public addFilter(filters: any, operator?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addFilter(filters, operator);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addFilter(filters, operator);\n            });\n        }\n    }\n\n\t/** @description Adds sorting. Example: kanban.addSort(['Country'], 'ascending'); \n\t* @param {[] | string} dataFields. The data field(s) to sort by\n\t* @param {[] | string} orderBy. The sort direction(s) to sort the data field(s) by. Possible values are: 'ascending' and 'descending'.\n\t*/\n    public addSort(dataFields: [] | string, orderBy: [] | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addSort(dataFields, orderBy);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addSort(dataFields, orderBy);\n            });\n        }\n    }\n\n\t/** @description Adds a task to a Kanban column. If no data is specified, an empty task is added to the first column. \n\t* @param {any} data?. An object containing the new task's data\n\t*/\n    public addTask(data?: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addTask(data);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addTask(data);\n            });\n        }\n    }\n\n\t/** @description Adds a column to a Kanban. If no data is specified, an empty column is added. \n\t* @param {any} data?. An object containing the new column's data\n\t*/\n    public addColumn(data?: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addColumn(data);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addColumn(data);\n            });\n        }\n    }\n\n\t/** @description Begins an edit operation \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t*/\n    public beginEdit(task: number | string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.beginEdit(task);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.beginEdit(task);\n            });\n        }\n    }\n\n\t/** @description Ends the current edit operation and discards changes \n\t*/\n    public cancelEdit(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.cancelEdit();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.cancelEdit();\n            });\n        }\n    }\n\n\t/** @description Closes any open header panel (drop down) \n\t*/\n    public closePanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.closePanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.closePanel();\n            });\n        }\n    }\n\n\t/** @description Collapses a Kanban column. \n\t* @param {number | string} column. The index or dataField of the column to collapse\n\t*/\n    public collapse(column: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapse(column);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapse(column);\n            });\n        }\n    }\n\n\t/** @description Clears the Kanban's selection. \n\t*/\n    public clearSelection(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearSelection();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearSelection();\n            });\n        }\n    }\n\n\t/** @description Hides a Kanban column. \n\t* @param {number | string} column. The index or dataField of the column to hide\n\t*/\n    public hide(column: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hide(column);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hide(column);\n            });\n        }\n    }\n\n\t/** @description Creates a copy of a task in the same column. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t*/\n    public copyTask(task: number | string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.copyTask(task);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.copyTask(task);\n            });\n        }\n    }\n\n\t/** @description Ends the current edit operation and saves changes \n\t*/\n    public endEdit(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.endEdit();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.endEdit();\n            });\n        }\n    }\n\n\t/** @description Makes sure a task is visible by scrolling to it. If succcessful, the method returns the HTML element of the task. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @returns {HTMLElement}\n  */\n\tpublic async ensureVisible(task): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.ensureVisible(task);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Expands a Kanban column. \n\t* @param {number | string} column. The index or dataField of the column to expand\n\t*/\n    public expand(column: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expand(column);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expand(column);\n            });\n        }\n    }\n\n\t/** @description Expands all Kanban columns. \n\t*/\n    public expandAll(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expandAll();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expandAll();\n            });\n        }\n    }\n\n\t/** @description Exports the Kanban's data. \n\t* @param {string} dataFormat. The file format to export to. Supported formats: 'csv', 'html', 'json', 'pdf', 'tsv', 'xlsx', 'xml'.\n\t* @param {string} fileName. The name of the file to export to\n\t* @param {Function} callback?. A callback function to pass the exported data to (if fileName is not provided)\n\t* @returns {any}\n  */\n\tpublic async exportData(dataFormat, fileName, callback?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.exportData(dataFormat, fileName, callback);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the data of a column. The returned value is a JSON object with the following fields: 'label', 'dataField', 'collapsed', 'collapsible', 'allowRemove', 'editable', 'reorder', 'orientation'. \n\t* @param {string} dataField. The column's data field\n\t* @returns {any}\n  */\n\tpublic async getColumn(dataField): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getColumn(dataField);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the data of a task. The returned value is a JSON object with the following fields: 'checklist', 'id', 'color', 'comments', 'history', 'dueDate', 'startDate', 'priority', 'progress', 'status', 'swimlane', 'tags', 'text', 'description', 'userId', 'createdUserId', 'createdDate', 'updatedUserId', 'updatedDate' \n\t* @param {number} id. The task's id\n\t* @returns {any}\n  */\n\tpublic async getTask(id): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getTask(id);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the selected ids. The returned value is an array. Each item in the array is the 'id' of a selected task. \n\t* @param {number} id. The task's id\n\t* @returns {any}\n  */\n\tpublic async getSelectedTasks(id): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getSelectedTasks(id);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the Kanban's state. \n\t* @returns {{ collapsed: {}, dataSource: [], filtering: { filters: [], operator: string }, selection: { selected: [], selectionStart: number | string, selectionInColumn: string, swimlane: string }, sorting: { dataFields: [], dataTypes: [], orderBy: [] }, tabs: [], visibility: { taskActions: boolean, taskComments: boolean, taskDue: boolean, taskPriority: boolean, taskProgress: boolean, taskTags: boolean, taskUserIcon: boolean } }}\n  */\n\tpublic async getState(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getState();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Loads the Kanban's state. \n\t* @param {{ collapsed: {}, dataSource: [], filtering: { filters: [], operator: string }, selection: { selected: [], selectionStart?: number | string, selectionInColumn: string, swimlane: string }, sorting: { dataFields: [], dataTypes: [], orderBy: [] }, tabs: [], visibility: { taskActions: boolean, taskComments: boolean, taskDue: boolean, taskPriority: boolean, taskProgress: boolean, taskTags: boolean, taskUserIcon: boolean } }} state?. An object returned by one of the methods getState or saveState. If not passed, gets saved state from the browser's localStorage.\n\t*/\n    public loadState(state?: { collapsed: {}, dataSource: [], filtering: { filters: [], operator: string }, selection: { selected: [], selectionStart?: number | string, selectionInColumn: string, swimlane: string }, sorting: { dataFields: [], dataTypes: [], orderBy: [] }, tabs: [], visibility: { taskActions: boolean, taskComments: boolean, taskDue: boolean, taskPriority: boolean, taskProgress: boolean, taskTags: boolean, taskUserIcon: boolean } }): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.loadState(state);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.loadState(state);\n            });\n        }\n    }\n\n\t/** @description Moves a task to a different column. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @param {string} newStatus. The new status of the task (its new column's dataField)\n\t*/\n    public moveTask(task: number | string | HTMLElement, newStatus: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.moveTask(task, newStatus);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.moveTask(task, newStatus);\n            });\n        }\n    }\n\n\t/** @description Opens the \"Customize tasks\" header panel (drop down) \n\t*/\n    public openCustomizePanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openCustomizePanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openCustomizePanel();\n            });\n        }\n    }\n\n\t/** @description Opens the \"Filter\" header panel (drop down) \n\t*/\n    public openFilterPanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openFilterPanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openFilterPanel();\n            });\n        }\n    }\n\n\t/** @description Opens the \"Sort\" header panel (drop down) \n\t*/\n    public openSortPanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openSortPanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openSortPanel();\n            });\n        }\n    }\n\n\t/** @description Removes filtering \n\t*/\n    public removeFilter(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeFilter();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeFilter();\n            });\n        }\n    }\n\n\t/** @description Removes sorting \n\t*/\n    public removeSort(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeSort();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeSort();\n            });\n        }\n    }\n\n\t/** @description Removes a task. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @param {boolean} prompt?. Whether or not to prompt the user before removing the task\n\t*/\n    public removeTask(task: number | string | HTMLElement, prompt?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeTask(task, prompt);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeTask(task, prompt);\n            });\n        }\n    }\n\n\t/** @description Removes a column. \n\t* @param {string} dataField. The column's data field\n\t*/\n    public removeColumn(dataField: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeColumn(dataField);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeColumn(dataField);\n            });\n        }\n    }\n\n\t/** @description Saves the Kanban's state to the browser's localStorage. \n\t*/\n    public saveState(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveState();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveState();\n            });\n        }\n    }\n\n\t/** @description Shows a Kanban column. \n\t* @param {number | string} column. The index or dataField of the column to show\n\t*/\n    public show(column: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.show(column);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.show(column);\n            });\n        }\n    }\n\n\t/** @description Shows all Kanban columns. \n\t*/\n    public showAllColumns(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showAllColumns();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showAllColumns();\n            });\n        }\n    }\n\n\t/** @description Selects a task. \n\t* @param {number | string} task. The task's id.\n\t*/\n    public selectTask(task: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.selectTask(task);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.selectTask(task);\n            });\n        }\n    }\n\n\t/** @description Unselects a task. \n\t* @param {number | string} task. The task's id.\n\t*/\n    public unselectTask(task: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unselectTask(task);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unselectTask(task);\n            });\n        }\n    }\n\n\t/** @description Updates a task. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @param {{}} newData. The new data to visualize in the task.\n\t*/\n    public updateTask(task: number | string | HTMLElement, newData: {}): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateTask(task, newData);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateTask(task, newData);\n            });\n        }\n    }\n\n\t/** @description Updates a column. \n\t* @param {string} dataField. The new column's data field\n\t* @param {{}} newData. The new data to visualize in the column.\n\t*/\n    public updateColumn(dataField: string, newData: {}): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateColumn(dataField, newData);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateColumn(dataField, newData);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['closeHandler'] = (event: CustomEvent) => { that.onClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('close', that.eventHandlers['closeHandler']);\n\n\t\tthat.eventHandlers['closingHandler'] = (event: CustomEvent) => { that.onClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('closing', that.eventHandlers['closingHandler']);\n\n\t\tthat.eventHandlers['columnAddHandler'] = (event: CustomEvent) => { that.onColumnAdd.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnAdd', that.eventHandlers['columnAddHandler']);\n\n\t\tthat.eventHandlers['columnRemoveHandler'] = (event: CustomEvent) => { that.onColumnRemove.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnRemove', that.eventHandlers['columnRemoveHandler']);\n\n\t\tthat.eventHandlers['columnReorderHandler'] = (event: CustomEvent) => { that.onColumnReorder.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnReorder', that.eventHandlers['columnReorderHandler']);\n\n\t\tthat.eventHandlers['columnUpdateHandler'] = (event: CustomEvent) => { that.onColumnUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnUpdate', that.eventHandlers['columnUpdateHandler']);\n\n\t\tthat.eventHandlers['columnClickHandler'] = (event: CustomEvent) => { that.onColumnClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnClick', that.eventHandlers['columnClickHandler']);\n\n\t\tthat.eventHandlers['columnDoubleClickHandler'] = (event: CustomEvent) => { that.onColumnDoubleClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnDoubleClick', that.eventHandlers['columnDoubleClickHandler']);\n\n\t\tthat.eventHandlers['columnShowHandler'] = (event: CustomEvent) => { that.onColumnShow.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnShow', that.eventHandlers['columnShowHandler']);\n\n\t\tthat.eventHandlers['columnHideHandler'] = (event: CustomEvent) => { that.onColumnHide.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnHide', that.eventHandlers['columnHideHandler']);\n\n\t\tthat.eventHandlers['columnCollapseHandler'] = (event: CustomEvent) => { that.onColumnCollapse.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnCollapse', that.eventHandlers['columnCollapseHandler']);\n\n\t\tthat.eventHandlers['columnExpandHandler'] = (event: CustomEvent) => { that.onColumnExpand.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnExpand', that.eventHandlers['columnExpandHandler']);\n\n\t\tthat.eventHandlers['commentAddHandler'] = (event: CustomEvent) => { that.onCommentAdd.emit(event); }\n\t\tthat.nativeElement.addEventListener('commentAdd', that.eventHandlers['commentAddHandler']);\n\n\t\tthat.eventHandlers['commentRemoveHandler'] = (event: CustomEvent) => { that.onCommentRemove.emit(event); }\n\t\tthat.nativeElement.addEventListener('commentRemove', that.eventHandlers['commentRemoveHandler']);\n\n\t\tthat.eventHandlers['commentUpdateHandler'] = (event: CustomEvent) => { that.onCommentUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('commentUpdate', that.eventHandlers['commentUpdateHandler']);\n\n\t\tthat.eventHandlers['dragEndHandler'] = (event: CustomEvent) => { that.onDragEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\n\t\tthat.eventHandlers['draggingHandler'] = (event: CustomEvent) => { that.onDragging.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragging', that.eventHandlers['draggingHandler']);\n\n\t\tthat.eventHandlers['dragStartHandler'] = (event: CustomEvent) => { that.onDragStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\n\t\tthat.eventHandlers['filterHandler'] = (event: CustomEvent) => { that.onFilter.emit(event); }\n\t\tthat.nativeElement.addEventListener('filter', that.eventHandlers['filterHandler']);\n\n\t\tthat.eventHandlers['openHandler'] = (event: CustomEvent) => { that.onOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('open', that.eventHandlers['openHandler']);\n\n\t\tthat.eventHandlers['openingHandler'] = (event: CustomEvent) => { that.onOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('opening', that.eventHandlers['openingHandler']);\n\n\t\tthat.eventHandlers['sortHandler'] = (event: CustomEvent) => { that.onSort.emit(event); }\n\t\tthat.nativeElement.addEventListener('sort', that.eventHandlers['sortHandler']);\n\n\t\tthat.eventHandlers['taskBeforeAddHandler'] = (event: CustomEvent) => { that.onTaskBeforeAdd.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskBeforeAdd', that.eventHandlers['taskBeforeAddHandler']);\n\n\t\tthat.eventHandlers['taskAddHandler'] = (event: CustomEvent) => { that.onTaskAdd.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskAdd', that.eventHandlers['taskAddHandler']);\n\n\t\tthat.eventHandlers['taskRemoveHandler'] = (event: CustomEvent) => { that.onTaskRemove.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskRemove', that.eventHandlers['taskRemoveHandler']);\n\n\t\tthat.eventHandlers['taskUpdateHandler'] = (event: CustomEvent) => { that.onTaskUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskUpdate', that.eventHandlers['taskUpdateHandler']);\n\n\t\tthat.eventHandlers['taskClickHandler'] = (event: CustomEvent) => { that.onTaskClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskClick', that.eventHandlers['taskClickHandler']);\n\n\t\tthat.eventHandlers['taskDoubleClickHandler'] = (event: CustomEvent) => { that.onTaskDoubleClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskDoubleClick', that.eventHandlers['taskDoubleClickHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('close', that.eventHandlers['closeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('closing', that.eventHandlers['closingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnAddHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnAdd', that.eventHandlers['columnAddHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnRemoveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnRemove', that.eventHandlers['columnRemoveHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnReorderHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnReorder', that.eventHandlers['columnReorderHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnUpdate', that.eventHandlers['columnUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnClick', that.eventHandlers['columnClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnDoubleClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnDoubleClick', that.eventHandlers['columnDoubleClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnShowHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnShow', that.eventHandlers['columnShowHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnHideHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnHide', that.eventHandlers['columnHideHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnCollapseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnCollapse', that.eventHandlers['columnCollapseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnExpandHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnExpand', that.eventHandlers['columnExpandHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['commentAddHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('commentAdd', that.eventHandlers['commentAddHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['commentRemoveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('commentRemove', that.eventHandlers['commentRemoveHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['commentUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('commentUpdate', that.eventHandlers['commentUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['draggingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragging', that.eventHandlers['draggingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['filterHandler']) {\n\t\t\tthat.nativeElement.onfilterHandler = null;\n\t\t}\n\n\t\tif (that.eventHandlers['openHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('open', that.eventHandlers['openHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('opening', that.eventHandlers['openingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['sortHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('sort', that.eventHandlers['sortHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskBeforeAddHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskBeforeAdd', that.eventHandlers['taskBeforeAddHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskAddHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskAdd', that.eventHandlers['taskAddHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskRemoveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskRemove', that.eventHandlers['taskRemoveHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskUpdate', that.eventHandlers['taskUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskClick', that.eventHandlers['taskClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskDoubleClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskDoubleClick', that.eventHandlers['taskDoubleClickHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { KanbanComponent } from './smart.kanban';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [KanbanComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [KanbanComponent]\n})\n\nexport class KanbanModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {BaseElement as ɵa} from './smart.element';"],"names":["tslib_1.__decorate","tslib_1.__extends"],"mappings":";;;;IAYI,qBAAY,GAAe;QAajB,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QACjD,YAAO,GAAsB,IAAI,YAAY,EAAE,CAAC;QAChD,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QACjD,aAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QAfvD,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAoB,CAAC;QAE9C,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAA;QAED,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAA;KACJ;IASM,sCAAgB,GAAvB,UAAwB,IAAY,EAAE,QAA4C,EAAE,OAAkD;QAAlD,wBAAA,EAAA,eAAkD;QAClI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;KACnE;IAEM,yCAAmB,GAA1B,UAA2B,IAAY,EAAE,QAA4C,EAAE,OAAkD;QAAlD,wBAAA,EAAA,eAAkD;QACxI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;KAChE;IAEM,mCAAa,GAApB,UAAqB,KAAY;QAChC,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC/C;IAEM,0BAAI,GAAX;QACC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;KAC1B;IAEM,2BAAK,GAAZ;QACC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAC3B;IAEM,2BAAK,GAAZ,UAAa,OAAsB;QAClC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAClC;IAID,sBAAI,+BAAM;;aAAV;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC;SAClE;aACD,UAAW,KAAa;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC;SACnE;;;OAHA;IAOD,sBAAI,+CAAsB;;aAA1B;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG,SAAS,CAAC;SAClF;aACD,UAA2B,KAAU;YACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG,KAAK,GAAG,SAAS,CAAC;SACnF;;;OAHA;IAOD,sBAAI,iCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAU;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,oCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAc;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,8BAAK;;aAAT;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC;SACjE;aACD,UAAU,KAAa;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;SAClE;;;OAHA;IAvEYA;QAAT,MAAM,EAAE;iDAAkD;IACjDA;QAAT,MAAM,EAAE;gDAAiD;IAChDA;QAAT,MAAM,EAAE;iDAAkD;IACjDA;QAAT,MAAM,EAAE;iDAAkD;IA8B9DA;QADC,KAAK,EAAE;6CAGP;IAODA;QADC,KAAK,EAAE;6DAGP;IAODA;QADC,KAAK,EAAE;+CAGP;IAODA;QADC,KAAK,EAAE;kDAGP;IAODA;QADC,KAAK,EAAE;4CAGP;IAIF,kBAAC;CAzFD,IAyFC;IAEY,KAAK,GAAQ,MAAM,CAAC,KAAK;;;ICvFDC,mCAAW;IAC/C,yBAAY,GAAuB;QAAnC,YACC,kBAAM,GAAG,CAAC,SAEV;QAEO,mBAAa,GAAU,EAAE,CAAC;;;;;;;QAkpBxB,cAAQ,GAA8B,IAAI,YAAY,EAAE,CAAC;;;QAIzD,aAAO,GAA8B,IAAI,YAAY,EAAE,CAAC;;;QAIxD,eAAS,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQ1D,iBAAW,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQ5D,oBAAc,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQ/D,qBAAe,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQhE,oBAAc,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQ/D,mBAAa,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQ9D,yBAAmB,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAOpE,kBAAY,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO7D,kBAAY,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO7D,sBAAgB,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAOjE,oBAAc,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO/D,kBAAY,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO7D,qBAAe,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAOhE,qBAAe,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;;QAYhE,eAAS,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;;QAS1D,gBAAU,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;;;;QAW3D,iBAAW,GAA8B,IAAI,YAAY,EAAE,CAAC;;;QAI5D,cAAQ,GAA8B,IAAI,YAAY,EAAE,CAAC;;;QAIzD,YAAM,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQvD,eAAS,GAA8B,IAAI,YAAY,EAAE,CAAC;;;QAI1D,YAAM,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAOvD,qBAAe,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAOhE,eAAS,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO1D,kBAAY,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;;QAQ7D,kBAAY,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO7D,iBAAW,GAA8B,IAAI,YAAY,EAAE,CAAC;;;;;;QAO5D,uBAAiB,GAA8B,IAAI,YAAY,EAAE,CAAC;QA71B3E,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAuB,CAAC;;KACjD;;;;IAQM,yCAAe,GAAtB,UAAuB,UAAe;QAAf,2BAAA,EAAA,eAAe;QAClC,IAAI,CAAC,aAAa,GAAW,QAAQ,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACvE,KAAK,IAAI,YAAY,IAAI,UAAU,EAAE;YACnC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC;SAC7D;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;KAC1B;IAGD,sBAAI,+CAAkB;;aAAtB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,SAAS,CAAC;SAC9E;aACD,UAAuB,KAAc;YACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC/E;;;OAHA;IAOD,sBAAI,4CAAe;;aAAnB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,SAAS,CAAC;SAC3E;aACD,UAAoB,KAAc;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,KAAK,GAAG,SAAS,CAAC;SAC5E;;;OAHA;IAOD,sBAAI,8CAAiB;;aAArB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,SAAS,CAAC;SAC7E;aACD,UAAsB,KAAc;YACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC9E;;;OAHA;IAOD,sBAAI,4CAAe;;aAAnB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,SAAS,CAAC;SAC3E;aACD,UAAoB,KAAc;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,KAAK,GAAG,SAAS,CAAC;SAC5E;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,oDAAuB;;aAA3B;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,GAAG,SAAS,CAAC;SACnF;aACD,UAA4B,KAA6C;YACxE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,GAAG,KAAK,GAAG,SAAS,CAAC;SACpF;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,8CAAiB;;aAArB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,SAAS,CAAC;SAC7E;aACD,UAAsB,KAAoB;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC9E;;;OAHA;IAOD,sBAAI,sCAAS;;aAAb;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;SACrE;aACD,UAAc,KAAc;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC;SACtE;;;OAHA;IAOD,sBAAI,sCAAS;;aAAb;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;SACrE;aACD,UAAc,KAAc;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC;SACtE;;;OAHA;IAOD,sBAAI,oDAAuB;;aAA3B;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,GAAG,SAAS,CAAC;SACnF;aACD,UAA4B,KAAc;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,GAAG,KAAK,GAAG,SAAS,CAAC;SACpF;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAc;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAc;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,6CAAgB;;aAApB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,SAAS,CAAC;SAC5E;aACD,UAAqB,KAAc;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC7E;;;OAHA;IAOD,sBAAI,wCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAc;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,wCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAoB;YACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,qDAAwB;;aAA5B;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,GAAG,SAAS,CAAC;SACpF;aACD,UAA6B,KAAc;YAC1C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,wBAAwB,GAAG,KAAK,GAAG,SAAS,CAAC;SACrF;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,oCAAO;;aAAX;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,SAAS,CAAC;SACnE;aACD,UAAY,KAAqB;YAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC;SACpE;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAc;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAc;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,iDAAoB;;aAAxB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,SAAS,CAAC;SAChF;aACD,UAAyB,KAAU;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,KAAK,GAAG,SAAS,CAAC;SACjF;;;OAHA;IAOD,sBAAI,2CAAc;;aAAlB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,SAAS,CAAC;SAC1E;aACD,UAAmB,KAAoC;YACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,KAAK,GAAG,SAAS,CAAC;SAC3E;;;OAHA;IAOD,sBAAI,wCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAsB;YACrC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAc;YAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,wDAA2B;;aAA/B;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,2BAA2B,GAAG,SAAS,CAAC;SACvF;aACD,UAAgC,KAAU;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,2BAA2B,GAAG,KAAK,GAAG,SAAS,CAAC;SACxF;;;OAHA;IAOD,sBAAI,2CAAc;;aAAlB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,SAAS,CAAC;SAC1E;aACD,UAAmB,KAAU;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,KAAK,GAAG,SAAS,CAAC;SAC3E;;;OAHA;IAOD,sBAAI,uCAAU;;aAAd;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,SAAS,CAAC;SACtE;aACD,UAAe,KAAyB;YACvC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,GAAG,SAAS,CAAC;SACvE;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAmT;YACpU,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,uCAAU;;aAAd;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,SAAS,CAAC;SACtE;aACD,UAAe,KAAc;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,GAAG,SAAS,CAAC;SACvE;;;OAHA;IAOD,sBAAI,qCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAc;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,6CAAgB;;aAApB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,SAAS,CAAC;SAC5E;aACD,UAAqB,KAAa;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC7E;;;OAHA;IAOD,sBAAI,6CAAgB;;aAApB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,SAAS,CAAC;SAC5E;aACD,UAAqB,KAAa;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC7E;;;OAHA;IAOD,sBAAI,2CAAc;;aAAlB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,SAAS,CAAC;SAC1E;aACD,UAAmB,KAAoC;YACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,cAAc,GAAG,KAAK,GAAG,SAAS,CAAC;SAC3E;;;OAHA;IAOD,sBAAI,sCAAS;;aAAb;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;SACrE;aACD,UAAc,KAA+B;YAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC;SACtE;;;OAHA;IAOD,sBAAI,mCAAM;;aAAV;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,SAAS,CAAC;SAClE;aACD,UAAW,KAAa;YACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC;SACnE;;;OAHA;IAOD,sBAAI,qCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAU;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAU;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,4CAAe;;aAAnB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,SAAS,CAAC;SAC3E;aACD,UAAoB,KAAU;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,KAAK,GAAG,SAAS,CAAC;SAC5E;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAU;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,iDAAoB;;aAAxB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,SAAS,CAAC;SAChF;aACD,UAAyB,KAAU;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,KAAK,GAAG,SAAS,CAAC;SACjF;;;OAHA;IAOD,sBAAI,iDAAoB;;aAAxB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,SAAS,CAAC;SAChF;aACD,UAAyB,KAAU;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,GAAG,KAAK,GAAG,SAAS,CAAC;SACjF;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAmC;YACpD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,8CAAiB;;aAArB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,SAAS,CAAC;SAC7E;aACD,UAAsB,KAAa;YAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC9E;;;OAHA;IAOD,sBAAI,wCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAc;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,qCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAc;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,sCAAS;;aAAb;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;SACrE;aACD,UAAc,KAAuB;YACpC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,GAAG,KAAK,GAAG,SAAS,CAAC;SACtE;;;OAHA;IAOD,sBAAI,0CAAa;;aAAjB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,SAAS,CAAC;SACzE;aACD,UAAkB,KAAa;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,KAAK,GAAG,SAAS,CAAC;SAC1E;;;OAHA;IAOD,sBAAI,wCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAa;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,iCAAI;;aAAR;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,SAAS,CAAC;SAChE;aACD,UAAS,KAAY;YACpB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,GAAG,KAAK,GAAG,SAAS,CAAC;SACjE;;;OAHA;IAOD,sBAAI,wCAAW;;aAAf;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,SAAS,CAAC;SACvE;aACD,UAAgB,KAAc;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;SACxE;;;OAHA;IAOD,sBAAI,gDAAmB;;aAAvB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,GAAG,SAAS,CAAC;SAC/E;aACD,UAAwB,KAAU;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,mBAAmB,GAAG,KAAK,GAAG,SAAS,CAAC;SAChF;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,oCAAO;;aAAX;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,SAAS,CAAC;SACnE;aACD,UAAY,KAAc;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,GAAG,SAAS,CAAC;SACpE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAkC;YAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,6CAAgB;;aAApB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,SAAS,CAAC;SAC5E;aACD,UAAqB,KAAU;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC7E;;;OAHA;IAOD,sBAAI,mDAAsB;;aAA1B;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG,SAAS,CAAC;SAClF;aACD,UAA2B,KAAc;YACxC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,GAAG,KAAK,GAAG,SAAS,CAAC;SACnF;;;OAHA;IAOD,sBAAI,8CAAiB;;aAArB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,SAAS,CAAC;SAC7E;aACD,UAAsB,KAAc;YACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,GAAG,KAAK,GAAG,SAAS,CAAC;SAC9E;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAkC;YAClD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,qCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAc;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAU;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,kCAAK;;aAAT;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC;SACjE;aACD,UAAU,KAAa;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;SAClE;;;OAHA;IAOD,sBAAI,yCAAY;;aAAhB;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,SAAS,CAAC;SACxE;aACD,UAAiB,KAAc;YAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,KAAK,GAAG,SAAS,CAAC;SACzE;;;OAHA;IAOD,sBAAI,qCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAuB;YACnC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,qCAAQ;;aAAZ;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;SACpE;aACD,UAAa,KAAc;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACrE;;;OAHA;IAOD,sBAAI,kCAAK;;aAAT;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC;SACjE;aACD,UAAU,KAAmB;YAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;SAClE;;;OAHA;;;;;IAyNS,mCAAS,GAAhB,UAAiB,OAAY,EAAE,QAAiB;QAAhD,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SACnD;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;aACnD,CAAC,CAAC;SACN;KACJ;;;;;IAMM,iCAAO,GAAd,UAAe,UAAuB,EAAE,OAAoB;QAA5D,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;SACnD;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;aACnD,CAAC,CAAC;SACN;KACJ;;;;IAKM,iCAAO,GAAd,UAAe,IAAU;QAAzB,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACpC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACpC,CAAC,CAAC;SACN;KACJ;;;;IAKM,mCAAS,GAAhB,UAAiB,IAAU;QAA3B,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACtC,CAAC,CAAC;SACN;KACJ;;;;IAKM,mCAAS,GAAhB,UAAiB,IAAmC;QAApD,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SACtC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACtC,CAAC,CAAC;SACN;KACJ;;;IAIM,oCAAU,GAAjB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;SACnC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;aACnC,CAAC,CAAC;SACN;KACJ;;;IAIM,oCAAU,GAAjB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;SACnC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;aACnC,CAAC,CAAC;SACN;KACJ;;;;IAKM,kCAAQ,GAAf,UAAgB,MAAuB;QAAvC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;SACvC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;aACvC,CAAC,CAAC;SACN;KACJ;;;IAIM,wCAAc,GAArB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;SACvC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;aACvC,CAAC,CAAC;SACN;KACJ;;;;IAKM,8BAAI,GAAX,UAAY,MAAuB;QAAnC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACnC,CAAC,CAAC;SACN;KACJ;;;;IAKM,kCAAQ,GAAf,UAAgB,IAAmC;QAAnD,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACrC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;aACrC,CAAC,CAAC;SACN;KACJ;;;IAIM,iCAAO,GAAd;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;SAChC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;aAChC,CAAC,CAAC;SACN;KACJ;;;;;IAMS,uCAAa,GAA1B,UAA2B,IAAI;;;;;;;wBACxB,iBAAiB,GAAG;4BAChB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gCACtB,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC;oCAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oCACtD,OAAO,CAAC,MAAM,CAAC,CAAA;iCAClB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC;wBACa,qBAAM,iBAAiB,EAAE,EAAA;;wBAAlC,MAAM,GAAG,SAAyB;wBAExC,sBAAO,MAAM,EAAC;;;;KACjB;;;;IAKM,gCAAM,GAAb,UAAc,MAAuB;QAArC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;aACrC,CAAC,CAAC;SACN;KACJ;;;IAIM,mCAAS,GAAhB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;SAClC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;aAClC,CAAC,CAAC;SACN;KACJ;;;;;;;IAQS,oCAAU,GAAvB,UAAwB,UAAU,EAAE,QAAQ,EAAE,QAAS;;;;;;;wBAChD,iBAAiB,GAAG;4BAChB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gCACtB,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC;oCAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;oCAC7E,OAAO,CAAC,MAAM,CAAC,CAAA;iCAClB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC;wBACa,qBAAM,iBAAiB,EAAE,EAAA;;wBAAlC,MAAM,GAAG,SAAyB;wBAExC,sBAAO,MAAM,EAAC;;;;KACjB;;;;;IAMS,mCAAS,GAAtB,UAAuB,SAAS;;;;;;;wBACzB,iBAAiB,GAAG;4BAChB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gCACtB,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC;oCAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oCACvD,OAAO,CAAC,MAAM,CAAC,CAAA;iCAClB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC;wBACa,qBAAM,iBAAiB,EAAE,EAAA;;wBAAlC,MAAM,GAAG,SAAyB;wBAExC,sBAAO,MAAM,EAAC;;;;KACjB;;;;;IAMS,iCAAO,GAApB,UAAqB,EAAE;;;;;;;wBAChB,iBAAiB,GAAG;4BAChB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gCACtB,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC;oCAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oCAC9C,OAAO,CAAC,MAAM,CAAC,CAAA;iCAClB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC;wBACa,qBAAM,iBAAiB,EAAE,EAAA;;wBAAlC,MAAM,GAAG,SAAyB;wBAExC,sBAAO,MAAM,EAAC;;;;KACjB;;;;;IAMS,0CAAgB,GAA7B,UAA8B,EAAE;;;;;;;wBACzB,iBAAiB,GAAG;4BAChB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gCACtB,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC;oCAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;oCACvD,OAAO,CAAC,MAAM,CAAC,CAAA;iCAClB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC;wBACa,qBAAM,iBAAiB,EAAE,EAAA;;wBAAlC,MAAM,GAAG,SAAyB;wBAExC,sBAAO,MAAM,EAAC;;;;KACjB;;;;IAKS,kCAAQ,GAArB;;;;;;;wBACO,iBAAiB,GAAG;4BAChB,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO;gCACtB,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC;oCAC5B,IAAM,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;oCAC7C,OAAO,CAAC,MAAM,CAAC,CAAA;iCAClB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC;wBACa,qBAAM,iBAAiB,EAAE,EAAA;;wBAAlC,MAAM,GAAG,SAAyB;wBAExC,sBAAO,MAAM,EAAC;;;;KACjB;;;;IAKM,mCAAS,GAAhB,UAAiB,KAA6a;QAA9b,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACvC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACvC,CAAC,CAAC;SACN;KACJ;;;;;IAMM,kCAAQ,GAAf,UAAgB,IAAmC,EAAE,SAAiB;QAAtE,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;SAChD;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAChD,CAAC,CAAC;SACN;KACJ;;;IAIM,4CAAkB,GAAzB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;SAC3C;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,kBAAkB,EAAE,CAAC;aAC3C,CAAC,CAAC;SACN;KACJ;;;IAIM,yCAAe,GAAtB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;SACxC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;aACxC,CAAC,CAAC;SACN;KACJ;;;IAIM,uCAAa,GAApB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;SACtC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;aACtC,CAAC,CAAC;SACN;KACJ;;;IAIM,sCAAY,GAAnB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;SACrC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;aACrC,CAAC,CAAC;SACN;KACJ;;;IAIM,oCAAU,GAAjB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;SACnC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;aACnC,CAAC,CAAC;SACN;KACJ;;;;;IAMM,oCAAU,GAAjB,UAAkB,IAAmC,EAAE,MAAgB;QAAvE,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SAC/C;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;aAC/C,CAAC,CAAC;SACN;KACJ;;;;IAKM,sCAAY,GAAnB,UAAoB,SAAiB;QAArC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAC9C;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;aAC9C,CAAC,CAAC;SACN;KACJ;;;IAIM,mCAAS,GAAhB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;SAClC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;aAClC,CAAC,CAAC;SACN;KACJ;;;;IAKM,8BAAI,GAAX,UAAY,MAAuB;QAAnC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;aACnC,CAAC,CAAC;SACN;KACJ;;;IAIM,wCAAc,GAArB;QAAA,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;SACvC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;aACvC,CAAC,CAAC;SACN;KACJ;;;;IAKM,oCAAU,GAAjB,UAAkB,IAAqB;QAAvC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SACvC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;aACvC,CAAC,CAAC;SACN;KACJ;;;;IAKM,sCAAY,GAAnB,UAAoB,IAAqB;QAAzC,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzC;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACzC,CAAC,CAAC;SACN;KACJ;;;;;IAMM,oCAAU,GAAjB,UAAkB,IAAmC,EAAE,OAAW;QAAlE,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAChD;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;aAChD,CAAC,CAAC;SACN;KACJ;;;;;IAMM,sCAAY,GAAnB,UAAoB,SAAiB,EAAE,OAAW;QAAlD,iBAUC;QATG,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YAC/B,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;SACvD;aAED;YACI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;gBAC5B,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;aACvD,CAAC,CAAC;SACN;KACJ;IAGJ,sBAAI,uCAAU;aAAd;YACC,OAAO,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC;SAClE;;;OAAA;IAED,kCAAQ,GAAR;KACC;IAEE,yCAAe,GAAf;QACE,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE3C,KAAK,CAAC,MAAM,EAAE,CAAC;QAEf,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAElD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,cAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;QAClF,IAAI,CAAC,MAAM,EAAE,CAAC;KACd;IAED,qCAAW,GAAX;QACC,IAAI,CAAC,QAAQ,EAAE,CAAC;KAChB;IAED,qCAAW,GAAX,UAAY,OAAsB;QACjC,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;YACxD,KAAK,IAAM,QAAQ,IAAI,OAAO,EAAE;gBAC/B,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;oBACrC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC;iBAC9D;aACD;SACD;KACD;;IAGO,gCAAM,GAAd;QACO,IAAM,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC5F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;QAEnF,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC1F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QAEjF,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC9F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAErF,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAClG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAEzF,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACxG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAE/F,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC1G,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAEjG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACxG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAE/F,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACtG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAE7F,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAClH,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAEzG,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACpG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3F,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACpG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3F,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC5G,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAEnG,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACxG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAE/F,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACpG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3F,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC1G,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAEjG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC1G,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAEjG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC9F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAErF,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAChG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAClG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAEzF,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC5F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;QAEnF,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACxF,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;QAE/E,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC9F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAErF,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACxF,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;QAE/E,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC1G,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;QAEjG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC9F,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;QAErF,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACpG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3F,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QACpG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;QAE3F,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAClG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAEzF,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,GAAG,UAAC,KAAkB,IAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAA;QAC9G,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC,CAAC;KAErG;;IAGO,kCAAQ,GAAhB;QACO,IAAM,IAAI,GAAG,IAAI,CAAC;QACxB,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;SACtF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,EAAE;YACvC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;SACpF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACxF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE;YAC3C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC5F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE;YAC9C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;SAClG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE;YAC9C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;SAClG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE;YAC7C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAChG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,EAAE;YACnD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,0BAA0B,CAAC,CAAC,CAAC;SAC5G;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,EAAE;YAChD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,CAAC;SACtG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,EAAE;YAC9C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;SAClG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACxF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,EAAE;YAC1C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC,CAAC;SAC1F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE;YAC3C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC5F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,EAAE;YACxC,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,IAAI,CAAC;SAC1C;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;SAClF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACxF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;SAClF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,EAAE;YAC/C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC,CAAC;SACpG;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE;YACzC,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACxF;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,EAAE;YAC5C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC,CAAC;SAC9F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,EAAE;YAC3C,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC;SAC5F;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,EAAE;YACjD,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC,CAAC;SACxG;KAED;;gBAhoDgB,UAAU;;IAoB3BD;QADC,KAAK,EAAE;6DAGP;IAODA;QADC,KAAK,EAAE;0DAGP;IAODA;QADC,KAAK,EAAE;4DAGP;IAODA;QADC,KAAK,EAAE;0DAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;kEAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;4DAGP;IAODA;QADC,KAAK,EAAE;oDAGP;IAODA;QADC,KAAK,EAAE;oDAGP;IAODA;QADC,KAAK,EAAE;kEAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;2DAGP;IAODA;QADC,KAAK,EAAE;sDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;sDAGP;IAODA;QADC,KAAK,EAAE;mEAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;kDAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;+DAGP;IAODA;QADC,KAAK,EAAE;yDAGP;IAODA;QADC,KAAK,EAAE;sDAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;sEAGP;IAODA;QADC,KAAK,EAAE;yDAGP;IAODA;QADC,KAAK,EAAE;qDAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;qDAGP;IAODA;QADC,KAAK,EAAE;mDAGP;IAODA;QADC,KAAK,EAAE;2DAGP;IAODA;QADC,KAAK,EAAE;2DAGP;IAODA;QADC,KAAK,EAAE;yDAGP;IAODA;QADC,KAAK,EAAE;oDAGP;IAODA;QADC,KAAK,EAAE;iDAGP;IAODA;QADC,KAAK,EAAE;mDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;0DAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;+DAGP;IAODA;QADC,KAAK,EAAE;+DAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;4DAGP;IAODA;QADC,KAAK,EAAE;sDAGP;IAODA;QADC,KAAK,EAAE;mDAGP;IAODA;QADC,KAAK,EAAE;oDAGP;IAODA;QADC,KAAK,EAAE;wDAGP;IAODA;QADC,KAAK,EAAE;sDAGP;IAODA;QADC,KAAK,EAAE;+CAGP;IAODA;QADC,KAAK,EAAE;sDAGP;IAODA;QADC,KAAK,EAAE;8DAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;kDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;2DAGP;IAODA;QADC,KAAK,EAAE;iEAGP;IAODA;QADC,KAAK,EAAE;4DAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;mDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;gDAGP;IAODA;QADC,KAAK,EAAE;uDAGP;IAODA;QADC,KAAK,EAAE;mDAGP;IAODA;QADC,KAAK,EAAE;mDAGP;IAODA;QADC,KAAK,EAAE;gDAGP;IAWSA;QAAT,MAAM,EAAE;qDAA0D;IAIzDA;QAAT,MAAM,EAAE;oDAAyD;IAIxDA;QAAT,MAAM,EAAE;sDAA2D;IAQ1DA;QAAT,MAAM,EAAE;wDAA6D;IAQ5DA;QAAT,MAAM,EAAE;2DAAgE;IAQ/DA;QAAT,MAAM,EAAE;4DAAiE;IAQhEA;QAAT,MAAM,EAAE;2DAAgE;IAQ/DA;QAAT,MAAM,EAAE;0DAA+D;IAQ9DA;QAAT,MAAM,EAAE;gEAAqE;IAOpEA;QAAT,MAAM,EAAE;yDAA8D;IAO7DA;QAAT,MAAM,EAAE;yDAA8D;IAO7DA;QAAT,MAAM,EAAE;6DAAkE;IAOjEA;QAAT,MAAM,EAAE;2DAAgE;IAO/DA;QAAT,MAAM,EAAE;yDAA8D;IAO7DA;QAAT,MAAM,EAAE;4DAAiE;IAOhEA;QAAT,MAAM,EAAE;4DAAiE;IAYhEA;QAAT,MAAM,EAAE;sDAA2D;IAS1DA;QAAT,MAAM,EAAE;uDAA4D;IAW3DA;QAAT,MAAM,EAAE;wDAA6D;IAI5DA;QAAT,MAAM,EAAE;qDAA0D;IAIzDA;QAAT,MAAM,EAAE;mDAAwD;IAQvDA;QAAT,MAAM,EAAE;sDAA2D;IAI1DA;QAAT,MAAM,EAAE;mDAAwD;IAOvDA;QAAT,MAAM,EAAE;4DAAiE;IAOhEA;QAAT,MAAM,EAAE;sDAA2D;IAO1DA;QAAT,MAAM,EAAE;yDAA8D;IAQ7DA;QAAT,MAAM,EAAE;yDAA8D;IAO7DA;QAAT,MAAM,EAAE;wDAA6D;IAO5DA;QAAT,MAAM,EAAE;8DAAmE;IAh2BhE,eAAe;QAJ3B,SAAS,CAAC;YACV,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,8BAA8B;SAClE,CAAC;OAEW,eAAe,CAkoD3B;IAAD,sBAAC;CAAA,CAloDoC,WAAW;;;ICJhD;KAA6B;IAAhB,YAAY;QANxB,QAAQ,CAAC;YACN,YAAY,EAAE,CAAC,eAAe,CAAC;YAClC,OAAO,EAAE,CAAC,sBAAsB,CAAC;YACjC,OAAO,EAAE,CAAC,eAAe,CAAC;SAC1B,CAAC;OAEW,YAAY,CAAI;IAAD,mBAAC;CAA7B;;ACXA;;GAEG;;;;"}