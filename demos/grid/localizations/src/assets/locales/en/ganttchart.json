{
'duplicateIds': '{{elementType}}: DataSource contains duplicate ids. Tasks should have unique ids. The following ids are duplicating: {{duplicates}}.',
                        'invalidNonworkingRange': '{{elementType}}: Invalid {{property}} value. {{property}} should not contain all possible days/hours ' +
                            'because it will result in an endless timeline. The value has been validated by removing the last item from the new value range.',
                        'invalidValue': '{{elementType}}: Invalid {{property}} value. {{property}} should be of type {{typeOne}} or {{typeTwo}}.',
                        'incorrectArgument': '{{elementType}}: Incorrect argument {{argumentName}} in method {{methodName}}.',
                        'outOfBounds': '{{elementType}}: Out of bounds argument {{argumentName}} in method {{methodName}}.',
                        'missingReference': '{{elementType}}: Missing reference to {{file}} in method {{methodName}}.',
                        'alreadyExists': '{{elementType}}: The item already exists when calling the {{methodName}} method.',
                        'notExisting': '{{elementType}}: The item does not exists when calling the {{methodName}} method.',
                        'notAProject': '{{elementType}}: The {{argumentName}} argument in {{methodName}} method does not reference an item of type \'project\'.',
                        'noId': 'jqxGanttChart requires an id in order to save/load/clear a state.',
                        'ok': 'Ok',
                        'add': 'Add',
                        'remove': 'Remove',
                        'cancel': 'Cancel',
                        'delete': 'Delete',
                        'confirm': '{{componentName}} will be deleted permanently, <b>are you sure? </b>',
                        'taskColumnLabel': 'Task Name',
                        'resourceColumnLabel': 'Resource Name',
                        'deleteLink': 'Delete link',
                        'unassigned': 'Unassigned',
                        'generalTab': 'General',
                        'dependencyTab': 'Dependency',
                        'segmentsTab': 'Segments',
                        'segment': 'Segment',
                        'dependencyValidation': '*The Task cannot be connected to itself.',
                        'segmentsCountValidation': '*Segmented Tasks must have at least 2 segments. ',
                        'segmentConflictError': '*The Segment "{{label}}" is in conflict, because it starts on/before and ends on/after the {{dateConflict}} of Segment "{{conflictLabel}}." ',
                        'segmentStartError': '*The Segment "{{label}}" cannot start before it ends and cannot end before it starts.',
                        'segmentEndError': '*The Segment "{{label}}" cannot start when it ends.',
                        'segmentRangeError': '*The Segment "{{label}}" is out of Task date range. The first segment must start when the task starts and the last segment must end when the task ends.',
                        'label': 'Label',
                        'duration': 'Duration',
                        'dateStart': 'Date Start',
                        'dateEnd': 'Date End',
                        'id': 'Id',
                        'name': 'Name',
                        'type': 'Type',
                        'lag': 'Lag',
                        'startToStart': 'Start-To-Start',
                        'endToStart': 'End-To-Start',
                        'endToEnd': 'End-To-End',
                        'startToEnd': 'Start-To-End',
                        'overdue': 'Overdue',
                        'weeks': 'week(s)',
                        'days': 'day(s)',
                        'hours': 'hour(s)',
                        'minutes': 'minute(s)',
                        'seconds': 'second(s)',
                        'miliseconds': 'milisecond(s)',
                        'task': 'Task',
                        'resource': 'Resource',
                        'assignments': 'Assignments',
                        'startTask': 'Task Start',
                        'endTask': 'Task End',
                        'deadline': 'Deadline',
                        'quarter': 'Quarter',
                        'quarterShort': 'Q',
                        'itemsPerPage': 'Items per page:',
                        'lastButton': 'Last',
                        'firstButton': 'First',
                        'summaryPrefix': 'of',
                        'previousButton': 'Previous',
                        'nextButton': 'Next'
}