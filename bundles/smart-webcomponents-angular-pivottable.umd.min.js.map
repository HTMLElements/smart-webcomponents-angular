{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/pivottable/smart.element.ts","ng://smart-webcomponents-angular/pivottable/smart.pivottable.ts","ng://smart-webcomponents-angular/pivottable/smart.pivottable.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","PivotTableComponent","_this","_super","eventHandlers","onCellClick","onChange","onColumnClick","onFilter","onSort","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","animation","columnReorder","columns","columnTotals","columnTotalsPosition","conditionalFormatting","dataSource","designer","designerPosition","disabled","drillDown","freezeHeader","getDefaultSummaryFunction","grandTotal","groupLayout","keyboardNavigation","onCellRender","onColumnRender","onInit","rowTotals","rowTotalsPosition","selection","selectionMode","sortMode","toolbar","tooltip","addFilter","dataField","filter","isRendered","whenRendered","clearFilters","clearSelection","clearSort","collapseAllRows","collapseRow","rowId","expandAllRows","expandRow","exportData","dataFormat","fileName","callback","getResultOnRender","_a","getDynamicColumns","getSelection","refresh","removeFilter","select","sortBy","columnDefinition","sortOrder","unselect","ngOnInit","ngAfterViewInit","Render","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","onfilterHandler","ElementRef","Directive","selector","PivotTableModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { PivotTable } from './../index';\nimport { Animation, PivotTableColumnAlign, PivotTableColumnDataType, PivotTableColumnSummary, PivotTableColumnTotalsPosition, PivotTableConditionalFormattingCondition, PivotTableConditionalFormattingFontFamily, PivotTableConditionalFormattingFontSize, PivotTableDesignerPosition, PivotTableGroupLayout, PivotTableRowTotalsPosition, PivotTableSelectionMode, PivotTableSortMode, PivotTableColumn, PivotTableConditionalFormatting, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, PivotTableColumnAlign, PivotTableColumnDataType, PivotTableColumnSummary, PivotTableColumnTotalsPosition, PivotTableConditionalFormattingCondition, PivotTableConditionalFormattingFontFamily, PivotTableConditionalFormattingFontSize, PivotTableDesignerPosition, PivotTableGroupLayout, PivotTableRowTotalsPosition, PivotTableSelectionMode, PivotTableSortMode, PivotTableColumn, PivotTableConditionalFormatting, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { PivotTable } from './../index';\n\n\n@Directive({\n\tselector: 'smart-pivot-table, [smart-pivot-table]'\n})\n\nexport class PivotTableComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<PivotTable>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as PivotTable;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: PivotTable;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <PivotTable>document.createElement('smart-pivot-table');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the reordering of columns is enabled. */\n\t@Input()\n\tget columnReorder(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnReorder : undefined;\n\t}\n\tset columnReorder(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnReorder = value : undefined;\n\t}\n\n\t/** @description Describes the columns of the PivotTable's original tabular data. Based on these settings and the data source, the actual columns of the PivotTable are dynamically generated. */\n\t@Input()\n\tget columns(): PivotTableColumn[] {\n\t\treturn this.nativeElement ? this.nativeElement.columns : undefined;\n\t}\n\tset columns(value: PivotTableColumn[]) {\n\t\tthis.nativeElement ? this.nativeElement.columns = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether to show total columns for each pivot data point. When enabled, all summary columns must have the same summary function set by which total columns are calculated. */\n\t@Input()\n\tget columnTotals(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnTotals : undefined;\n\t}\n\tset columnTotals(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnTotals = value : undefined;\n\t}\n\n\t/** @description Sets or gets the position of total columns (shown when columnTotals is enabled). */\n\t@Input()\n\tget columnTotalsPosition(): PivotTableColumnTotalsPosition {\n\t\treturn this.nativeElement ? this.nativeElement.columnTotalsPosition : undefined;\n\t}\n\tset columnTotalsPosition(value: PivotTableColumnTotalsPosition) {\n\t\tthis.nativeElement ? this.nativeElement.columnTotalsPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets details about conditional formatting to be applied to the PivotTable's cells. */\n\t@Input()\n\tget conditionalFormatting(): PivotTableConditionalFormatting[] {\n\t\treturn this.nativeElement ? this.nativeElement.conditionalFormatting : undefined;\n\t}\n\tset conditionalFormatting(value: PivotTableConditionalFormatting[]) {\n\t\tthis.nativeElement ? this.nativeElement.conditionalFormatting = value : undefined;\n\t}\n\n\t/** @description Determines the original tabular data source of the PivotTable. */\n\t@Input()\n\tget dataSource(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether to display the PivotTable's designer alongside the table itself. The designer allows for configuring column settings and applying filtering. */\n\t@Input()\n\tget designer(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.designer : undefined;\n\t}\n\tset designer(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.designer = value : undefined;\n\t}\n\n\t/** @description Sets or gets the position of the PivotTable's designer (shown when designer is enabled). */\n\t@Input()\n\tget designerPosition(): PivotTableDesignerPosition {\n\t\treturn this.nativeElement ? this.nativeElement.designerPosition : undefined;\n\t}\n\tset designerPosition(value: PivotTableDesignerPosition) {\n\t\tthis.nativeElement ? this.nativeElement.designerPosition = value : undefined;\n\t}\n\n\t/** @description Disables the interaction with the element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description If enabled, shows the original tabular data that has been aggregated in a PivotTable summary cell when the cell is double-clicked or F2 is pressed. */\n\t@Input()\n\tget drillDown(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.drillDown : undefined;\n\t}\n\tset drillDown(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.drillDown = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the PivotTable's column header is sticky/frozen. */\n\t@Input()\n\tget freezeHeader(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.freezeHeader : undefined;\n\t}\n\tset freezeHeader(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.freezeHeader = value : undefined;\n\t}\n\n\t/** @description A callback function that returns the default summary function of a summary column when it is dynamically assigned as such (e.g. by drag-drop in the designer). */\n\t@Input()\n\tget getDefaultSummaryFunction(): { (column: PivotTableColumn): string } {\n\t\treturn this.nativeElement ? this.nativeElement.getDefaultSummaryFunction : undefined;\n\t}\n\tset getDefaultSummaryFunction(value: { (column: PivotTableColumn): string }) {\n\t\tthis.nativeElement ? this.nativeElement.getDefaultSummaryFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether to show a Grand total row aggregating the data of all rows. */\n\t@Input()\n\tget grandTotal(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.grandTotal : undefined;\n\t}\n\tset grandTotal(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.grandTotal = value : undefined;\n\t}\n\n\t/** @description Sets or gets the way row nesting (based on rowGroup columns) is displayed. */\n\t@Input()\n\tget groupLayout(): PivotTableGroupLayout {\n\t\treturn this.nativeElement ? this.nativeElement.groupLayout : undefined;\n\t}\n\tset groupLayout(value: PivotTableGroupLayout) {\n\t\tthis.nativeElement ? this.nativeElement.groupLayout = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether navigation with the keyboard is enabled in the PivotTable. */\n\t@Input()\n\tget keyboardNavigation(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.keyboardNavigation : undefined;\n\t}\n\tset keyboardNavigation(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.keyboardNavigation = value : undefined;\n\t}\n\n\t/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the element that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description A callback function executed each time a PivotTable cell is rendered. */\n\t@Input()\n\tget onCellRender(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onCellRender : undefined;\n\t}\n\tset onCellRender(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onCellRender = value : undefined;\n\t}\n\n\t/** @description A callback function executed each time a PivotTable column header cell is rendered. */\n\t@Input()\n\tget onColumnRender(): any {\n\t\treturn this.nativeElement ? this.nativeElement.onColumnRender : undefined;\n\t}\n\tset onColumnRender(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.onColumnRender = value : undefined;\n\t}\n\n\t/** @description A callback function executed when the PivotTable is being initialized. */\n\t@Input()\n\tget onInit(): { (): void } {\n\t\treturn this.nativeElement ? this.nativeElement.onInit : undefined;\n\t}\n\tset onInit(value: { (): void }) {\n\t\tthis.nativeElement ? this.nativeElement.onInit = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether to show row total columns for each summary column. */\n\t@Input()\n\tget rowTotals(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rowTotals : undefined;\n\t}\n\tset rowTotals(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rowTotals = value : undefined;\n\t}\n\n\t/** @description Sets or gets the position of row total columns (shown when rowTotals is enabled). */\n\t@Input()\n\tget rowTotalsPosition(): PivotTableRowTotalsPosition {\n\t\treturn this.nativeElement ? this.nativeElement.rowTotalsPosition : undefined;\n\t}\n\tset rowTotalsPosition(value: PivotTableRowTotalsPosition) {\n\t\tthis.nativeElement ? this.nativeElement.rowTotalsPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether row selection (via checkboxes) is enabled. */\n\t@Input()\n\tget selection(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.selection : undefined;\n\t}\n\tset selection(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.selection = value : undefined;\n\t}\n\n\t/** @description Sets or gets the selection mode. Only applicable when selection is enabled. */\n\t@Input()\n\tget selectionMode(): PivotTableSelectionMode {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: PivotTableSelectionMode) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description Determines the sorting mode of the PivotTable. */\n\t@Input()\n\tget sortMode(): PivotTableSortMode {\n\t\treturn this.nativeElement ? this.nativeElement.sortMode : undefined;\n\t}\n\tset sortMode(value: PivotTableSortMode) {\n\t\tthis.nativeElement ? this.nativeElement.sortMode = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the PivotTable's toolbar is shown. It contains two breadcrumb components that allow the modification of the row group and pivot columns, as well as the \"Conditional Formatting\" and \"Fields\" buttons that open a dialog with additional settings. */\n\t@Input()\n\tget toolbar(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.toolbar : undefined;\n\t}\n\tset toolbar(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.toolbar = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether when hovering a cell with truncated content, a tooltip with the full content will be shown. */\n\t@Input()\n\tget tooltip(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.tooltip : undefined;\n\t}\n\tset tooltip(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.tooltip = value : undefined;\n\t}\n\n\t/** @description This event is triggered when a cell has been clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tdataField, \trow)\n\t*   dataField - The data field of the cell's dynamic column.\n\t*   row - The data of the cell's row.\n\t*/\n\t@Output() onCellClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the selection is changed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a summary column header cell has been clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcolumnDefinition, \tdataField)\n\t*   columnDefinition - An object detailing the clicked dynamic column.\n\t*   dataField - The data field of the cell's original column.\n\t*/\n\t@Output() onColumnClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a filtering-related action is made.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\taction, \tfilters)\n\t*   action - The filtering action. Possible actions: 'add', 'remove'.\n\t*   filters - The added filters. Only when action is 'add'.\n\t*/\n\t@Output() onFilter: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column header cell has been clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcolumns)\n\t*   columns - An array with information about the dynamic columns the PivotTable has been sorted by.\n\t*/\n\t@Output() onSort: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Adds a filter to a specific column. \n\t* @param {string} dataField. The column's data field.\n\t* @param {any} filter. FilterGroup object.\n\t*/\n    public addFilter(dataField: string, filter: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addFilter(dataField, filter);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addFilter(dataField, filter);\n            });\n        }\n    }\n\n\t/** @description Clears applied filters. \n\t*/\n    public clearFilters(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearFilters();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearFilters();\n            });\n        }\n    }\n\n\t/** @description Clears selection. \n\t*/\n    public clearSelection(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearSelection();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearSelection();\n            });\n        }\n    }\n\n\t/** @description Clears the PivotTable sorting. \n\t*/\n    public clearSort(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearSort();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearSort();\n            });\n        }\n    }\n\n\t/** @description Collapses all rows (when multiple row groups are applied). \n\t*/\n    public collapseAllRows(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapseAllRows();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapseAllRows();\n            });\n        }\n    }\n\n\t/** @description Collapses a row (when multiple row groups are applied). \n\t* @param {string | number} rowId. The id of the row to collapse. Can be retrieved from the <strong>rows</strong> collection.\n\t*/\n    public collapseRow(rowId: string | number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapseRow(rowId);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapseRow(rowId);\n            });\n        }\n    }\n\n\t/** @description Expands all rows (when multiple row groups are applied). \n\t*/\n    public expandAllRows(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expandAllRows();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expandAllRows();\n            });\n        }\n    }\n\n\t/** @description Expands a row (when multiple row groups are applied). \n\t* @param {string | number} rowId. The id of the row to expand. Can be retrieved from the <strong>rows</strong> collection.\n\t*/\n    public expandRow(rowId: string | number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expandRow(rowId);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expandRow(rowId);\n            });\n        }\n    }\n\n\t/** @description Exports the PivotTable's data. \n\t* @param {string} dataFormat. The file format to export to. Supported formats: 'csv', 'html', 'json', 'pdf', 'tsv', 'xlsx', 'xml'.\n\t* @param {string} fileName?. The name of the file to export to\n\t* @param {Function} callback?. A callback function to pass the exported data to (if fileName is not provided)\n\t* @returns {any}\n  */\n\tpublic async exportData(dataFormat, fileName?, callback?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.exportData(dataFormat, fileName, callback);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Returns the current dynamic pivot columns. \n\t* @returns {any}\n  */\n\tpublic async getDynamicColumns(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getDynamicColumns();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Returns an array of selected row ids. \n\t* @returns {(string | number)[]}\n  */\n\tpublic async getSelection(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getSelection();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Refreshes the PivotTable. \n\t*/\n    public refresh(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.refresh();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.refresh();\n            });\n        }\n    }\n\n\t/** @description Removes filters applied to a specific column. \n\t* @param {string} dataField. The column's data field.\n\t*/\n    public removeFilter(dataField: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeFilter(dataField);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeFilter(dataField);\n            });\n        }\n    }\n\n\t/** @description Selects a row. \n\t* @param {string | number} rowId. The id of the row to select. Can be retrieved from the <strong>rows</strong> collection.\n\t*/\n    public select(rowId: string | number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.select(rowId);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.select(rowId);\n            });\n        }\n    }\n\n\t/** @description Sorts by a summary or group column. \n\t* @param {any} columnDefinition. The dynamic column's definition. Can be retrieved from the method <strong>getDynamicColumns</strong>.\n\t* @param {string} sortOrder?. Sort order. Possible values: 'asc' (ascending), 'desc' (descending), and null (removes sorting by column). If not provided, toggles the sorting.\n\t*/\n    public sortBy(columnDefinition: any, sortOrder?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.sortBy(columnDefinition, sortOrder);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.sortBy(columnDefinition, sortOrder);\n            });\n        }\n    }\n\n\t/** @description Unselects a row. \n\t* @param {string | number} rowId. The id of the row to unselect. Can be retrieved from the <strong>rows</strong> collection.\n\t*/\n    public unselect(rowId: string | number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unselect(rowId);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unselect(rowId);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['cellClickHandler'] = (event: CustomEvent) => { that.onCellClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('cellClick', that.eventHandlers['cellClickHandler']);\n\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['columnClickHandler'] = (event: CustomEvent) => { that.onColumnClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnClick', that.eventHandlers['columnClickHandler']);\n\n\t\tthat.eventHandlers['filterHandler'] = (event: CustomEvent) => { that.onFilter.emit(event); }\n\t\tthat.nativeElement.addEventListener('filter', that.eventHandlers['filterHandler']);\n\n\t\tthat.eventHandlers['sortHandler'] = (event: CustomEvent) => { that.onSort.emit(event); }\n\t\tthat.nativeElement.addEventListener('sort', that.eventHandlers['sortHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['cellClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('cellClick', that.eventHandlers['cellClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnClick', that.eventHandlers['columnClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['filterHandler']) {\n\t\t\tthat.nativeElement.onfilterHandler = null;\n\t\t}\n\n\t\tif (that.eventHandlers['sortHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('sort', that.eventHandlers['sortHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { PivotTableComponent } from './smart.pivottable';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [PivotTableComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [PivotTableComponent]\n})\n\nexport class PivotTableModule { }\n"]}