{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/chart/smart.element.ts","ng://smart-webcomponents-angular/chart/smart.chart.ts","ng://smart-webcomponents-angular/chart/smart.chart.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","ChartComponent","_this","_super","eventHandlers","onAnnotationClick","onAnnotationMouseenter","onAnnotationMouseleave","onClick","onMouseout","onMouseover","onRangeSelectionChanged","onRangeSelectionChanging","onRefreshBegin","onRefreshEnd","onToggle","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","animation","animationDuration","backgroundColor","backgroundImage","borderLineColor","borderLineWidth","caption","clip","colorScheme","columnSeriesOverlap","crosshairsColor","crosshairsDashStyle","crosshairsLineWidth","dataSource","description","disabled","draw","drawBefore","enableAxisTextAnimation","enableCrosshairs","greyScale","legendLayout","localization","padding","renderEngine","seriesGroups","showBorderLine","showLegend","showToolTips","showToolTipsOnAllSeries","titlePadding","toolTipBackground","toolTipFormatFunction","toolTipHideDelay","toolTipLineColor","toolTipShowDelay","valueAxis","xAxis","addColorScheme","schemeName","colorsArray","isRendered","whenRendered","getColorScheme","getResultOnRender","_a","getItemCoord","groupIndex","serieIndex","itemIndex","getItemsCount","getValueAxisLabels","getValueAxisRect","getValueAxisValue","offset","getXAxisLabels","getXAxisRect","getXAxisValue","hideSerie","hideToolTip","hideDelay","print","refresh","removeColorScheme","saveAsJPEG","fileName","saveAsPNG","saveAsPDF","pageOrientation","showSerie","showToolTip","showDelay","update","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","ElementRef","Directive","exportAs","selector","ChartModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Chart } from './../index';\nimport { Animation, ChartColorScheme, ChartRenderEngine, HorizontalAlignment, ChartRotationPoint, VerticalAlignment, ChartAnnotationType, ChartUnselectMode, Orientation, ChartSeriesGroupSerieEmptyPointsDisplay, ChartSymbolType, ChartType, AxisPosition, ChartBaseUnit, ChartXAxisType, ChartLocalization, Padding, ChartSeriesGroup, ChartAnnotation, Offset, ChartAnnotationText, ChartBand, ChartFormatSettings, ChartSeriesGroupSerie, ChartLabels, ChartValueAxis, ChartLines, ChartLine, ChartTitle, ChartXAxis, ChartRangeSelector, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, ChartColorScheme, ChartRenderEngine, HorizontalAlignment, ChartRotationPoint, VerticalAlignment, ChartAnnotationType, ChartUnselectMode, Orientation, ChartSeriesGroupSerieEmptyPointsDisplay, ChartSymbolType, ChartType, AxisPosition, ChartBaseUnit, ChartXAxisType, ChartLocalization, Padding, ChartSeriesGroup, ChartAnnotation, Offset, ChartAnnotationText, ChartBand, ChartFormatSettings, ChartSeriesGroupSerie, ChartLabels, ChartValueAxis, ChartLines, ChartLine, ChartTitle, ChartXAxis, ChartRangeSelector, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Chart } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-chart',\tselector: 'smart-chart, [smart-chart]'\n})\n\nexport class ChartComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<Chart>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Chart;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Chart;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Chart>document.createElement('smart-chart');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none'. */\n\t@Input()\n\tget animation(): Animation | string {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation | string) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Determines the animation duration in milliseconds. The value must be between 0 and 5000. If it is outside of this range jqxChart will reset it to the default value. */\n\t@Input()\n\tget animationDuration(): number {\n\t\treturn this.nativeElement ? this.nativeElement.animationDuration : undefined;\n\t}\n\tset animationDuration(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.animationDuration = value : undefined;\n\t}\n\n\t/** @description Sets the chart's background color. For example: '#DDFFE8' */\n\t@Input()\n\tget backgroundColor(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.backgroundColor : undefined;\n\t}\n\tset backgroundColor(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.backgroundColor = value : undefined;\n\t}\n\n\t/** @description Sets the chart's background image. For example: 'https://www.htmlelements.com/demos/images/carousel-large-1.jpg' */\n\t@Input()\n\tget backgroundImage(): string {\n\t\treturn this.nativeElement ? this.nativeElement.backgroundImage : undefined;\n\t}\n\tset backgroundImage(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.backgroundImage = value : undefined;\n\t}\n\n\t/** @description Sets the chart's border color. For example: '#098700' */\n\t@Input()\n\tget borderLineColor(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.borderLineColor : undefined;\n\t}\n\tset borderLineColor(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.borderLineColor = value : undefined;\n\t}\n\n\t/** @description Sets the chart's border line width. */\n\t@Input()\n\tget borderLineWidth(): number {\n\t\treturn this.nativeElement ? this.nativeElement.borderLineWidth : undefined;\n\t}\n\tset borderLineWidth(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.borderLineWidth = value : undefined;\n\t}\n\n\t/** @description Sets the caption (title) of the chart. */\n\t@Input()\n\tget caption(): string {\n\t\treturn this.nativeElement ? this.nativeElement.caption : undefined;\n\t}\n\tset caption(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.caption = value : undefined;\n\t}\n\n\t/** @description Determines whether to clip plotted elements that overflow the axis boundaries. */\n\t@Input()\n\tget clip(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.clip : undefined;\n\t}\n\tset clip(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.clip = value : undefined;\n\t}\n\n\t/** @description Sets the chart's color pallete. jqxChart suppports 32 color schemes from 'scheme01' to 'scheme32'. */\n\t@Input()\n\tget colorScheme(): ChartColorScheme | string {\n\t\treturn this.nativeElement ? this.nativeElement.colorScheme : undefined;\n\t}\n\tset colorScheme(value: ChartColorScheme | string) {\n\t\tthis.nativeElement ? this.nativeElement.colorScheme = value : undefined;\n\t}\n\n\t/** @description Enables or disables overlapping of the column series. */\n\t@Input()\n\tget columnSeriesOverlap(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnSeriesOverlap : undefined;\n\t}\n\tset columnSeriesOverlap(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnSeriesOverlap = value : undefined;\n\t}\n\n\t/** @description Gets or sets the color of the crosshairs lines. The 'enableCrosshairs' property should be 'true'. */\n\t@Input()\n\tget crosshairsColor(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.crosshairsColor : undefined;\n\t}\n\tset crosshairsColor(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.crosshairsColor = value : undefined;\n\t}\n\n\t/** @description Gets or sets the dash style of the crosshairs lines. The style is a series of numbers indicating line length followed by space length. The 'enableCrosshairs' property should be 'true'. For example: '3,3' */\n\t@Input()\n\tget crosshairsDashStyle(): string {\n\t\treturn this.nativeElement ? this.nativeElement.crosshairsDashStyle : undefined;\n\t}\n\tset crosshairsDashStyle(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.crosshairsDashStyle = value : undefined;\n\t}\n\n\t/** @description Gets or sets the width of the crosshairs lines. The 'enableCrosshairs' property should be 'true' */\n\t@Input()\n\tget crosshairsLineWidth(): number {\n\t\treturn this.nativeElement ? this.nativeElement.crosshairsLineWidth : undefined;\n\t}\n\tset crosshairsLineWidth(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.crosshairsLineWidth = value : undefined;\n\t}\n\n\t/** @description Sets the chart's data source. */\n\t@Input()\n\tget dataSource(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Sets the description text of the chart. */\n\t@Input()\n\tget description(): string {\n\t\treturn this.nativeElement ? this.nativeElement.description : undefined;\n\t}\n\tset description(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.description = value : undefined;\n\t}\n\n\t/** @description Enables or disables the chart. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Determines the drawing function of jqxChart. When the property is set, you can override the jqxChart's drawing. */\n\t@Input()\n\tget draw(): any {\n\t\treturn this.nativeElement ? this.nativeElement.draw : undefined;\n\t}\n\tset draw(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.draw = value : undefined;\n\t}\n\n\t/** @description Function for custom drawing before the caption and other chart elements. */\n\t@Input()\n\tget drawBefore(): any {\n\t\treturn this.nativeElement ? this.nativeElement.drawBefore : undefined;\n\t}\n\tset drawBefore(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.drawBefore = value : undefined;\n\t}\n\n\t/** @description Determines if the animation of the axes text is enabled. */\n\t@Input()\n\tget enableAxisTextAnimation(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.enableAxisTextAnimation : undefined;\n\t}\n\tset enableAxisTextAnimation(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.enableAxisTextAnimation = value : undefined;\n\t}\n\n\t/** @description Enables or disables the crosshairs lines. The lines are displayed in line and area series when you move over a data point. */\n\t@Input()\n\tget enableCrosshairs(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.enableCrosshairs : undefined;\n\t}\n\tset enableCrosshairs(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.enableCrosshairs = value : undefined;\n\t}\n\n\t/** @description Determines whether to display the chart using greyscale colors. */\n\t@Input()\n\tget greyScale(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.greyScale : undefined;\n\t}\n\tset greyScale(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.greyScale = value : undefined;\n\t}\n\n\t/** @description Sets the legend's layout. */\n\t@Input()\n\tget legendLayout(): any {\n\t\treturn this.nativeElement ? this.nativeElement.legendLayout : undefined;\n\t}\n\tset legendLayout(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.legendLayout = value : undefined;\n\t}\n\n\t/** @description Sets or gets the locale. Used in conjunction with the property messages. */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Localization object containing culture-specific properties required for formatting currencies, numbers and dates. */\n\t@Input()\n\tget localization(): ChartLocalization {\n\t\treturn this.nativeElement ? this.nativeElement.localization : undefined;\n\t}\n\tset localization(value: ChartLocalization) {\n\t\tthis.nativeElement ? this.nativeElement.localization = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale. */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets the left, top, right and bottom padding of the Chart. */\n\t@Input()\n\tget padding(): Padding {\n\t\treturn this.nativeElement ? this.nativeElement.padding : undefined;\n\t}\n\tset padding(value: Padding) {\n\t\tthis.nativeElement ? this.nativeElement.padding = value : undefined;\n\t}\n\n\t/** @description Determines the rendering engine used to display the chart. When the property is set to an empty string, jqxChart will automatically select an optimal rendering engine depending on the browser capabilities. */\n\t@Input()\n\tget renderEngine(): ChartRenderEngine | string {\n\t\treturn this.nativeElement ? this.nativeElement.renderEngine : undefined;\n\t}\n\tset renderEngine(value: ChartRenderEngine | string) {\n\t\tthis.nativeElement ? this.nativeElement.renderEngine = value : undefined;\n\t}\n\n\t/** @description Sets or gets a value indicating whether the Chart's layout is mirrored. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description The seriesGroups property is used to describe all series displayed on the chart. jqxChart supports multiple series of different types and series grouping. Each series group may have its own Value Axis (Y-axis) which allows you to have values with different scales displayed on the same chart at the same time. It also allows you to display multiple series types together on the same chart. For example, you can display all series in one group as lines and the series in a second group as columns. seriesGroups is an array of objects where each object represents one group. */\n\t@Input()\n\tget seriesGroups(): ChartSeriesGroup[] {\n\t\treturn this.nativeElement ? this.nativeElement.seriesGroups : undefined;\n\t}\n\tset seriesGroups(value: ChartSeriesGroup[]) {\n\t\tthis.nativeElement ? this.nativeElement.seriesGroups = value : undefined;\n\t}\n\n\t/** @description Determines whether to display the chart's border line. */\n\t@Input()\n\tget showBorderLine(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showBorderLine : undefined;\n\t}\n\tset showBorderLine(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showBorderLine = value : undefined;\n\t}\n\n\t/** @description Determines whether to show or hide the chart series legend. */\n\t@Input()\n\tget showLegend(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showLegend : undefined;\n\t}\n\tset showLegend(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showLegend = value : undefined;\n\t}\n\n\t/** @description Enables or disables the chart tooltips. */\n\t@Input()\n\tget showToolTips(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showToolTips : undefined;\n\t}\n\tset showToolTips(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showToolTips = value : undefined;\n\t}\n\n\t/** @description Determines whether to show a composite tooltip containing information for all series. */\n\t@Input()\n\tget showToolTipsOnAllSeries(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showToolTipsOnAllSeries : undefined;\n\t}\n\tset showToolTipsOnAllSeries(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showToolTipsOnAllSeries = value : undefined;\n\t}\n\n\t/** @description Determines the set of default background, line, text and band colors that will be used in the Chart. */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Sets the padding of the chart's title (caption). */\n\t@Input()\n\tget titlePadding(): Padding {\n\t\treturn this.nativeElement ? this.nativeElement.titlePadding : undefined;\n\t}\n\tset titlePadding(value: Padding) {\n\t\tthis.nativeElement ? this.nativeElement.titlePadding = value : undefined;\n\t}\n\n\t/** @description Tooltip background color. */\n\t@Input()\n\tget toolTipBackground(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipBackground : undefined;\n\t}\n\tset toolTipBackground(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipBackground = value : undefined;\n\t}\n\n\t/** @description Determines the tooltip hide delay in milliseconds. */\n\t@Input()\n\tget toolTipFormatFunction(): {(value?: any, index?: number, series?: any): string} {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipFormatFunction : undefined;\n\t}\n\tset toolTipFormatFunction(value: {(value?: any, index?: number, series?: any): string}) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipFormatFunction = value : undefined;\n\t}\n\n\t/** @description Tooltip line color. */\n\t@Input()\n\tget toolTipHideDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipHideDelay : undefined;\n\t}\n\tset toolTipHideDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipHideDelay = value : undefined;\n\t}\n\n\t/** @description Determines the tooltip show delay in milliseconds. Values may range from 0 to 10000 [ms]. */\n\t@Input()\n\tget toolTipLineColor(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipLineColor : undefined;\n\t}\n\tset toolTipLineColor(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipLineColor = value : undefined;\n\t}\n\n\t/** @description An object with settings about the Chart's y-axis (value axis). */\n\t@Input()\n\tget toolTipShowDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipShowDelay : undefined;\n\t}\n\tset toolTipShowDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipShowDelay = value : undefined;\n\t}\n\n\t/** @description Sets the Chart's xAxis. */\n\t@Input()\n\tget valueAxis(): ChartValueAxis {\n\t\treturn this.nativeElement ? this.nativeElement.valueAxis : undefined;\n\t}\n\tset valueAxis(value: ChartValueAxis) {\n\t\tthis.nativeElement ? this.nativeElement.valueAxis = value : undefined;\n\t}\n\n\t/** @description undefined */\n\t@Input()\n\tget xAxis(): ChartXAxis {\n\t\treturn this.nativeElement ? this.nativeElement.xAxis : undefined;\n\t}\n\tset xAxis(value: ChartXAxis) {\n\t\tthis.nativeElement ? this.nativeElement.xAxis = value : undefined;\n\t}\n\n\t/** @description The event is raised when the user clicks on a chart annotation.\n\t*  @param event. The custom event. \t*/\n\t@Output() onAnnotationClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the user moves the cursor above a chart annotation.\n\t*  @param event. The custom event. \t*/\n\t@Output() onAnnotationMouseenter: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the user moves the cursor out of a chart annotation.\n\t*  @param event. The custom event. \t*/\n\t@Output() onAnnotationMouseleave: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the user clicks on series element.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the user moves the cursor out of a series element.\n\t*  @param event. The custom event. \t*/\n\t@Output() onMouseout: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the user moves the cursor above a series element.\n\t*  @param event. The custom event. \t*/\n\t@Output() onMouseover: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised after the chart's range selector position changes and after the chart ends rendering.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRangeSelectionChanged: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart's range selector position changes and before the chart starts rendering.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRangeSelectionChanging: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart begins rendering.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRefreshBegin: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart finishes rendering.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRefreshEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when a serie is toggled by a user click in the chart's legend or through an API call.\n\t*  @param event. The custom event. \t*/\n\t@Output() onToggle: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Adds a new color sheme. If a scheme with the same name already exists, the method will update its colors. \n\t* @param {string} schemeName. The name of the custom color scheme.\n\t* @param {any[]} colorsArray. An array of color values.\n\t*/\n    public addColorScheme(schemeName: string, colorsArray: any[]): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addColorScheme(schemeName, colorsArray);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addColorScheme(schemeName, colorsArray);\n            });\n        }\n    }\n\n\t/** @description Returns the colors of a color scheme by name. If the scheme doesn't exist the method returns undefined. \n\t* @param {string} schemeName. The name of the color scheme.\n\t* @returns {any[]}\n  */\n\tpublic async getColorScheme(schemeName): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getColorScheme(schemeName);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered coordinates of a data point element. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex. Item (data point) index.\n\t* @returns {{ x: number, y: number, width: number, height: number, center: number, centerOffset: number, innerRadius: number, outerRadius: number, selectedRadiusChange: number, fromAngle: number, toAngle: number, radius: number }}\n  */\n\tpublic async getItemCoord(groupIndex, serieIndex, itemIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getItemCoord(groupIndex, serieIndex, itemIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the number of rendered items in a specific serie. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @returns {number}\n  */\n\tpublic async getItemsCount(groupIndex, serieIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getItemsCount(groupIndex, serieIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered coordinates and values of the valueAxis labels. \n\t* @param {number} groupIndex. Series group index.\n\t* @returns {any}\n  */\n\tpublic async getValueAxisLabels(groupIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getValueAxisLabels(groupIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered rectangle coordinates of the valueAxis of specific serie group. \n\t* @param {number} groupIndex. Series group index.\n\t* @returns {DOMRect}\n  */\n\tpublic async getValueAxisRect(groupIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getValueAxisRect(groupIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the valueAxis (vertical axis)'s value. \n\t* @param {number} offset. Vertical offset.\n\t* @param {number} groupIndex. Series group index.\n\t* @returns {any}\n  */\n\tpublic async getValueAxisValue(offset, groupIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getValueAxisValue(offset, groupIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered coordinates and values of the xAxis labels. \n\t* @param {number} groupIndex. Series group index.\n\t* @returns {any}\n  */\n\tpublic async getXAxisLabels(groupIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getXAxisLabels(groupIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered rectangle coordinates of the x-Axis of specific serie group. \n\t* @param {number} groupIndex. Series group index.\n\t* @returns {DOMRect}\n  */\n\tpublic async getXAxisRect(groupIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getXAxisRect(groupIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the xAxis (horizontal axis)'s value. \n\t* @param {number} offset. Horizontal offset.\n\t* @param {number} groupIndex. Series group index.\n\t* @returns {any}\n  */\n\tpublic async getXAxisValue(offset, groupIndex): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getXAxisValue(offset, groupIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Hides a chart serie. The result of calling this function is same as the user unchecking the legend box of a chart serie. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex?. Item (data point) index. Applicable to pie and donut series only.\n\t*/\n    public hideSerie(groupIndex: number, serieIndex: number, itemIndex?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hideSerie(groupIndex, serieIndex, itemIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hideSerie(groupIndex, serieIndex, itemIndex);\n            });\n        }\n    }\n\n\t/** @description Hides the current tooltip if visible. \n\t* @param {number} hideDelay?. Hide delay.\n\t*/\n    public hideToolTip(hideDelay?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hideToolTip(hideDelay);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hideToolTip(hideDelay);\n            });\n        }\n    }\n\n\t/** @description Prints the chart. \n\t*/\n    public print(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.print();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.print();\n            });\n        }\n    }\n\n\t/** @description Refreshes the content of the chart element after a property or data update. \n\t*/\n    public refresh(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.refresh();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.refresh();\n            });\n        }\n    }\n\n\t/** @description Removes an existing color scheme. If the scheme does not exist, the method has no effect. \n\t* @param {string} schemeName. The name of the custom color scheme.\n\t*/\n    public removeColorScheme(schemeName: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeColorScheme(schemeName);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeColorScheme(schemeName);\n            });\n        }\n    }\n\n\t/** @description Exports the chart's content as JPEG image. \n\t* @param {string} fileName?. File name.\n\t*/\n    public saveAsJPEG(fileName?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveAsJPEG(fileName);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveAsJPEG(fileName);\n            });\n        }\n    }\n\n\t/** @description Exports the chart's content as PNG image. \n\t* @param {string} fileName?. File name.\n\t*/\n    public saveAsPNG(fileName?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveAsPNG(fileName);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveAsPNG(fileName);\n            });\n        }\n    }\n\n\t/** @description Exports the chart's content as PDF. \n\t* @param {string} fileName?. File name.\n\t* @param {string} pageOrientation?. PDF page orientation. <strong>Possible values:</strong> 'portrait' (default), 'landscape'.\n\t*/\n    public saveAsPDF(fileName?: string, pageOrientation?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveAsPDF(fileName, pageOrientation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveAsPDF(fileName, pageOrientation);\n            });\n        }\n    }\n\n\t/** @description Shows a hidden chart serie. The result of calling this function is same as the user checking the legend box of a chart serie. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex?. Item (data point) index. Applicable to pie and donut series only.\n\t*/\n    public showSerie(groupIndex: number, serieIndex: number, itemIndex?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showSerie(groupIndex, serieIndex, itemIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showSerie(groupIndex, serieIndex, itemIndex);\n            });\n        }\n    }\n\n\t/** @description Shows a the tooltip for a particular data point. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex. Item (data point) index.\n\t* @param {number} showDelay?. Show delay.\n\t* @param {number} hideDelay?. Hide delay.\n\t*/\n    public showToolTip(groupIndex: number, serieIndex: number, itemIndex: number, showDelay?: number, hideDelay?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showToolTip(groupIndex, serieIndex, itemIndex, showDelay, hideDelay);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showToolTip(groupIndex, serieIndex, itemIndex, showDelay, hideDelay);\n            });\n        }\n    }\n\n\t/** @description Updates the values of the chart series without full refresh of the entire chart. The method should be used for animation of frequently changing values. \n\t*/\n    public update(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.update();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.update();\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['annotationClickHandler'] = (event: CustomEvent) => { that.onAnnotationClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('annotationClick', that.eventHandlers['annotationClickHandler']);\n\n\t\tthat.eventHandlers['annotationMouseenterHandler'] = (event: CustomEvent) => { that.onAnnotationMouseenter.emit(event); }\n\t\tthat.nativeElement.addEventListener('annotationMouseenter', that.eventHandlers['annotationMouseenterHandler']);\n\n\t\tthat.eventHandlers['annotationMouseleaveHandler'] = (event: CustomEvent) => { that.onAnnotationMouseleave.emit(event); }\n\t\tthat.nativeElement.addEventListener('annotationMouseleave', that.eventHandlers['annotationMouseleaveHandler']);\n\n\t\tthat.eventHandlers['clickHandler'] = (event: CustomEvent) => { that.onClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('click', that.eventHandlers['clickHandler']);\n\n\t\tthat.eventHandlers['mouseoutHandler'] = (event: CustomEvent) => { that.onMouseout.emit(event); }\n\t\tthat.nativeElement.addEventListener('mouseout', that.eventHandlers['mouseoutHandler']);\n\n\t\tthat.eventHandlers['mouseoverHandler'] = (event: CustomEvent) => { that.onMouseover.emit(event); }\n\t\tthat.nativeElement.addEventListener('mouseover', that.eventHandlers['mouseoverHandler']);\n\n\t\tthat.eventHandlers['rangeSelectionChangedHandler'] = (event: CustomEvent) => { that.onRangeSelectionChanged.emit(event); }\n\t\tthat.nativeElement.addEventListener('rangeSelectionChanged', that.eventHandlers['rangeSelectionChangedHandler']);\n\n\t\tthat.eventHandlers['rangeSelectionChangingHandler'] = (event: CustomEvent) => { that.onRangeSelectionChanging.emit(event); }\n\t\tthat.nativeElement.addEventListener('rangeSelectionChanging', that.eventHandlers['rangeSelectionChangingHandler']);\n\n\t\tthat.eventHandlers['refreshBeginHandler'] = (event: CustomEvent) => { that.onRefreshBegin.emit(event); }\n\t\tthat.nativeElement.addEventListener('refreshBegin', that.eventHandlers['refreshBeginHandler']);\n\n\t\tthat.eventHandlers['refreshEndHandler'] = (event: CustomEvent) => { that.onRefreshEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('refreshEnd', that.eventHandlers['refreshEndHandler']);\n\n\t\tthat.eventHandlers['toggleHandler'] = (event: CustomEvent) => { that.onToggle.emit(event); }\n\t\tthat.nativeElement.addEventListener('toggle', that.eventHandlers['toggleHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['annotationClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('annotationClick', that.eventHandlers['annotationClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['annotationMouseenterHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('annotationMouseenter', that.eventHandlers['annotationMouseenterHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['annotationMouseleaveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('annotationMouseleave', that.eventHandlers['annotationMouseleaveHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['clickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('click', that.eventHandlers['clickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['mouseoutHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('mouseout', that.eventHandlers['mouseoutHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['mouseoverHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('mouseover', that.eventHandlers['mouseoverHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['rangeSelectionChangedHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('rangeSelectionChanged', that.eventHandlers['rangeSelectionChangedHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['rangeSelectionChangingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('rangeSelectionChanging', that.eventHandlers['rangeSelectionChangingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['refreshBeginHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('refreshBegin', that.eventHandlers['refreshBeginHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['refreshEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('refreshEnd', that.eventHandlers['refreshEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['toggleHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('toggle', that.eventHandlers['toggleHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { ChartComponent } from './smart.chart';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [ChartComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [ChartComponent]\n})\n\nexport class ChartModule { }\n"]}