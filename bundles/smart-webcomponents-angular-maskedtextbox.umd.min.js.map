{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/maskedtextbox/smart.element.ts","ng://smart-webcomponents-angular/maskedtextbox/smart.maskedtextbox.ts","ng://smart-webcomponents-angular/maskedtextbox/smart.maskedtextbox.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","BaseElement","ref","this","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","value","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MaskedTextBoxComponent","multi","_super","_this","call","eventHandlers","_onChange","_onTouched","onChange","onChanging","onValidation","_initialChange","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","animation","allowPromptAsInput","asciiOnly","autoFocus","autoShowMask","cutCopyMaskFormat","disabled","enterKeyBehavior","hidePromptOnLeave","hint","isOverwriteMode","label","mask","maskCompleted","maskFull","maxLength","name","placeholder","promptChar","readonly","rejectInputOnFirstFailure","required","resetOnPrompt","resetOnSpace","selectAllOnFocus","textMaskFormat","unfocusable","validation","isRendered","whenRendered","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","writeValue","normalizedValue","registerOnChange","fn","registerOnTouched","ngOnChanges","changes","propName","currentValue","querySelector","setTimeout","ElementRef","Directive","exportAs","selector","providers","MaskedTextBoxModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { MaskedTextBox } from './../index';\nimport { Animation, MaskedTextBoxCutCopyMaskFormat, EnterKeyBehavior, MaskedTextBoxTextMaskFormat, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, forwardRef, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, MaskedTextBoxCutCopyMaskFormat, EnterKeyBehavior, MaskedTextBoxTextMaskFormat, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { MaskedTextBox } from './../index';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n\nconst CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MaskedTextBoxComponent),\n    multi: true\n}\n\n@Directive({\n\texportAs: 'smart-masked-text-box',\tselector: 'smart-masked-text-box, [smart-masked-text-box]',\n\tproviders: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n\n})\n\nexport class MaskedTextBoxComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges, ControlValueAccessor {\n\tconstructor(ref: ElementRef<MaskedTextBox>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as MaskedTextBox;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: MaskedTextBox;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <MaskedTextBox>document.createElement('smart-masked-text-box');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n        /**\n        * @description\n        * The registered callback function called when a change event occurs on the form elements.\n        */\n       _onChange: (value: any) => void = () => {};\n        /**\n        * @description\n        * The registered callback function called when a blur event occurs on the form elements.\n        */\n       _onTouched: () => any = () => {};\n\n\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation | string {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation | string) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Determines whether promptChar can be entered as valid input by the user. */\n\t@Input()\n\tget allowPromptAsInput(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowPromptAsInput : undefined;\n\t}\n\tset allowPromptAsInput(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowPromptAsInput = value : undefined;\n\t}\n\n\t/** @description Determines whether the input accepts characters only from the ASCII character set. */\n\t@Input()\n\tget asciiOnly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.asciiOnly : undefined;\n\t}\n\tset asciiOnly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.asciiOnly = value : undefined;\n\t}\n\n\t/** @description Specifies whether the input should be focused when the page is loaded. */\n\t@Input()\n\tget autoFocus(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoFocus : undefined;\n\t}\n\tset autoFocus(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoFocus = value : undefined;\n\t}\n\n\t/** @description Determines whether the mask is shown/hidden on focus/blur even if placeholder is not set. */\n\t@Input()\n\tget autoShowMask(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoShowMask : undefined;\n\t}\n\tset autoShowMask(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoShowMask = value : undefined;\n\t}\n\n\t/** @description Determines whether literals and prompt characters are copied to the clipboard on cut/copy operations. */\n\t@Input()\n\tget cutCopyMaskFormat(): MaskedTextBoxCutCopyMaskFormat | string {\n\t\treturn this.nativeElement ? this.nativeElement.cutCopyMaskFormat : undefined;\n\t}\n\tset cutCopyMaskFormat(value: MaskedTextBoxCutCopyMaskFormat | string) {\n\t\tthis.nativeElement ? this.nativeElement.cutCopyMaskFormat = value : undefined;\n\t}\n\n\t/** @description Enables or disables the element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Specifies the behavior on \"Enter\" key press. Default mode is \"submit\". */\n\t@Input()\n\tget enterKeyBehavior(): EnterKeyBehavior | string {\n\t\treturn this.nativeElement ? this.nativeElement.enterKeyBehavior : undefined;\n\t}\n\tset enterKeyBehavior(value: EnterKeyBehavior | string) {\n\t\tthis.nativeElement ? this.nativeElement.enterKeyBehavior = value : undefined;\n\t}\n\n\t/** @description Determines whether the prompt character in the input mask is hidden when the masked text box isn't focused anymore. */\n\t@Input()\n\tget hidePromptOnLeave(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hidePromptOnLeave : undefined;\n\t}\n\tset hidePromptOnLeave(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hidePromptOnLeave = value : undefined;\n\t}\n\n\t/** @description Sets additional helper text below the element. The hint is visible only when the element is focused. */\n\t@Input()\n\tget hint(): string {\n\t\treturn this.nativeElement ? this.nativeElement.hint : undefined;\n\t}\n\tset hint(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.hint = value : undefined;\n\t}\n\n\t/** @description Determines whether new user input overwrites the existing input value or not. */\n\t@Input()\n\tget isOverwriteMode(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isOverwriteMode : undefined;\n\t}\n\tset isOverwriteMode(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.isOverwriteMode = value : undefined;\n\t}\n\n\t/** @description Sets label above the element. The label is always visible. */\n\t@Input()\n\tget label(): string {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Defines the mask for the input. */\n\t@Input()\n\tget mask(): string {\n\t\treturn this.nativeElement ? this.nativeElement.mask : undefined;\n\t}\n\tset mask(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.mask = value : undefined;\n\t}\n\n\t/** @description Indicates whether all required fields of the mask have been populated or not. */\n\t@Input()\n\tget maskCompleted(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.maskCompleted : undefined;\n\t}\n\tset maskCompleted(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.maskCompleted = value : undefined;\n\t}\n\n\t/** @description Indicates whether all required and optional fields of the mask have been populated or not. */\n\t@Input()\n\tget maskFull(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.maskFull : undefined;\n\t}\n\tset maskFull(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.maskFull = value : undefined;\n\t}\n\n\t/** @description Determines the maximum number of characters that the user can enter. */\n\t@Input()\n\tget maxLength(): number {\n\t\treturn this.nativeElement ? this.nativeElement.maxLength : undefined;\n\t}\n\tset maxLength(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.maxLength = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the name attribute for the element. Name is used when submiting HTML forms. */\n\t@Input()\n\tget name(): string {\n\t\treturn this.nativeElement ? this.nativeElement.name : undefined;\n\t}\n\tset name(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.name = value : undefined;\n\t}\n\n\t/** @description A string that appears inside the input when there's no value and mask.  */\n\t@Input()\n\tget placeholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.placeholder : undefined;\n\t}\n\tset placeholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.placeholder = value : undefined;\n\t}\n\n\t/** @description Determines the prompt char that is used for the mask of the element. */\n\t@Input()\n\tget promptChar(): string {\n\t\treturn this.nativeElement ? this.nativeElement.promptChar : undefined;\n\t}\n\tset promptChar(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.promptChar = value : undefined;\n\t}\n\n\t/** @description If the element is readonly, the users cannot iteract with the element. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description Determines whether the parsing of user input should stop after the first invalid character or not. */\n\t@Input()\n\tget rejectInputOnFirstFailure(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rejectInputOnFirstFailure : undefined;\n\t}\n\tset rejectInputOnFirstFailure(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rejectInputOnFirstFailure = value : undefined;\n\t}\n\n\t/** @description Specifies that the input must be filled in before submitting a form */\n\t@Input()\n\tget required(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.required : undefined;\n\t}\n\tset required(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.required = value : undefined;\n\t}\n\n\t/** @description Determines whether an input character that matches the prompt character should reset the current selected value in the input or not. Applicable only when allowPromptAsInput is enabled. */\n\t@Input()\n\tget resetOnPrompt(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.resetOnPrompt : undefined;\n\t}\n\tset resetOnPrompt(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.resetOnPrompt = value : undefined;\n\t}\n\n\t/** @description Determines whether hitting space character resets the currently selected value from the input or not. */\n\t@Input()\n\tget resetOnSpace(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.resetOnSpace : undefined;\n\t}\n\tset resetOnSpace(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.resetOnSpace = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Specifies whether the value of the input will be selected on focus or not. */\n\t@Input()\n\tget selectAllOnFocus(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.selectAllOnFocus : undefined;\n\t}\n\tset selectAllOnFocus(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.selectAllOnFocus = value : undefined;\n\t}\n\n\t/** @description Determines whether the value of the input should contain or not the prompt/literals of the mask. */\n\t@Input()\n\tget textMaskFormat(): MaskedTextBoxTextMaskFormat | string {\n\t\treturn this.nativeElement ? this.nativeElement.textMaskFormat : undefined;\n\t}\n\tset textMaskFormat(value: MaskedTextBoxTextMaskFormat | string) {\n\t\tthis.nativeElement ? this.nativeElement.textMaskFormat = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description If is set to true, the element cannot be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value of the element.  */\n\t@Input()\n\tget value(): string {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description Callback function that allows to set custom validation on the value. If the function returns false then the value of the input is treated as not valid. */\n\t@Input()\n\tget validation(): any {\n\t\treturn this.nativeElement ? this.nativeElement.validation : undefined;\n\t}\n\tset validation(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.validation = value : undefined;\n\t}\n\n\t/** @description This event is triggered when the value of the Text Box is changed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \tvalue)\n\t*   oldValue - The previous value before it was changed.\n\t*   value - The new value.\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered on each key up event of the MaskedTextBox, if the value is changed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \tvalue)\n\t*   oldValue - The previous value before it was changed.\n\t*   value - The new value.\n\t*/\n\t@Output() onChanging: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered if the validation property is set. Indicates whether valiation has passed successfully or not.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tsuccess)\n\t*   success - A flag inidicating whether the validation was successfull or not.\n\t*/\n\t@Output() onValidation: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Focuses the element.  \n\t*/\n    public focus(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.focus();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.focus();\n            });\n        }\n    }\n\n\t/** @description Blurs the element.  \n\t*/\n    public blur(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.blur();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.blur();\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\t_initialChange = true; \n\n\tget ngValue(): any {\n\t\tif (!this.nativeElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = this.nativeElement.value;\n\t\treturn value;\n\t}\n\n\tset ngValue(value: any) {\n\t\tif (this.nativeElement) {\n\t\t    this.writeValue(value);\n\t\t}\n\t}\n\n\twriteValue(value: any): void {\n        const that = this;\n        const normalizedValue = value == null ? '' : value;\n\n\t\tthat.nativeElement.whenRendered(() => {\n\t\t\tthat.value = normalizedValue;\n\t\t\tif (that._initialChange === false) {\n\t    \t\tthat._onChange(that.value);\n            }\n\t\t});\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis._onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis._onTouched = fn;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['changingHandler'] = (event: CustomEvent) => { that.onChanging.emit(event); }\n\t\tthat.nativeElement.addEventListener('changing', that.eventHandlers['changingHandler']);\n\n\t\tthat.eventHandlers['validationHandler'] = (event: CustomEvent) => { that.onValidation.emit(event); }\n\t\tthat.nativeElement.addEventListener('validation', that.eventHandlers['validationHandler']);\n\n\n        that.eventHandlers['changeModelHandler'] = (event: Event) => {\n            that._initialChange = false;\n            that._onChange(that.nativeElement.value);\n        };\n        that.eventHandlers['blurModelHandler'] = (event: Event) => {\n            that._onTouched();\n        };\n        that.nativeElement.whenRendered(() => {\n            if (that.nativeElement.querySelector('input')) {\n                that.eventHandlers['keyupModelHandler'] = (event) => {\n                    setTimeout(() => { that.eventHandlers['changeModelHandler'](event); }, 50);\n                };\n\n                that.nativeElement.querySelector('input').addEventListener('keyup', that.eventHandlers['keyupModelHandler']);\n            }\n        });\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeModelHandler']);\n\t\tthat.nativeElement.addEventListener('blur', that.eventHandlers['blurModelHandler']);\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('changing', that.eventHandlers['changingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['validationHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('validation', that.eventHandlers['validationHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changeModelHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeModelHandler']);\n            if (that.nativeElement.querySelector('input')) {\n                  that.nativeElement.querySelector('input').removeEventListener('keyup', that.eventHandlers['keyupModelHandler']);\n            }\n\t\t}\n\t\tif (that.eventHandlers['blurModelHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('blur', that.eventHandlers['blurModelHandler']);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { MaskedTextBoxComponent } from './smart.maskedtextbox';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [MaskedTextBoxComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [MaskedTextBoxComponent]\n})\n\nexport class MaskedTextBoxModule { }\n"]}