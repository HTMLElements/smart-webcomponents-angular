{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/scheduler/smart.element.ts","ng://smart-webcomponents-angular/scheduler/smart.scheduler.ts","ng://smart-webcomponents-angular/scheduler/smart.scheduler.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","SchedulerComponent","_this","_super","eventHandlers","onBeginUpdate","onEndUpdate","onChange","onItemClick","onItemInsert","onItemRemove","onItemUpdate","onViewChange","onEventShortcutKey","onDateChange","onDragStart","onDragEnd","onResizeStart","onResizeEnd","onEditDialogOpening","onEditDialogOpen","onEditDialogClose","onEditDialogClosing","onContextMenuOpening","onContextMenuOpen","onContextMenuClose","onContextMenuClosing","onEventMenuOpening","onEventMenuOpen","onEventMenuClose","onEventMenuClosing","onDateMenuOpen","onDateMenuClose","onViewMenuOpen","onViewMenuClose","onNotificationOpen","onNotificationClose","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","autoScrollStep","colorScheme","currentTimeIndicator","currentTimeIndicatorInterval","contextMenuDataSource","eventTemplate","eventCollectorTemplate","eventRenderMode","eventTooltipTemplate","cellTemplate","dateCurrent","dataExport","dataSource","dateSelectorFormatFunction","dayFormat","disabled","disableAutoScroll","disableDrag","disableDrop","disableResize","disableSelection","disableWindowEditor","disableContextMenu","disableEventMenu","disableViewMenu","disableDateMenu","dragFeedbackFormatFunction","dragOffset","events","firstDayOfWeek","groupByDate","groupOrientation","groupTemplate","groups","hourEnd","hourStart","hourFormat","headerTemplate","headerDatePosition","headerNavigationStyle","headerViewPosition","hideAllDay","hideNonworkingWeekdays","hideTodayButton","hideViewMenuCheckableItems","hideWeekend","horizontalScrollBarVisibility","max","min","minuteFormat","monthFormat","nonworkingDays","nonworkingHours","notificationInterval","resizeHandlesVisibility","resizeInterval","resources","restrictedDates","scrollButtonsPosition","shadeUntilCurrentTime","spinButtonsDelay","spinButtonsInitialDelay","statuses","timelineHeaderFormatFunction","timelineDayScale","timeRulerTicks","timeZone","timeZones","tooltipDelay","tooltipOffset","verticalScrollBarVisibility","view","viewType","views","viewSelectorType","weekdayFormat","yearFormat","unfocusable","windowCustomizationFunction","beginUpdate","isRendered","whenRendered","endUpdate","refresh","fullRefresh","exportData","dataFormat","callback","getState","getResultOnRender","_a","clearState","loadState","state","saveState","containsEvent","eventObj","insertEvent","index","updateEvent","removeEvent","openWindow","closeWindow","print","scrollToDate","date","scrollToEvent","openNotification","message","toastSettings","closeNotifications","occurrences","count","occurrencesBetween","dateFrom","dateTo","occurrenceAfter","occurrenceBefore","getCellDateRange","cell","openEventTooltip","closeEventTooltip","isDateRestricted","isEventRestricted","ngOnInit","ngAfterViewInit","Render","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","ElementRef","Directive","selector","SchedulerModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Scheduler } from './../index';\nimport { SchedulerRepeatFreq, SchedulerNotificationType, SchedulerDayFormat, SchedulerGroupOrientation, SchedulerHourFormat, SchedulerHeaderDatePosition, SchedulerHeaderNavigationStyle, SchedulerHeaderViewPosition, HorizontalScrollBarVisibility, MinuteFormat, MonthFormat, ResizeHandlesVisibility, SchedulerScrollButtonsPosition, SchedulerTimelineDayScale, VerticalScrollBarVisibility, SchedulerViewType, SchedulerViews, SchedulerViewSelectorType, WeekDayFormat, YearFormat, SchedulerDataExport, SchedulerDataSource, SchedulerDataSourceRepeat, SchedulerNotification, SchedulerEvent, SchedulerEventRepeat, SchedulerResource, SchedulerStatuse, ElementRenderMode} from './../index';\nimport { DataAdapter } from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { SchedulerRepeatFreq, SchedulerNotificationType, SchedulerDayFormat, SchedulerGroupOrientation, SchedulerHourFormat, SchedulerHeaderDatePosition, SchedulerHeaderNavigationStyle, SchedulerHeaderViewPosition, HorizontalScrollBarVisibility, MinuteFormat, MonthFormat, ResizeHandlesVisibility, SchedulerScrollButtonsPosition, SchedulerTimelineDayScale, VerticalScrollBarVisibility, SchedulerViewType, SchedulerViews, SchedulerViewSelectorType, WeekDayFormat, YearFormat, SchedulerDataExport, SchedulerDataSource, SchedulerDataSourceRepeat, SchedulerNotification, SchedulerEvent, SchedulerEventRepeat, SchedulerResource, SchedulerStatuse, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Scheduler } from './../index';\nexport { DataAdapter } from './../index';\n\n\n@Directive({\n\tselector: 'smart-scheduler, [smart-scheduler]'\n})\n\nexport class SchedulerComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<Scheduler>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Scheduler;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Scheduler;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Scheduler>document.createElement('smart-scheduler');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Determines the scroll speed while dragging an event.  */\n\t@Input()\n\tget autoScrollStep(): number {\n\t\treturn this.nativeElement ? this.nativeElement.autoScrollStep : undefined;\n\t}\n\tset autoScrollStep(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.autoScrollStep = value : undefined;\n\t}\n\n\t/** @description Determines the color scheme for the event background selector in the event window editor.  */\n\t@Input()\n\tget colorScheme(): string[] {\n\t\treturn this.nativeElement ? this.nativeElement.colorScheme : undefined;\n\t}\n\tset colorScheme(value: string[]) {\n\t\tthis.nativeElement ? this.nativeElement.colorScheme = value : undefined;\n\t}\n\n\t/** @description Enables/Disables the current time indicator. Current time indicator shows the current time in the appropriate view cells.  */\n\t@Input()\n\tget currentTimeIndicator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.currentTimeIndicator : undefined;\n\t}\n\tset currentTimeIndicator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.currentTimeIndicator = value : undefined;\n\t}\n\n\t/** @description Determines the refresh interval in seconds for the currentTimeIndicator.  */\n\t@Input()\n\tget currentTimeIndicatorInterval(): number {\n\t\treturn this.nativeElement ? this.nativeElement.currentTimeIndicatorInterval : undefined;\n\t}\n\tset currentTimeIndicatorInterval(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.currentTimeIndicatorInterval = value : undefined;\n\t}\n\n\t/** @description Determines the context menu items that are visible when the Context Menu is opened. */\n\t@Input()\n\tget contextMenuDataSource(): any {\n\t\treturn this.nativeElement ? this.nativeElement.contextMenuDataSource : undefined;\n\t}\n\tset contextMenuDataSource(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.contextMenuDataSource = value : undefined;\n\t}\n\n\t/** @description Allows to customize the content of the event elements. It can be an HTMLTemplateElement that will be applied to all events or it's id as a string or a function that will be called for each event with the following parameters: eventContent - the content holder for the event,eventObj - the event object.. When using an HTMLTemplateElement it's possible to add property bindings inside the template that will be mapped to the corresponding object properties. */\n\t@Input()\n\tget eventTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.eventTemplate : undefined;\n\t}\n\tset eventTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.eventTemplate = value : undefined;\n\t}\n\n\t/** @description Allows to customize the content of the event collector elements. It can be an HTMLTemplateElement that will be applied to all events or it's id as a string or a function that will be called for each event with the following parameters: eventContent - the content holder for the event,eventObj - the event object.. When using an HTMLTemplateElement it's possible to add property bindings inside the template that will be mapped to the corresponding object properties. */\n\t@Input()\n\tget eventCollectorTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.eventCollectorTemplate : undefined;\n\t}\n\tset eventCollectorTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.eventCollectorTemplate = value : undefined;\n\t}\n\n\t/** @description  Determines how the events inside the Scheduler are rendered.classic - the events are arranged next to each other and try to fit inside the cells.modern - the events obey the CSS property that determines their size and if there's not enough space inside the cell for all events to appear, an event collector is created to hold the rest of the events. On mobile phones only collectors are created. */\n\t@Input()\n\tget eventRenderMode(): string {\n\t\treturn this.nativeElement ? this.nativeElement.eventRenderMode : undefined;\n\t}\n\tset eventRenderMode(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.eventRenderMode = value : undefined;\n\t}\n\n\t/** @description Allows to customize the content of the event menu items (tooltip). When clicked on an event element an event menu with details opens. It can be an HTMLTemplateElement that will be applied to all events or it's id as a string or a function that will be called for each event with the following parameters: eventContent - the content holder for the event,eventObj - the event object.. When using an HTMLTemplateElement it's possible to add property bindings inside the template that will be mapped to the corresponding object properties. */\n\t@Input()\n\tget eventTooltipTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.eventTooltipTemplate : undefined;\n\t}\n\tset eventTooltipTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.eventTooltipTemplate = value : undefined;\n\t}\n\n\t/** @description Allows to customize the content of the timeline cells. It can be an HTMLTemplateElement that will be applied to all cells or it's id as a string or a function that will be called for each cell with the following parameters: cellContent - the content holder for the cell,cellDate - the cell date.. When using an HTMLTemplateElement it's possible to add property bindings inside the template that will be mapped to the value of the cell. */\n\t@Input()\n\tget cellTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.cellTemplate : undefined;\n\t}\n\tset cellTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.cellTemplate = value : undefined;\n\t}\n\n\t/** @description Determines the currently visible date for the Scheduler. */\n\t@Input()\n\tget dateCurrent(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dateCurrent : undefined;\n\t}\n\tset dateCurrent(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dateCurrent = value : undefined;\n\t}\n\n\t/** @description Sets the Schedulers's Data Export options. */\n\t@Input()\n\tget dataExport(): SchedulerDataExport {\n\t\treturn this.nativeElement ? this.nativeElement.dataExport : undefined;\n\t}\n\tset dataExport(value: SchedulerDataExport) {\n\t\tthis.nativeElement ? this.nativeElement.dataExport = value : undefined;\n\t}\n\n\t/** @description Determines the events that will be loaded inside the Timeline. Each event represents an object that should contain the following properties: */\n\t@Input()\n\tget dataSource(): SchedulerDataSource[] {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: SchedulerDataSource[]) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description A callback that can be used to customize the text inside the date selector located in the header. The callback has one parameter - the current date. */\n\t@Input()\n\tget dateSelectorFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dateSelectorFormatFunction : undefined;\n\t}\n\tset dateSelectorFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dateSelectorFormatFunction = value : undefined;\n\t}\n\n\t/** @description Determines the day format of the dates in the timeline. */\n\t@Input()\n\tget dayFormat(): SchedulerDayFormat {\n\t\treturn this.nativeElement ? this.nativeElement.dayFormat : undefined;\n\t}\n\tset dayFormat(value: SchedulerDayFormat) {\n\t\tthis.nativeElement ? this.nativeElement.dayFormat = value : undefined;\n\t}\n\n\t/** @description Enables or disables the element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Disables auto scrolling of the timeline while dragging/resizing an event. */\n\t@Input()\n\tget disableAutoScroll(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableAutoScroll : undefined;\n\t}\n\tset disableAutoScroll(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableAutoScroll = value : undefined;\n\t}\n\n\t/** @description Disables dragging of events. */\n\t@Input()\n\tget disableDrag(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableDrag : undefined;\n\t}\n\tset disableDrag(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableDrag = value : undefined;\n\t}\n\n\t/** @description Disables dropping of events. */\n\t@Input()\n\tget disableDrop(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableDrop : undefined;\n\t}\n\tset disableDrop(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableDrop = value : undefined;\n\t}\n\n\t/** @description Disables resizing of events. */\n\t@Input()\n\tget disableResize(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableResize : undefined;\n\t}\n\tset disableResize(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableResize = value : undefined;\n\t}\n\n\t/** @description Disables the cell selection. */\n\t@Input()\n\tget disableSelection(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableSelection : undefined;\n\t}\n\tset disableSelection(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableSelection = value : undefined;\n\t}\n\n\t/** @description Disables the window editor for the events. */\n\t@Input()\n\tget disableWindowEditor(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableWindowEditor : undefined;\n\t}\n\tset disableWindowEditor(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableWindowEditor = value : undefined;\n\t}\n\n\t/** @description Disables the context menu of the events and cells. */\n\t@Input()\n\tget disableContextMenu(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableContextMenu : undefined;\n\t}\n\tset disableContextMenu(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableContextMenu = value : undefined;\n\t}\n\n\t/** @description Disables the event menu that appears when an event/collector has been clicked. */\n\t@Input()\n\tget disableEventMenu(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableEventMenu : undefined;\n\t}\n\tset disableEventMenu(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableEventMenu = value : undefined;\n\t}\n\n\t/** @description Disables the view menu that allows to select the current Scheduler view. */\n\t@Input()\n\tget disableViewMenu(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableViewMenu : undefined;\n\t}\n\tset disableViewMenu(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableViewMenu = value : undefined;\n\t}\n\n\t/** @description Disables the date menu that allows to select the current Scheduler date. */\n\t@Input()\n\tget disableDateMenu(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableDateMenu : undefined;\n\t}\n\tset disableDateMenu(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableDateMenu = value : undefined;\n\t}\n\n\t/** @description A callback that can be used to customize the drag feedback that appears when an event is dragged. */\n\t@Input()\n\tget dragFeedbackFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dragFeedbackFormatFunction : undefined;\n\t}\n\tset dragFeedbackFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dragFeedbackFormatFunction = value : undefined;\n\t}\n\n\t/** @description Determines the offset for the drag feedback from the pointer. */\n\t@Input()\n\tget dragOffset(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dragOffset : undefined;\n\t}\n\tset dragOffset(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dragOffset = value : undefined;\n\t}\n\n\t/** @description A getter that returns  an array of all Scheduler events. */\n\t@Input()\n\tget events(): SchedulerEvent[] {\n\t\treturn this.nativeElement ? this.nativeElement.events : undefined;\n\t}\n\tset events(value: SchedulerEvent[]) {\n\t\tthis.nativeElement ? this.nativeElement.events = value : undefined;\n\t}\n\n\t/** @description Determines the first day of week for the Scheduler. By default it's Sunday. */\n\t@Input()\n\tget firstDayOfWeek(): number {\n\t\treturn this.nativeElement ? this.nativeElement.firstDayOfWeek : undefined;\n\t}\n\tset firstDayOfWeek(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.firstDayOfWeek = value : undefined;\n\t}\n\n\t/** @description Determines whether the events will be grouped by date. */\n\t@Input()\n\tget groupByDate(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.groupByDate : undefined;\n\t}\n\tset groupByDate(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.groupByDate = value : undefined;\n\t}\n\n\t/** @description Determines the grouping orientation. */\n\t@Input()\n\tget groupOrientation(): SchedulerGroupOrientation {\n\t\treturn this.nativeElement ? this.nativeElement.groupOrientation : undefined;\n\t}\n\tset groupOrientation(value: SchedulerGroupOrientation) {\n\t\tthis.nativeElement ? this.nativeElement.groupOrientation = value : undefined;\n\t}\n\n\t/** @description Allows to customize the content of the group cells that are visible inside the header. It can be an HTMLTemplateElement that will be applied to all cells or it's id as a string or a function that will be called for each group cell with the following parameters: cellContent - the content holder for the group cell.cellObj - the group cell object.. When using an HTMLTemplateElement it's possible to add property bindings inside the template that will be mapped to the corresponding object properties. */\n\t@Input()\n\tget groupTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.groupTemplate : undefined;\n\t}\n\tset groupTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.groupTemplate = value : undefined;\n\t}\n\n\t/** @description Determines the resources that the events are grouped by. */\n\t@Input()\n\tget groups(): any {\n\t\treturn this.nativeElement ? this.nativeElement.groups : undefined;\n\t}\n\tset groups(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.groups = value : undefined;\n\t}\n\n\t/** @description Determines the end hour that will be displayed in 'day' and 'week' views. */\n\t@Input()\n\tget hourEnd(): number {\n\t\treturn this.nativeElement ? this.nativeElement.hourEnd : undefined;\n\t}\n\tset hourEnd(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.hourEnd = value : undefined;\n\t}\n\n\t/** @description Determines the start hour that will be displayed in 'day' and 'week' views. */\n\t@Input()\n\tget hourStart(): number {\n\t\treturn this.nativeElement ? this.nativeElement.hourStart : undefined;\n\t}\n\tset hourStart(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.hourStart = value : undefined;\n\t}\n\n\t/** @description Determines the formatting of hours inside the element. */\n\t@Input()\n\tget hourFormat(): SchedulerHourFormat {\n\t\treturn this.nativeElement ? this.nativeElement.hourFormat : undefined;\n\t}\n\tset hourFormat(value: SchedulerHourFormat) {\n\t\tthis.nativeElement ? this.nativeElement.hourFormat = value : undefined;\n\t}\n\n\t/** @description Allows to customize the header of the Scheduler. It can be an HTMLTemplateElement, it's id as a string or a function with the following parameters: headerContent - the header container.. */\n\t@Input()\n\tget headerTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.headerTemplate : undefined;\n\t}\n\tset headerTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.headerTemplate = value : undefined;\n\t}\n\n\t/** @description  Determines the position of the Date selector inside the Header of the element. */\n\t@Input()\n\tget headerDatePosition(): SchedulerHeaderDatePosition {\n\t\treturn this.nativeElement ? this.nativeElement.headerDatePosition : undefined;\n\t}\n\tset headerDatePosition(value: SchedulerHeaderDatePosition) {\n\t\tthis.nativeElement ? this.nativeElement.headerDatePosition = value : undefined;\n\t}\n\n\t/** @description  Determines the styling of the Header navigation controls. */\n\t@Input()\n\tget headerNavigationStyle(): SchedulerHeaderNavigationStyle {\n\t\treturn this.nativeElement ? this.nativeElement.headerNavigationStyle : undefined;\n\t}\n\tset headerNavigationStyle(value: SchedulerHeaderNavigationStyle) {\n\t\tthis.nativeElement ? this.nativeElement.headerNavigationStyle = value : undefined;\n\t}\n\n\t/** @description  Determines the position of the view selector control inside the Header of the element. */\n\t@Input()\n\tget headerViewPosition(): SchedulerHeaderViewPosition {\n\t\treturn this.nativeElement ? this.nativeElement.headerViewPosition : undefined;\n\t}\n\tset headerViewPosition(value: SchedulerHeaderViewPosition) {\n\t\tthis.nativeElement ? this.nativeElement.headerViewPosition = value : undefined;\n\t}\n\n\t/** @description Determines whether the 'All Day' container with the all day events is hidden or not. */\n\t@Input()\n\tget hideAllDay(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideAllDay : undefined;\n\t}\n\tset hideAllDay(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideAllDay = value : undefined;\n\t}\n\n\t/** @description Determines whether the days set by 'nonworkingDays' property are hidden or not. */\n\t@Input()\n\tget hideNonworkingWeekdays(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideNonworkingWeekdays : undefined;\n\t}\n\tset hideNonworkingWeekdays(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideNonworkingWeekdays = value : undefined;\n\t}\n\n\t/** @description Determines whether the 'Today' button is hidden or not. */\n\t@Input()\n\tget hideTodayButton(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideTodayButton : undefined;\n\t}\n\tset hideTodayButton(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideTodayButton = value : undefined;\n\t}\n\n\t/** @description Determines whether the checkable items in the view selection menu are hidden or not. */\n\t@Input()\n\tget hideViewMenuCheckableItems(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideViewMenuCheckableItems : undefined;\n\t}\n\tset hideViewMenuCheckableItems(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideViewMenuCheckableItems = value : undefined;\n\t}\n\n\t/** @description Determines whether the weekend days are hidden or not. */\n\t@Input()\n\tget hideWeekend(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideWeekend : undefined;\n\t}\n\tset hideWeekend(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideWeekend = value : undefined;\n\t}\n\n\t/** @description Determines weather or not horizontal scrollbar is shown. */\n\t@Input()\n\tget horizontalScrollBarVisibility(): HorizontalScrollBarVisibility {\n\t\treturn this.nativeElement ? this.nativeElement.horizontalScrollBarVisibility : undefined;\n\t}\n\tset horizontalScrollBarVisibility(value: HorizontalScrollBarVisibility) {\n\t\tthis.nativeElement ? this.nativeElement.horizontalScrollBarVisibility = value : undefined;\n\t}\n\n\t/** @description  Determines the language of the Scheduler.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Detetmines the maximum view date for the Scheduler. */\n\t@Input()\n\tget max(): any {\n\t\treturn this.nativeElement ? this.nativeElement.max : undefined;\n\t}\n\tset max(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.max = value : undefined;\n\t}\n\n\t/** @description Detetmines the minimum view date for the Scheduler. */\n\t@Input()\n\tget min(): any {\n\t\treturn this.nativeElement ? this.nativeElement.min : undefined;\n\t}\n\tset min(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.min = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the element that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Determines the minute formatting inside the Scheduler. */\n\t@Input()\n\tget minuteFormat(): MinuteFormat {\n\t\treturn this.nativeElement ? this.nativeElement.minuteFormat : undefined;\n\t}\n\tset minuteFormat(value: MinuteFormat) {\n\t\tthis.nativeElement ? this.nativeElement.minuteFormat = value : undefined;\n\t}\n\n\t/** @description Determines the month name formatting inside the Scheduler. */\n\t@Input()\n\tget monthFormat(): MonthFormat {\n\t\treturn this.nativeElement ? this.nativeElement.monthFormat : undefined;\n\t}\n\tset monthFormat(value: MonthFormat) {\n\t\tthis.nativeElement ? this.nativeElement.monthFormat = value : undefined;\n\t}\n\n\t/** @description Determines the nonworking days of the week from 0 to 6, where 0 is the first day of the week and 6 is the last day. Nonworking days will be colored differently inside the Timeline. The color is determined by a CSS variable. */\n\t@Input()\n\tget nonworkingDays(): any {\n\t\treturn this.nativeElement ? this.nativeElement.nonworkingDays : undefined;\n\t}\n\tset nonworkingDays(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.nonworkingDays = value : undefined;\n\t}\n\n\t/** @description Determines the nonworking hours of the day. Hours are represented as numbers inside an array, however ranges of hours can be defined as an array with starting and ending hour separated by a comma. In the timline the cells that represent nonworking days are colored differently from the rest. */\n\t@Input()\n\tget nonworkingHours(): any {\n\t\treturn this.nativeElement ? this.nativeElement.nonworkingHours : undefined;\n\t}\n\tset nonworkingHours(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.nonworkingHours = value : undefined;\n\t}\n\n\t/** @description Determines the interval (in seconds) at which the element will check for notifications. */\n\t@Input()\n\tget notificationInterval(): number {\n\t\treturn this.nativeElement ? this.nativeElement.notificationInterval : undefined;\n\t}\n\tset notificationInterval(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.notificationInterval = value : undefined;\n\t}\n\n\t/** @description Determines the visibility of the resize handles. */\n\t@Input()\n\tget resizeHandlesVisibility(): ResizeHandlesVisibility {\n\t\treturn this.nativeElement ? this.nativeElement.resizeHandlesVisibility : undefined;\n\t}\n\tset resizeHandlesVisibility(value: ResizeHandlesVisibility) {\n\t\tthis.nativeElement ? this.nativeElement.resizeHandlesVisibility = value : undefined;\n\t}\n\n\t/** @description Determines the rate at which the element will refresh it's content on element resize. By default it's refresh immediately. This property is used for element resize throttling */\n\t@Input()\n\tget resizeInterval(): number {\n\t\treturn this.nativeElement ? this.nativeElement.resizeInterval : undefined;\n\t}\n\tset resizeInterval(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.resizeInterval = value : undefined;\n\t}\n\n\t/** @description An array of resources that can be assigned to the events. */\n\t@Input()\n\tget resources(): SchedulerResource[] {\n\t\treturn this.nativeElement ? this.nativeElement.resources : undefined;\n\t}\n\tset resources(value: SchedulerResource[]) {\n\t\tthis.nativeElement ? this.nativeElement.resources = value : undefined;\n\t}\n\n\t/** @description Defines an array of dates that are not allowed to have events on. Events that overlap restricted Dates or start/end on them will not be displayed. */\n\t@Input()\n\tget restrictedDates(): any {\n\t\treturn this.nativeElement ? this.nativeElement.restrictedDates : undefined;\n\t}\n\tset restrictedDates(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.restrictedDates = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description  Determines the position of the date navigation navigation buttons inside the header of the element. */\n\t@Input()\n\tget scrollButtonsPosition(): SchedulerScrollButtonsPosition {\n\t\treturn this.nativeElement ? this.nativeElement.scrollButtonsPosition : undefined;\n\t}\n\tset scrollButtonsPosition(value: SchedulerScrollButtonsPosition) {\n\t\tthis.nativeElement ? this.nativeElement.scrollButtonsPosition = value : undefined;\n\t}\n\n\t/** @description Enables/Disables the current time shader. If enabled all cells that represent past time will be shaded. */\n\t@Input()\n\tget shadeUntilCurrentTime(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.shadeUntilCurrentTime : undefined;\n\t}\n\tset shadeUntilCurrentTime(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.shadeUntilCurrentTime = value : undefined;\n\t}\n\n\t/** @description Determines the repeating delay of the repeat buttons inside the header of the element. Such buttons are the Date navigation buttons and the view scroll buttons. */\n\t@Input()\n\tget spinButtonsDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.spinButtonsDelay : undefined;\n\t}\n\tset spinButtonsDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.spinButtonsDelay = value : undefined;\n\t}\n\n\t/** @description Determines the initial delay of the repeat buttons inside the header of the element. Such buttons are the Date navigation buttons and the view scroll buttons. */\n\t@Input()\n\tget spinButtonsInitialDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.spinButtonsInitialDelay : undefined;\n\t}\n\tset spinButtonsInitialDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.spinButtonsInitialDelay = value : undefined;\n\t}\n\n\t/** @description Defines the statuses that will be available for selection thourgh the window editor for the events. */\n\t@Input()\n\tget statuses(): SchedulerStatuse[] {\n\t\treturn this.nativeElement ? this.nativeElement.statuses : undefined;\n\t}\n\tset statuses(value: SchedulerStatuse[]) {\n\t\tthis.nativeElement ? this.nativeElement.statuses = value : undefined;\n\t}\n\n\t/** @description Sets or gets the element's visual theme.  */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description A format function for the Header of the Timeline. Allows to modify the date labels in the header cells. */\n\t@Input()\n\tget timelineHeaderFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.timelineHeaderFormatFunction : undefined;\n\t}\n\tset timelineHeaderFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.timelineHeaderFormatFunction = value : undefined;\n\t}\n\n\t/** @description Determines the date scale for the timeline cells. */\n\t@Input()\n\tget timelineDayScale(): SchedulerTimelineDayScale {\n\t\treturn this.nativeElement ? this.nativeElement.timelineDayScale : undefined;\n\t}\n\tset timelineDayScale(value: SchedulerTimelineDayScale) {\n\t\tthis.nativeElement ? this.nativeElement.timelineDayScale = value : undefined;\n\t}\n\n\t/** @description Enables/Disables the tick marks next to the time cells in the vertical header of the element. Time header appears in 'day' and 'week' views. */\n\t@Input()\n\tget timeRulerTicks(): string {\n\t\treturn this.nativeElement ? this.nativeElement.timeRulerTicks : undefined;\n\t}\n\tset timeRulerTicks(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.timeRulerTicks = value : undefined;\n\t}\n\n\t/** @description Determines the timeZone that the dates will be displayed in. Accepts values from the IANA time zone database. By default it uses the local time zone. */\n\t@Input()\n\tget timeZone(): string {\n\t\treturn this.nativeElement ? this.nativeElement.timeZone : undefined;\n\t}\n\tset timeZone(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.timeZone = value : undefined;\n\t}\n\n\t/** @description Allows to display multiple timeZones at once. Accepts an array values from the IANA time zone database. By default it uses the local time zone. */\n\t@Input()\n\tget timeZones(): any {\n\t\treturn this.nativeElement ? this.nativeElement.timeZones : undefined;\n\t}\n\tset timeZones(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.timeZones = value : undefined;\n\t}\n\n\t/** @description Determines the delay ( in miliseconds) before the tooltip/menu appears. */\n\t@Input()\n\tget tooltipDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.tooltipDelay : undefined;\n\t}\n\tset tooltipDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.tooltipDelay = value : undefined;\n\t}\n\n\t/** @description Determines the offset ot the tooltip/menu. */\n\t@Input()\n\tget tooltipOffset(): number[] {\n\t\treturn this.nativeElement ? this.nativeElement.tooltipOffset : undefined;\n\t}\n\tset tooltipOffset(value: number[]) {\n\t\tthis.nativeElement ? this.nativeElement.tooltipOffset = value : undefined;\n\t}\n\n\t/** @description Determines weather or not vertical scrollbar is shown. */\n\t@Input()\n\tget verticalScrollBarVisibility(): VerticalScrollBarVisibility {\n\t\treturn this.nativeElement ? this.nativeElement.verticalScrollBarVisibility : undefined;\n\t}\n\tset verticalScrollBarVisibility(value: VerticalScrollBarVisibility) {\n\t\tthis.nativeElement ? this.nativeElement.verticalScrollBarVisibility = value : undefined;\n\t}\n\n\t/** @description Determines the current view. The property accepts view values that are defined in the views property. Custom views should contain a valid value that will be set as the current view. */\n\t@Input()\n\tget view(): string {\n\t\treturn this.nativeElement ? this.nativeElement.view : undefined;\n\t}\n\tset view(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.view = value : undefined;\n\t}\n\n\t/** @description Indicates the current Scheduler viewType. Custom views must contain a valid type property that corresponds to one of the view types. This property should not be set. */\n\t@Input()\n\tget viewType(): SchedulerViewType {\n\t\treturn this.nativeElement ? this.nativeElement.viewType : undefined;\n\t}\n\tset viewType(value: SchedulerViewType) {\n\t\tthis.nativeElement ? this.nativeElement.viewType = value : undefined;\n\t}\n\n\t/** @description Determines the viewing date range of the timeline. Custom views can be defined as objects instead of strings. The view object should contain the following properties: label - the label for the view.value - the value for the view. The value is the unique identifier for the view.type - the type of view. The type should be one of the default allowed values for a view.hideWeekend - an Optional property that allows to hide the weekend only for this specific view.hideNonworkingWeekdays - an Optional property that allows to hide the nonwrking weekdays for this specific view.shortcutKey - an Optional property that allows to set a custom shortcut key for the view. */\n\t@Input()\n\tget views(): SchedulerViews {\n\t\treturn this.nativeElement ? this.nativeElement.views : undefined;\n\t}\n\tset views(value: SchedulerViews) {\n\t\tthis.nativeElement ? this.nativeElement.views = value : undefined;\n\t}\n\n\t/** @description Determines type of the view selector located in the header of the element. */\n\t@Input()\n\tget viewSelectorType(): SchedulerViewSelectorType {\n\t\treturn this.nativeElement ? this.nativeElement.viewSelectorType : undefined;\n\t}\n\tset viewSelectorType(value: SchedulerViewSelectorType) {\n\t\tthis.nativeElement ? this.nativeElement.viewSelectorType = value : undefined;\n\t}\n\n\t/** @description Determines the format of the week days inside the element.  */\n\t@Input()\n\tget weekdayFormat(): WeekDayFormat {\n\t\treturn this.nativeElement ? this.nativeElement.weekdayFormat : undefined;\n\t}\n\tset weekdayFormat(value: WeekDayFormat) {\n\t\tthis.nativeElement ? this.nativeElement.weekdayFormat = value : undefined;\n\t}\n\n\t/** @description Determines the format of the dates inside the timeline header when they represent years. */\n\t@Input()\n\tget yearFormat(): YearFormat {\n\t\treturn this.nativeElement ? this.nativeElement.yearFormat : undefined;\n\t}\n\tset yearFormat(value: YearFormat) {\n\t\tthis.nativeElement ? this.nativeElement.yearFormat = value : undefined;\n\t}\n\n\t/** @description Sets or gets if the element can be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description A function that can be used to completly customize the popup Window that is used to edit events. The function has the following arguments: target - the target popup Window that is about to be opened.type - the type of the window. The type determines the purpose of the window. The default type is an empty string which means that it's the default event editing window. The other type is 'confirm' ( confirmation window) that appears when clicking on a repeating event. eventObj - the event object that is going to be edited. */\n\t@Input()\n\tget windowCustomizationFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.windowCustomizationFunction : undefined;\n\t}\n\tset windowCustomizationFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.windowCustomizationFunction = value : undefined;\n\t}\n\n\t/** @description This event is triggered when a batch update was started after executing the beginUpdate method.\n\t*  @param event. The custom event. \t*/\n\t@Output() onBeginUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a batch update was ended from after executing the endUpdate method.\n\t*  @param event. The custom event. \t*/\n\t@Output() onEndUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a new cell is selected/unselected.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue, \toldValue)\n\t*   value - The new selected Date.\n\t*   oldValue - The previously selected Date.\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when en event, event item or a context menu item is clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem, \ttype, \titemObj)\n\t*   item - The HTMLElement for the event.\n\t*   type - The type of item that is clicked. The possible values are: <ul><li>event - when an event item is clicked.</li><li>context - when a context menu item is clicked.</li></ul>.\n\t*   itemObj - The event object.\n\t*/\n\t@Output() onItemClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when an Event is inserted.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem)\n\t*   item - An object that represents the actual item with it's attributes.\n\t*/\n\t@Output() onItemInsert: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when an Event is removed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem)\n\t*   item - An object that represents the actual item with it's attributes.\n\t*/\n\t@Output() onItemRemove: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when an Event is updated.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttype, \titem)\n\t*   type - The type of item that has been modified.\n\t*   item - An object that represents the actual item with it's attributes.\n\t*/\n\t@Output() onItemUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the view is changed via user interaction.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \tvalue)\n\t*   oldValue - The value of the previously selected view.\n\t*   value - The value of the new selected view.\n\t*/\n\t@Output() onViewChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a shortcut key for an event is pressed. By default only 'Delete' key is used.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tkey, \ttarget, \teventObj)\n\t*   key - The shortcut key that was pressed.\n\t*   target - The event target (HTMLElement).\n\t*   eventObj - The scheduler Event object that affected by the keypress.\n\t*/\n\t@Output() onEventShortcutKey: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the 'dateCurrent' property is changed. This can be caused by navigating to a different date.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \tvalue)\n\t*   oldValue - The previous current date that was in view.\n\t*   value - The current date in view.\n\t*/\n\t@Output() onDateChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when dragging of an event begins. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \titem, \titemDateRange, \toriginalEvent)\n\t*   target - The HTMLElement that corresponds to the event that is going to be dragged.\n\t*   item - The scheduler Event object that is going to be dragged.\n\t*   itemDateRange - The start/end dates for the Scheduler Event.\n\t*   originalEvent - The original event object.\n\t*/\n\t@Output() onDragStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when dragging of an event finishes.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \titem, \titemDateRange, \toriginalEvent)\n\t*   target - The HTMLElement that corresponds to the event that is dragged.\n\t*   item - The scheduler Event object that is dragged.\n\t*   itemDateRange - The new start/end dates for the dragged Scheduler Event.\n\t*   originalEvent - The original event object.\n\t*/\n\t@Output() onDragEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when resizing of a task starts. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \titem, \titemDateRange, \toriginalEvent)\n\t*   target - The HTMLElement that corresponds to the event that is going to be resized.\n\t*   item - The scheduler Event object that is going to be resized.\n\t*   itemDateRange - The start/end dates for Scheduler Event that is going to be resized.\n\t*   originalEvent - The original event object.\n\t*/\n\t@Output() onResizeStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the resizing of an event finishes.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \titem, \titemDateRange, \toriginalEvent)\n\t*   target - The HTMLElement that corresponds to the event that is resized.\n\t*   item - The scheduler Event object that is resized.\n\t*   itemDateRange - The new start/end dates for the resized Scheduler Event.\n\t*   originalEvent - The original event object.\n\t*/\n\t@Output() onResizeEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user starts top open the event dialog window. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \titem, \ttype)\n\t*   target - The dialog window that is opening.\n\t*   item - The event object that is going to be edited.\n\t*   type - The type of window that is going to open. Two window types are available, the dafault which is an empty string ( does not have a type) and 'confirm' which is displayed when clicked on a repeating event.\n\t*/\n\t@Output() onEditDialogOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user opens the event dialog window.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \teditors, \titem)\n\t*   target - The dialog window that is opened.\n\t*   editors - An object containing all event editors that are present inside the window. This property is undefined when the window is of type 'confirm', because confirm windows do not contain editors.\n\t*   item - The event object that is being edited.\n\t*/\n\t@Output() onEditDialogOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user closes the event dialog window.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \teditors, \titem)\n\t*   target - The dialog window that is closed.\n\t*   editors - An object containing all event editors that are present inside the window. This property is undefined when the window is of type 'confirm', because confirm windows do not contain editors.\n\t*   item - The event object that is being edited.\n\t*/\n\t@Output() onEditDialogClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user is about to close the event dialog window. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \titem, \ttype)\n\t*   target - The dialog window that is closing.\n\t*   item - The event object that is edited.\n\t*   type - The type of window that is going to be closed. Two window types are available, the dafault which is an empty string ( does not have a type) and 'confirm' which is displayed when clicked on a repeating event.\n\t*/\n\t@Output() onEditDialogClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user begins to open the context menu on a timeline cell or an event element. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \tcellObj, \teventObj)\n\t*   target - The context menu instance.\n\t*   owner - The HTMLElement that the menu belongs to.\n\t*   cellObj - The cell object that is the target of the menu. If the target is an event instead of a cell this parameter will be undefined.\n\t*   eventObj - The event object that is the target of the menu. If the target is a cell instead of an event this paramter will be undefined.\n\t*/\n\t@Output() onContextMenuOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the context menu is opened.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \tcellObj, \teventObj)\n\t*   target - The context menu instance.\n\t*   owner - The HTMLElement that the menu belongs to.\n\t*   cellObj - The cell object that is the target of the menu. If the target is an event instead of a cell this parameter will be undefined.\n\t*   eventObj - The event object that is the target of the menu. If the target is a cell instead of an event this paramter will be undefined.\n\t*/\n\t@Output() onContextMenuOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the context menu is closed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \tcellObj, \teventObj)\n\t*   target - The context menu instance.\n\t*   owner - The HTMLElement that the menu belongs to.\n\t*   cellObj - The cell object that is the target of the menu. If the target is an event instead of a cell this parameter will be undefined.\n\t*   eventObj - The event object that is the target of the menu. If the target is a cell instead of an event this paramter will be undefined.\n\t*/\n\t@Output() onContextMenuClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user is about to close the context menu. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \tcellObj, \teventObj)\n\t*   target - The context menu instance.\n\t*   owner - The HTMLElement that the menu belongs to.\n\t*   cellObj - The cell object that is the target of the menu. If the target is an event instead of a cell this parameter will be undefined.\n\t*   eventObj - The event object that is the target of the menu. If the target is a cell instead of an event this paramter will be undefined.\n\t*/\n\t@Output() onContextMenuClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the event menu is about to open. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \teventObj)\n\t*   target - The menu instance.\n\t*   owner - The HTMLElement of the event that the menu belongs to.\n\t*   eventObj - The event object that is the target of the menu.\n\t*/\n\t@Output() onEventMenuOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the event menu is opened.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \teventObj)\n\t*   target - The menu instance.\n\t*   owner - The HTMLElement of the event that the menu belongs to.\n\t*   eventObj - The event object that is the target of the menu.\n\t*/\n\t@Output() onEventMenuOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the event menu is closed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \teventObj)\n\t*   target - The menu instance.\n\t*   owner - The HTMLElement of the event that the menu belongs to.\n\t*   eventObj - The event object that is the target of the menu.\n\t*/\n\t@Output() onEventMenuClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the evet menu is about to close. This event allows to cancel the operation by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget, \towner, \teventObj)\n\t*   target - The menu instance.\n\t*   owner - The HTMLElement of the event that the menu belongs to.\n\t*   eventObj - The event object that is the target of the menu.\n\t*/\n\t@Output() onEventMenuClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the date selection menu is opened.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget)\n\t*   target - The menu instance.\n\t*/\n\t@Output() onDateMenuOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the date selection menu is closed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget)\n\t*   target - The menu instance.\n\t*/\n\t@Output() onDateMenuClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the view selection menu is opened.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget)\n\t*   target - The menu instance.\n\t*/\n\t@Output() onViewMenuOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the view selection menu is closed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\ttarget)\n\t*   target - The menu instance.\n\t*/\n\t@Output() onViewMenuClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a notification is opened.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tinstance)\n\t*   instance - The toast item instance that is opened.\n\t*/\n\t@Output() onNotificationOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a notification is closed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tinstance)\n\t*   instance - The toast item instance that is closed.\n\t*/\n\t@Output() onNotificationClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Starts an update operation. This is appropriate when calling multiple methods or set multiple properties at once. \n\t*/\n    public beginUpdate(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.beginUpdate();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.beginUpdate();\n            });\n        }\n    }\n\n\t/** @description Ends the update operation. This method will resume the rendering and will refresh the element. \n\t*/\n    public endUpdate(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.endUpdate();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.endUpdate();\n            });\n        }\n    }\n\n\t/** @description Refereshes the Scheduler by recalculating the Scrollbars.  \n\t* @param {boolean} fullRefresh?. If set the Scheduler will be re-rendered completely.\n\t*/\n    public refresh(fullRefresh?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.refresh(fullRefresh);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.refresh(fullRefresh);\n            });\n        }\n    }\n\n\t/** @description Exports the events from the Scheduler. \n\t* @param {string} dataFormat. Determines the format of the exported file. The following values are available: <ul><li><b>pdf</b></li><li><b>xlsx</b></li><li><b>html</b></li><li><b>iCal</b></li></ul>\n\t* @param {any} callback?. A callback that allows to format the exported data based on a condition. For additional details, refer ro the Smart Export Documentation.\n\t*/\n    public exportData(dataFormat: string, callback?: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.exportData(dataFormat, callback);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.exportData(dataFormat, callback);\n            });\n        }\n    }\n\n\t/** @description Returns a JSON representation of the events inside the Scheduler. \n\t* @returns {any}\n  */\n\tpublic async getState(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getState();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Removes a previously saved state of the element form LocalStorage according to it's id. Requires an id to be set to the element. \n\t*/\n    public clearState(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearState();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearState();\n            });\n        }\n    }\n\n\t/** @description Loads a previously saved state of the element or checks LocalStorage for any saved states if no argument is passed to the method. \n\t* @param {any[]} state?. An Array containing a valid structure of Scheduler events. If no state is provided, the element will check localStorage for a saved state.\n\t*/\n    public loadState(state?: any[]): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.loadState(state);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.loadState(state);\n            });\n        }\n    }\n\n\t/** @description Saves the current events of the element to LocalStorage. Requires an id to be set to the element. \n\t* @param {any[]} state?. An Array containing a valid structure of Scheduler events.\n\t*/\n    public saveState(state?: any[]): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveState(state);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveState(state);\n            });\n        }\n    }\n\n\t/** @description Checks whether the Scheduler contains the event. \n\t* @param {any} eventObj. A Scheduler event object.\n\t* @returns {boolean}\n  */\n\tpublic async containsEvent(eventObj): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.containsEvent(eventObj);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Inserts an event. \n\t* @param {any} eventObj. An object describing a Scheduler event that is not already present in the element.\n\t* @param {number} index?. A number that represents the index to insert the event at. If not provided the event is inserted at the end of the list.\n\t*/\n    public insertEvent(eventObj: any, index?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.insertEvent(eventObj, index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.insertEvent(eventObj, index);\n            });\n        }\n    }\n\n\t/** @description Updates an event. \n\t* @param {any} index. A number that represents the index of an event or a Scheduler event object.\n\t* @param {any} eventObj. An object describing a Scheduler event. The properties of this object will be applied to the desired event.\n\t*/\n    public updateEvent(index: any, eventObj: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateEvent(index, eventObj);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateEvent(index, eventObj);\n            });\n        }\n    }\n\n\t/** @description Removes an event. \n\t* @param {any} index. A number that represents the index of an event or the actual event object to be removed.\n\t*/\n    public removeEvent(index: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeEvent(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeEvent(index);\n            });\n        }\n    }\n\n\t/** @description Opens the popup Window for specific event Editing. \n\t* @param {any} index. A number that represents the index of a event or the actual event object to be edited.\n\t*/\n    public openWindow(index: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openWindow(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openWindow(index);\n            });\n        }\n    }\n\n\t/** @description Closes the popup window. \n\t*/\n    public closeWindow(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.closeWindow();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.closeWindow();\n            });\n        }\n    }\n\n\t/** @description Prepares the Scheduler for printing by opening the browser's Print Preview. \n\t*/\n    public print(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.print();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.print();\n            });\n        }\n    }\n\n\t/** @description Scrolls the Scheduler to a Date. \n\t* @param {Date} date. The date to scroll to.\n\t*/\n    public scrollToDate(date: Date): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.scrollToDate(date);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.scrollToDate(date);\n            });\n        }\n    }\n\n\t/** @description Scrolls the Scheduler to an event. \n\t* @param {any} index. The index of a Scheduler event or the actual event object to scroll to.\n\t*/\n    public scrollToEvent(index: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.scrollToEvent(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.scrollToEvent(index);\n            });\n        }\n    }\n\n\t/** @description Opens a custom notification. \n\t* @param {string} message. The notification message.\n\t* @param {any} toastSettings. Smart.Toast settings to be applied to the Toast element when opening the notification.\n\t*/\n    public openNotification(message: string, toastSettings: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openNotification(message, toastSettings);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openNotification(message, toastSettings);\n            });\n        }\n    }\n\n\t/** @description Closes all notifications. \n\t*/\n    public closeNotifications(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.closeNotifications();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.closeNotifications();\n            });\n        }\n    }\n\n\t/** @description Returns all occurances of an event. \n\t* @param {any} eventObj. A Scheduler evnet object.\n\t* @param {number} count. The number of occurances to return. By default 100 date occurances of the event are returned.\n\t*/\n    public occurrences(eventObj: any, count: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.occurrences(eventObj, count);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.occurrences(eventObj, count);\n            });\n        }\n    }\n\n\t/** @description Returns all occurances of an event between two dates. \n\t* @param {any} eventObj. A Scheduler event object.\n\t* @param {Date} dateFrom. The start date.\n\t* @param {Date} dateTo. The end date.\n\t*/\n    public occurrencesBetween(eventObj: any, dateFrom: Date, dateTo: Date): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.occurrencesBetween(eventObj, dateFrom, dateTo);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.occurrencesBetween(eventObj, dateFrom, dateTo);\n            });\n        }\n    }\n\n\t/** @description Returns the first occurance of an event after a date. \n\t* @param {any} eventObj. A Scheduler event object.\n\t* @param {number} date. The date after which the first occurance of the event will be returned.\n\t*/\n    public occurrenceAfter(eventObj: any, date: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.occurrenceAfter(eventObj, date);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.occurrenceAfter(eventObj, date);\n            });\n        }\n    }\n\n\t/** @description Returns the first occurance of an event before a date. \n\t* @param {any} eventObj. A Scheduler event object.\n\t* @param {number} date. The date before which the first occurance of the event will be returned.\n\t*/\n    public occurrenceBefore(eventObj: any, date: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.occurrenceBefore(eventObj, date);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.occurrenceBefore(eventObj, date);\n            });\n        }\n    }\n\n\t/** @description Returns the dateStart/dateEnd of a timeline cell. \n\t* @param {HTMLElement} cell. A Scheduler timeline cell element.\n\t* @returns {any}\n  */\n\tpublic async getCellDateRange(cell): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getCellDateRange(cell);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Opens the tooltip(event menu) for an event. \n\t* @param {any} eventObj. A Scheduler event object or it's index.\n\t*/\n    public openEventTooltip(eventObj: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openEventTooltip(eventObj);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openEventTooltip(eventObj);\n            });\n        }\n    }\n\n\t/** @description Closes the event tooltip (event menu). \n\t*/\n    public closeEventTooltip(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.closeEventTooltip();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.closeEventTooltip();\n            });\n        }\n    }\n\n\t/** @description Returns true or false whether the date is restricted or not. \n\t* @param {Date} date. A Scheduler event object or it's index.\n\t* @returns {boolean}\n  */\n\tpublic async isDateRestricted(date): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.isDateRestricted(date);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Returns true or false whether the event is restricted or not. \n\t* @param {any} eventObj. A Scheduler event  object or a direct event HTMLElement instance.\n\t* @returns {boolean}\n  */\n\tpublic async isEventRestricted(eventObj): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.isEventRestricted(eventObj);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['beginUpdateHandler'] = (event: CustomEvent) => { that.onBeginUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('beginUpdate', that.eventHandlers['beginUpdateHandler']);\n\n\t\tthat.eventHandlers['endUpdateHandler'] = (event: CustomEvent) => { that.onEndUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('endUpdate', that.eventHandlers['endUpdateHandler']);\n\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['itemClickHandler'] = (event: CustomEvent) => { that.onItemClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('itemClick', that.eventHandlers['itemClickHandler']);\n\n\t\tthat.eventHandlers['itemInsertHandler'] = (event: CustomEvent) => { that.onItemInsert.emit(event); }\n\t\tthat.nativeElement.addEventListener('itemInsert', that.eventHandlers['itemInsertHandler']);\n\n\t\tthat.eventHandlers['itemRemoveHandler'] = (event: CustomEvent) => { that.onItemRemove.emit(event); }\n\t\tthat.nativeElement.addEventListener('itemRemove', that.eventHandlers['itemRemoveHandler']);\n\n\t\tthat.eventHandlers['itemUpdateHandler'] = (event: CustomEvent) => { that.onItemUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('itemUpdate', that.eventHandlers['itemUpdateHandler']);\n\n\t\tthat.eventHandlers['viewChangeHandler'] = (event: CustomEvent) => { that.onViewChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('viewChange', that.eventHandlers['viewChangeHandler']);\n\n\t\tthat.eventHandlers['eventShortcutKeyHandler'] = (event: CustomEvent) => { that.onEventShortcutKey.emit(event); }\n\t\tthat.nativeElement.addEventListener('eventShortcutKey', that.eventHandlers['eventShortcutKeyHandler']);\n\n\t\tthat.eventHandlers['dateChangeHandler'] = (event: CustomEvent) => { that.onDateChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('dateChange', that.eventHandlers['dateChangeHandler']);\n\n\t\tthat.eventHandlers['dragStartHandler'] = (event: CustomEvent) => { that.onDragStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\n\t\tthat.eventHandlers['dragEndHandler'] = (event: CustomEvent) => { that.onDragEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\n\t\tthat.eventHandlers['resizeStartHandler'] = (event: CustomEvent) => { that.onResizeStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\n\t\tthat.eventHandlers['resizeEndHandler'] = (event: CustomEvent) => { that.onResizeEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\n\t\tthat.eventHandlers['editDialogOpeningHandler'] = (event: CustomEvent) => { that.onEditDialogOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('editDialogOpening', that.eventHandlers['editDialogOpeningHandler']);\n\n\t\tthat.eventHandlers['editDialogOpenHandler'] = (event: CustomEvent) => { that.onEditDialogOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('editDialogOpen', that.eventHandlers['editDialogOpenHandler']);\n\n\t\tthat.eventHandlers['editDialogCloseHandler'] = (event: CustomEvent) => { that.onEditDialogClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('editDialogClose', that.eventHandlers['editDialogCloseHandler']);\n\n\t\tthat.eventHandlers['editDialogClosingHandler'] = (event: CustomEvent) => { that.onEditDialogClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('editDialogClosing', that.eventHandlers['editDialogClosingHandler']);\n\n\t\tthat.eventHandlers['contextMenuOpeningHandler'] = (event: CustomEvent) => { that.onContextMenuOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('contextMenuOpening', that.eventHandlers['contextMenuOpeningHandler']);\n\n\t\tthat.eventHandlers['contextMenuOpenHandler'] = (event: CustomEvent) => { that.onContextMenuOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('contextMenuOpen', that.eventHandlers['contextMenuOpenHandler']);\n\n\t\tthat.eventHandlers['contextMenuCloseHandler'] = (event: CustomEvent) => { that.onContextMenuClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('contextMenuClose', that.eventHandlers['contextMenuCloseHandler']);\n\n\t\tthat.eventHandlers['contextMenuClosingHandler'] = (event: CustomEvent) => { that.onContextMenuClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('contextMenuClosing', that.eventHandlers['contextMenuClosingHandler']);\n\n\t\tthat.eventHandlers['eventMenuOpeningHandler'] = (event: CustomEvent) => { that.onEventMenuOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('eventMenuOpening', that.eventHandlers['eventMenuOpeningHandler']);\n\n\t\tthat.eventHandlers['eventMenuOpenHandler'] = (event: CustomEvent) => { that.onEventMenuOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('eventMenuOpen', that.eventHandlers['eventMenuOpenHandler']);\n\n\t\tthat.eventHandlers['eventMenuCloseHandler'] = (event: CustomEvent) => { that.onEventMenuClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('eventMenuClose', that.eventHandlers['eventMenuCloseHandler']);\n\n\t\tthat.eventHandlers['eventMenuClosingHandler'] = (event: CustomEvent) => { that.onEventMenuClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('eventMenuClosing', that.eventHandlers['eventMenuClosingHandler']);\n\n\t\tthat.eventHandlers['dateMenuOpenHandler'] = (event: CustomEvent) => { that.onDateMenuOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('dateMenuOpen', that.eventHandlers['dateMenuOpenHandler']);\n\n\t\tthat.eventHandlers['dateMenuCloseHandler'] = (event: CustomEvent) => { that.onDateMenuClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('dateMenuClose', that.eventHandlers['dateMenuCloseHandler']);\n\n\t\tthat.eventHandlers['viewMenuOpenHandler'] = (event: CustomEvent) => { that.onViewMenuOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('viewMenuOpen', that.eventHandlers['viewMenuOpenHandler']);\n\n\t\tthat.eventHandlers['viewMenuCloseHandler'] = (event: CustomEvent) => { that.onViewMenuClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('viewMenuClose', that.eventHandlers['viewMenuCloseHandler']);\n\n\t\tthat.eventHandlers['notificationOpenHandler'] = (event: CustomEvent) => { that.onNotificationOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('notificationOpen', that.eventHandlers['notificationOpenHandler']);\n\n\t\tthat.eventHandlers['notificationCloseHandler'] = (event: CustomEvent) => { that.onNotificationClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('notificationClose', that.eventHandlers['notificationCloseHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['beginUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('beginUpdate', that.eventHandlers['beginUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['endUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('endUpdate', that.eventHandlers['endUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['itemClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('itemClick', that.eventHandlers['itemClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['itemInsertHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('itemInsert', that.eventHandlers['itemInsertHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['itemRemoveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('itemRemove', that.eventHandlers['itemRemoveHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['itemUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('itemUpdate', that.eventHandlers['itemUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['viewChangeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('viewChange', that.eventHandlers['viewChangeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['eventShortcutKeyHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('eventShortcutKey', that.eventHandlers['eventShortcutKeyHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dateChangeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dateChange', that.eventHandlers['dateChangeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['editDialogOpeningHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('editDialogOpening', that.eventHandlers['editDialogOpeningHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['editDialogOpenHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('editDialogOpen', that.eventHandlers['editDialogOpenHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['editDialogCloseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('editDialogClose', that.eventHandlers['editDialogCloseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['editDialogClosingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('editDialogClosing', that.eventHandlers['editDialogClosingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['contextMenuOpeningHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('contextMenuOpening', that.eventHandlers['contextMenuOpeningHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['contextMenuOpenHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('contextMenuOpen', that.eventHandlers['contextMenuOpenHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['contextMenuCloseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('contextMenuClose', that.eventHandlers['contextMenuCloseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['contextMenuClosingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('contextMenuClosing', that.eventHandlers['contextMenuClosingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['eventMenuOpeningHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('eventMenuOpening', that.eventHandlers['eventMenuOpeningHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['eventMenuOpenHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('eventMenuOpen', that.eventHandlers['eventMenuOpenHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['eventMenuCloseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('eventMenuClose', that.eventHandlers['eventMenuCloseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['eventMenuClosingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('eventMenuClosing', that.eventHandlers['eventMenuClosingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dateMenuOpenHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dateMenuOpen', that.eventHandlers['dateMenuOpenHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dateMenuCloseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dateMenuClose', that.eventHandlers['dateMenuCloseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['viewMenuOpenHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('viewMenuOpen', that.eventHandlers['viewMenuOpenHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['viewMenuCloseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('viewMenuClose', that.eventHandlers['viewMenuCloseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['notificationOpenHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('notificationOpen', that.eventHandlers['notificationOpenHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['notificationCloseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('notificationClose', that.eventHandlers['notificationCloseHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { SchedulerComponent } from './smart.scheduler';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [SchedulerComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [SchedulerComponent]\n})\n\nexport class SchedulerModule { }\n"]}