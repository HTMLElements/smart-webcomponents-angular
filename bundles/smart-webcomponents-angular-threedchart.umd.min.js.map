{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/threedchart/smart.element.ts","ng://smart-webcomponents-angular/threedchart/smart.threedchart.ts","ng://smart-webcomponents-angular/threedchart/smart.threedchart.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","ThreeDChartComponent","_this","_super","eventHandlers","onItemClick","onShow","onHide","onSelect","onUnselect","onRangeSelectionChanged","onRangeSelectionChanging","onRefreshBegin","onRefreshEnd","onResizeBegin","onResizeEnd","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","animation","animationSpeed","autoRotate","autoRotateSpeed","backgroundColor","backgroundGradient","backgroundImage","backgroundTexture","cameraPosition","cameraZoom","caption","colorScheme","controlsSettings","customModels","dataSource","description","disabled","enableControlsToolbar","controlsToolbarItems","gridOptions","legendIndex","legendLayout","lightColor","selectionMode","seriesGroups","showConnectionLines","showLegend","showLegendTable","showToolTips","titlePadding","toolTipFormatFunction","toolTipFormatSettings","toolTipLineColor","valueAxis","xAxis","zAxis","addColorScheme","schemeName","colorsArray","isRendered","whenRendered","beginUpdate","endUpdate","refresh","getColorScheme","getResultOnRender","_a","getItemByIndexes","groupIndex","serieIndex","itemIndex","getItemsByIndexes","getHidden","getSelection","getValueAxisLabels","getXAxisLabels","getZAxisLabels","hideGroup","hideItem","hideSerie","removeColorScheme","saveAsJPEG","fileName","includeLegend","includeCaption","saveAsPNG","saveAsPDF","selectItem","showGroup","showItem","showSerie","setDefaultPosition","setCameraMode","mode","setCameraPosition","x","z","setCameraZoom","level","unselectItem","update","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","ElementRef","Directive","exportAs","selector","ThreeDChartModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { ThreeDChart } from './../index';\nimport { Animation, ThreeDChartColorScheme, ThreeDChartLegendIndex, ThreeDChartSelectionMode, ThreeDChartSymbolType, ThreeDChartType, ThreeDChartRangeSelectorSerieType, ThreeDChartXAxisType, ThreeDChartCameraPosition, ThreeDChartSeriesGroup, ThreeDChartBand, ThreeDChartFormatSettings, ThreeDChartSeriesGroupSerie, ThreeDChartLabels, ThreeDChartOffset, ThreeDChartPadding, ThreeDChartValueAxis, ThreeDChartLines, ThreeDChartXAxis, ThreeDChartRangeSelector, ThreeDChartZAxis, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, ThreeDChartColorScheme, ThreeDChartLegendIndex, ThreeDChartSelectionMode, ThreeDChartSymbolType, ThreeDChartType, ThreeDChartRangeSelectorSerieType, ThreeDChartXAxisType, ThreeDChartCameraPosition, ThreeDChartSeriesGroup, ThreeDChartBand, ThreeDChartFormatSettings, ThreeDChartSeriesGroupSerie, ThreeDChartLabels, ThreeDChartOffset, ThreeDChartPadding, ThreeDChartValueAxis, ThreeDChartLines, ThreeDChartXAxis, ThreeDChartRangeSelector, ThreeDChartZAxis, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { ThreeDChart } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-3d-chart',\tselector: 'smart-3d-chart, [smart-3d-chart]'\n})\n\nexport class ThreeDChartComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<ThreeDChart>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as ThreeDChart;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: ThreeDChart;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <ThreeDChart>document.createElement('smart-3d-chart');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none'. */\n\t@Input()\n\tget animation(): Animation | string {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation | string) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Determines the rate of the animation. The default animation rate is 1 */\n\t@Input()\n\tget animationSpeed(): number {\n\t\treturn this.nativeElement ? this.nativeElement.animationSpeed : undefined;\n\t}\n\tset animationSpeed(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.animationSpeed = value : undefined;\n\t}\n\n\t/** @description Sets whether the chart will rotate automatically. */\n\t@Input()\n\tget autoRotate(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoRotate : undefined;\n\t}\n\tset autoRotate(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoRotate = value : undefined;\n\t}\n\n\t/** @description Sets the speed of the automatic rotation. */\n\t@Input()\n\tget autoRotateSpeed(): number {\n\t\treturn this.nativeElement ? this.nativeElement.autoRotateSpeed : undefined;\n\t}\n\tset autoRotateSpeed(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.autoRotateSpeed = value : undefined;\n\t}\n\n\t/** @description Sets the chart's background color. For example: '#DDFFE8' */\n\t@Input()\n\tget backgroundColor(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.backgroundColor : undefined;\n\t}\n\tset backgroundColor(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.backgroundColor = value : undefined;\n\t}\n\n\t/** @description Sets the chart's background to a static linear gradient. The property must be set to an Array of Strings in the format: 'offset, color' */\n\t@Input()\n\tget backgroundGradient(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.backgroundGradient : undefined;\n\t}\n\tset backgroundGradient(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.backgroundGradient = value : undefined;\n\t}\n\n\t/** @description Sets the chart's background to a static image. For example: 'https://www.htmlelements.com/demos/images/stars.jpg' */\n\t@Input()\n\tget backgroundImage(): string {\n\t\treturn this.nativeElement ? this.nativeElement.backgroundImage : undefined;\n\t}\n\tset backgroundImage(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.backgroundImage = value : undefined;\n\t}\n\n\t/** @description Sets the chart's background to a dynamic background image which rotates with the camera. The property must be set an Array of 6 images. All images must have aspect ratio 1:1 */\n\t@Input()\n\tget backgroundTexture(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.backgroundTexture : undefined;\n\t}\n\tset backgroundTexture(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.backgroundTexture = value : undefined;\n\t}\n\n\t/** @description Sets the camera's position. The property must be set to an {x, y, z} object. */\n\t@Input()\n\tget cameraPosition(): ThreeDChartCameraPosition {\n\t\treturn this.nativeElement ? this.nativeElement.cameraPosition : undefined;\n\t}\n\tset cameraPosition(value: ThreeDChartCameraPosition) {\n\t\tthis.nativeElement ? this.nativeElement.cameraPosition = value : undefined;\n\t}\n\n\t/** @description Sets the intial camera zoom. The default value is 1 */\n\t@Input()\n\tget cameraZoom(): number {\n\t\treturn this.nativeElement ? this.nativeElement.cameraZoom : undefined;\n\t}\n\tset cameraZoom(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.cameraZoom = value : undefined;\n\t}\n\n\t/** @description Sets the caption (title) of the chart. */\n\t@Input()\n\tget caption(): string {\n\t\treturn this.nativeElement ? this.nativeElement.caption : undefined;\n\t}\n\tset caption(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.caption = value : undefined;\n\t}\n\n\t/** @description Sets the chart's color pallete. jqxChart suppports 32 color schemes from 'scheme01' to 'scheme32'. */\n\t@Input()\n\tget colorScheme(): ThreeDChartColorScheme | string {\n\t\treturn this.nativeElement ? this.nativeElement.colorScheme : undefined;\n\t}\n\tset colorScheme(value: ThreeDChartColorScheme | string) {\n\t\tthis.nativeElement ? this.nativeElement.colorScheme = value : undefined;\n\t}\n\n\t/** @description Sets the chart's controls settings. */\n\t@Input()\n\tget controlsSettings(): any {\n\t\treturn this.nativeElement ? this.nativeElement.controlsSettings : undefined;\n\t}\n\tset controlsSettings(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.controlsSettings = value : undefined;\n\t}\n\n\t/** @description Allows substituting default items with custom 3D Objects. The property must be set to an Array of Objects in the format: { groupIndex, serieIndex, itemIndex, modelUrl } */\n\t@Input()\n\tget customModels(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.customModels : undefined;\n\t}\n\tset customModels(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.customModels = value : undefined;\n\t}\n\n\t/** @description Sets the chart's data source. */\n\t@Input()\n\tget dataSource(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Sets the description text of the chart. */\n\t@Input()\n\tget description(): string {\n\t\treturn this.nativeElement ? this.nativeElement.description : undefined;\n\t}\n\tset description(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.description = value : undefined;\n\t}\n\n\t/** @description Enables or disables the chart. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Sets whether the chart's toolbar is enabled. */\n\t@Input()\n\tget enableControlsToolbar(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.enableControlsToolbar : undefined;\n\t}\n\tset enableControlsToolbar(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.enableControlsToolbar = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget controlsToolbarItems(): any {\n\t\treturn this.nativeElement ? this.nativeElement.controlsToolbarItems : undefined;\n\t}\n\tset controlsToolbarItems(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.controlsToolbarItems = value : undefined;\n\t}\n\n\t/** @description Sets the chart's grid options. */\n\t@Input()\n\tget gridOptions(): any {\n\t\treturn this.nativeElement ? this.nativeElement.gridOptions : undefined;\n\t}\n\tset gridOptions(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.gridOptions = value : undefined;\n\t}\n\n\t/** @description Sets whether the legend will be created based on the chart's series or serie groups. \"auto\" - the legend index will change depending on the Chart type */\n\t@Input()\n\tget legendIndex(): ThreeDChartLegendIndex | string {\n\t\treturn this.nativeElement ? this.nativeElement.legendIndex : undefined;\n\t}\n\tset legendIndex(value: ThreeDChartLegendIndex | string) {\n\t\tthis.nativeElement ? this.nativeElement.legendIndex = value : undefined;\n\t}\n\n\t/** @description Sets the legend's layout. */\n\t@Input()\n\tget legendLayout(): any {\n\t\treturn this.nativeElement ? this.nativeElement.legendLayout : undefined;\n\t}\n\tset legendLayout(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.legendLayout = value : undefined;\n\t}\n\n\t/** @description Sets the light color of the 3D Scene. */\n\t@Input()\n\tget lightColor(): string {\n\t\treturn this.nativeElement ? this.nativeElement.lightColor : undefined;\n\t}\n\tset lightColor(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.lightColor = value : undefined;\n\t}\n\n\t/** @description Sets or gets the locale. Used in conjunction with the property messages. */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale. */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets a value indicating whether the Chart's layout is mirrored. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the selection mode. */\n\t@Input()\n\tget selectionMode(): ThreeDChartSelectionMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: ThreeDChartSelectionMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description The seriesGroups property is used to describe all series displayed on the chart. jqxChart supports multiple series of different types and series grouping. Each series group may have its own Value Axis (Y-axis) which allows you to have values with different scales displayed on the same chart at the same time. It also allows you to display multiple series types together on the same chart. For example, you can display all series in one group as lines and the series in a second group as columns. seriesGroups is an array of objects where each object represents one group. */\n\t@Input()\n\tget seriesGroups(): ThreeDChartSeriesGroup[] {\n\t\treturn this.nativeElement ? this.nativeElement.seriesGroups : undefined;\n\t}\n\tset seriesGroups(value: ThreeDChartSeriesGroup[]) {\n\t\tthis.nativeElement ? this.nativeElement.seriesGroups = value : undefined;\n\t}\n\n\t/** @description Determines whether to show grid connecting lines when a chart item is hovered over. */\n\t@Input()\n\tget showConnectionLines(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showConnectionLines : undefined;\n\t}\n\tset showConnectionLines(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showConnectionLines = value : undefined;\n\t}\n\n\t/** @description Determines whether to show or hide the chart series legend. */\n\t@Input()\n\tget showLegend(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showLegend : undefined;\n\t}\n\tset showLegend(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showLegend = value : undefined;\n\t}\n\n\t/** @description Determines whether to show or hide the chart series legend table. */\n\t@Input()\n\tget showLegendTable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showLegendTable : undefined;\n\t}\n\tset showLegendTable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showLegendTable = value : undefined;\n\t}\n\n\t/** @description Enables or disables the chart tooltips. */\n\t@Input()\n\tget showToolTips(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showToolTips : undefined;\n\t}\n\tset showToolTips(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showToolTips = value : undefined;\n\t}\n\n\t/** @description Sets the padding of the chart's title (caption). */\n\t@Input()\n\tget titlePadding(): ThreeDChartPadding {\n\t\treturn this.nativeElement ? this.nativeElement.titlePadding : undefined;\n\t}\n\tset titlePadding(value: ThreeDChartPadding) {\n\t\tthis.nativeElement ? this.nativeElement.titlePadding = value : undefined;\n\t}\n\n\t/** @description Tooltip data formatting settings for the values in the serie. */\n\t@Input()\n\tget toolTipFormatFunction(): {(value?: any, index?: number, series?: any): string} {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipFormatFunction : undefined;\n\t}\n\tset toolTipFormatFunction(value: {(value?: any, index?: number, series?: any): string}) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipFormatFunction = value : undefined;\n\t}\n\n\t/** @description Tooltip line color. By default it is set to the hovered item's color */\n\t@Input()\n\tget toolTipFormatSettings(): ThreeDChartFormatSettings {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipFormatSettings : undefined;\n\t}\n\tset toolTipFormatSettings(value: ThreeDChartFormatSettings) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipFormatSettings = value : undefined;\n\t}\n\n\t/** @description An object with settings about the Chart's y-axis (value axis). */\n\t@Input()\n\tget toolTipLineColor(): string | null {\n\t\treturn this.nativeElement ? this.nativeElement.toolTipLineColor : undefined;\n\t}\n\tset toolTipLineColor(value: string | null) {\n\t\tthis.nativeElement ? this.nativeElement.toolTipLineColor = value : undefined;\n\t}\n\n\t/** @description Sets the Chart's xAxis. */\n\t@Input()\n\tget valueAxis(): ThreeDChartValueAxis {\n\t\treturn this.nativeElement ? this.nativeElement.valueAxis : undefined;\n\t}\n\tset valueAxis(value: ThreeDChartValueAxis) {\n\t\tthis.nativeElement ? this.nativeElement.valueAxis = value : undefined;\n\t}\n\n\t/** @description Sets the Chart's zAxis. */\n\t@Input()\n\tget xAxis(): ThreeDChartXAxis {\n\t\treturn this.nativeElement ? this.nativeElement.xAxis : undefined;\n\t}\n\tset xAxis(value: ThreeDChartXAxis) {\n\t\tthis.nativeElement ? this.nativeElement.xAxis = value : undefined;\n\t}\n\n\t/** @description undefined */\n\t@Input()\n\tget zAxis(): ThreeDChartZAxis {\n\t\treturn this.nativeElement ? this.nativeElement.zAxis : undefined;\n\t}\n\tset zAxis(value: ThreeDChartZAxis) {\n\t\tthis.nativeElement ? this.nativeElement.zAxis = value : undefined;\n\t}\n\n\t/** @description The event is raised when the user clicks on a chart element.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titemIndex, \tserieIndex, \tgroupIndex)\n\t*   itemIndex - The item index of the item.\n\t*   serieIndex - The serie index of the item.\n\t*   groupIndex - The group index of the item.\n\t*/\n\t@Output() onItemClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when a chart element is shown.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titemIndex, \tserieIndex, \tgroupIndex)\n\t*   itemIndex - The item index of the item.\n\t*   serieIndex - The serie index of the item.\n\t*   groupIndex - The group index of the item.\n\t*/\n\t@Output() onShow: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when a chart element is hidden.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titemIndex, \tserieIndex, \tgroupIndex)\n\t*   itemIndex - The item index of the item.\n\t*   serieIndex - The serie index of the item.\n\t*   groupIndex - The group index of the item.\n\t*/\n\t@Output() onHide: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when a chart element is selected.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titemIndex, \tserieIndex, \tgroupIndex)\n\t*   itemIndex - The item index of the item.\n\t*   serieIndex - The serie index of the item.\n\t*   groupIndex - The group index of the item.\n\t*/\n\t@Output() onSelect: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when a chart element is unselected.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titemIndex, \tserieIndex, \tgroupIndex)\n\t*   itemIndex - The item index of the item.\n\t*   serieIndex - The serie index of the item.\n\t*   groupIndex - The group index of the item.\n\t*/\n\t@Output() onUnselect: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised after the chart's range selector position changes and after the chart ends rendering.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tminValue, \tmaxValue)\n\t*   minValue - The start value of the range selector.\n\t*   maxValue - The end value of the range selector.\n\t*/\n\t@Output() onRangeSelectionChanged: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart's range selector position changes and before the chart starts rendering. The event can be default prevented to cancel the range selection change.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tminValue, \tmaxValue, \toldMinValue, \toldMaxValue)\n\t*   minValue - The start value of the range selector.\n\t*   maxValue - The end value of the range selector.\n\t*   oldMinValue - The previous start value of the range selector.\n\t*   oldMaxValue - The previous end value of the range selector.\n\t*/\n\t@Output() onRangeSelectionChanging: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart begins rendering.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRefreshBegin: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart finishes rendering.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRefreshEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart begins resizing.\n\t*  @param event. The custom event. \t*/\n\t@Output() onResizeBegin: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description The event is raised when the chart finishes resizing.\n\t*  @param event. The custom event. \t*/\n\t@Output() onResizeEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Adds a new color sheme. If a scheme with the same name already exists, the method will update its colors. \n\t* @param {string} schemeName. The name of the custom color scheme.\n\t* @param {any[]} colorsArray. An array of color values.\n\t*/\n    public addColorScheme(schemeName: string, colorsArray: any[]): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addColorScheme(schemeName, colorsArray);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addColorScheme(schemeName, colorsArray);\n            });\n        }\n    }\n\n\t/** @description Begins an update of the chart. The chart will not be rendered until the endUpdate method is called. \n\t*/\n    public beginUpdate(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.beginUpdate();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.beginUpdate();\n            });\n        }\n    }\n\n\t/** @description Ends an update of the chart. The chart will be rendered after the endUpdate method is called. \n\t* @param {boolean} refresh?. If set to true, the chart will complete a full refresh.\n\t*/\n    public endUpdate(refresh?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.endUpdate(refresh);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.endUpdate(refresh);\n            });\n        }\n    }\n\n\t/** @description Returns the colors of a color scheme by name. If the scheme doesn't exist the method returns undefined. \n\t* @param {string} schemeName. The name of the color scheme.\n\t* @returns {any[]}\n  */\n\tpublic async getColorScheme(schemeName): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getColorScheme(schemeName);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the item with the specified indexes. \n\t* @param {number | null} groupIndex?. Series group index.\n\t* @param {number | null} serieIndex?. Series index.\n\t* @param {number | null} itemIndex?. Item (data point) index.\n\t* @returns {any}\n  */\n\tpublic async getItemByIndexes(groupIndex?, serieIndex?, itemIndex?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getItemByIndexes(groupIndex, serieIndex, itemIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets an arrat of the items with the specified indexes. Leaving an index null will return all items that match the other indexes. \n\t* @param {number | null} groupIndex?. Series group index.\n\t* @param {number | null} serieIndex?. Series index.\n\t* @param {number | null} itemIndex?. Item (data point) index.\n\t* @returns {any}\n  */\n\tpublic async getItemsByIndexes(groupIndex?, serieIndex?, itemIndex?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getItemsByIndexes(groupIndex, serieIndex, itemIndex);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the indexes of the hidden series. \n\t* @returns {{ groupIndex: number, serieIndex: number, itemIndex: number }[]}\n  */\n\tpublic async getHidden(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getHidden();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the selected items. \n\t* @returns {any[]}\n  */\n\tpublic async getSelection(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getSelection();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered values of the valueAxis labels. \n\t* @returns {any}\n  */\n\tpublic async getValueAxisLabels(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getValueAxisLabels();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered values of the xAxis labels. \n\t* @returns {any}\n  */\n\tpublic async getXAxisLabels(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getXAxisLabels();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the rendered values of the zAxis labels. \n\t* @returns {any}\n  */\n\tpublic async getZAxisLabels(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getZAxisLabels();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Hides all items of a chart group. \n\t* @param {number} groupIndex. Series group index.\n\t*/\n    public hideGroup(groupIndex: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hideGroup(groupIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hideGroup(groupIndex);\n            });\n        }\n    }\n\n\t/** @description Hides a chart item. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex?. Item (data point) index.\n\t*/\n    public hideItem(groupIndex: number, serieIndex: number, itemIndex?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hideItem(groupIndex, serieIndex, itemIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hideItem(groupIndex, serieIndex, itemIndex);\n            });\n        }\n    }\n\n\t/** @description Hides all items of a chart serie. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t*/\n    public hideSerie(groupIndex: number, serieIndex: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hideSerie(groupIndex, serieIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hideSerie(groupIndex, serieIndex);\n            });\n        }\n    }\n\n\t/** @description Refreshes the content of the chart element after a property or data update. \n\t*/\n    public refresh(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.refresh();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.refresh();\n            });\n        }\n    }\n\n\t/** @description Removes an existing color scheme. If the scheme does not exist, the method has no effect. \n\t* @param {string} schemeName. The name of the custom color scheme.\n\t*/\n    public removeColorScheme(schemeName: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeColorScheme(schemeName);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeColorScheme(schemeName);\n            });\n        }\n    }\n\n\t/** @description Exports the chart's content as JPEG image. \n\t* @param {string} fileName?. File name.\n\t* @param {boolean} includeLegend?. Sets whether the legend will be part of the saved file.\n\t* @param {boolean} includeCaption?. Sets whether the caption will be part of the saved file.\n\t*/\n    public saveAsJPEG(fileName?: string, includeLegend?: boolean, includeCaption?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveAsJPEG(fileName, includeLegend, includeCaption);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveAsJPEG(fileName, includeLegend, includeCaption);\n            });\n        }\n    }\n\n\t/** @description Exports the chart's content as PNG image. \n\t* @param {string} fileName?. File name.\n\t* @param {boolean} includeLegend?. Sets whether the legend will be part of the saved file.\n\t* @param {boolean} includeCaption?. Sets whether the caption will be part of the saved file.\n\t*/\n    public saveAsPNG(fileName?: string, includeLegend?: boolean, includeCaption?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveAsPNG(fileName, includeLegend, includeCaption);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveAsPNG(fileName, includeLegend, includeCaption);\n            });\n        }\n    }\n\n\t/** @description Exports the chart's content as PDF file. \n\t* @param {string} fileName?. File name.\n\t* @param {boolean} includeLegend?. Sets whether the legend will be part of the saved file.\n\t* @param {boolean} includeCaption?. Sets whether the caption will be part of the saved file.\n\t*/\n    public saveAsPDF(fileName?: string, includeLegend?: boolean, includeCaption?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveAsPDF(fileName, includeLegend, includeCaption);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveAsPDF(fileName, includeLegend, includeCaption);\n            });\n        }\n    }\n\n\t/** @description Selects a chart item. If selectionMode is 'one', the previous item will be unselected. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex?. Item (data point) index.\n\t*/\n    public selectItem(groupIndex: number, serieIndex: number, itemIndex?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.selectItem(groupIndex, serieIndex, itemIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.selectItem(groupIndex, serieIndex, itemIndex);\n            });\n        }\n    }\n\n\t/** @description Shows all items of a chart group. \n\t* @param {number} groupIndex. Series group index.\n\t*/\n    public showGroup(groupIndex: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showGroup(groupIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showGroup(groupIndex);\n            });\n        }\n    }\n\n\t/** @description Shows a chart item. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex?. Item (data point) index.\n\t*/\n    public showItem(groupIndex: number, serieIndex: number, itemIndex?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showItem(groupIndex, serieIndex, itemIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showItem(groupIndex, serieIndex, itemIndex);\n            });\n        }\n    }\n\n\t/** @description Shows all items of a chart serie. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t*/\n    public showSerie(groupIndex: number, serieIndex: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showSerie(groupIndex, serieIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showSerie(groupIndex, serieIndex);\n            });\n        }\n    }\n\n\t/** @description Sets the camera position to its position during the initialization. \n\t*/\n    public setDefaultPosition(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.setDefaultPosition();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.setDefaultPosition();\n            });\n        }\n    }\n\n\t/** @description Sets the camera mode. Different camera modes change the control actions of the mouse. Available modes are 'zoom', 'pan' and 'default'. \n\t* @param {string} mode. Camera mode.\n\t*/\n    public setCameraMode(mode: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.setCameraMode(mode);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.setCameraMode(mode);\n            });\n        }\n    }\n\n\t/** @description Sets the camera position. \n\t* @param {number} x. X coordinate.\n\t* @param {number} y. Y coordinate.\n\t* @param {number} z. Z coordinate.\n\t* @param {boolean} animation?. Animation Enabled\n\t*/\n    public setCameraPosition(x: number, y: number, z: number, animation?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.setCameraPosition(x, y, z, animation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.setCameraPosition(x, y, z, animation);\n            });\n        }\n    }\n\n\t/** @description Sets the camera zoom. \n\t* @param {number} level. Zoom level.\n\t* @param {boolean} animation?. Animation Enabled\n\t*/\n    public setCameraZoom(level: number, animation?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.setCameraZoom(level, animation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.setCameraZoom(level, animation);\n            });\n        }\n    }\n\n\t/** @description Unelects a chart item. \n\t* @param {number} groupIndex. Series group index.\n\t* @param {number} serieIndex. Series index.\n\t* @param {number} itemIndex?. Item (data point) index.\n\t*/\n    public unselectItem(groupIndex: number, serieIndex: number, itemIndex?: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unselectItem(groupIndex, serieIndex, itemIndex);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unselectItem(groupIndex, serieIndex, itemIndex);\n            });\n        }\n    }\n\n\t/** @description Updates the values of the chart series without full refresh of the entire chart. The method should be used for animation of frequently changing values. \n\t*/\n    public update(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.update();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.update();\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['itemClickHandler'] = (event: CustomEvent) => { that.onItemClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('itemClick', that.eventHandlers['itemClickHandler']);\n\n\t\tthat.eventHandlers['showHandler'] = (event: CustomEvent) => { that.onShow.emit(event); }\n\t\tthat.nativeElement.addEventListener('show', that.eventHandlers['showHandler']);\n\n\t\tthat.eventHandlers['hideHandler'] = (event: CustomEvent) => { that.onHide.emit(event); }\n\t\tthat.nativeElement.addEventListener('hide', that.eventHandlers['hideHandler']);\n\n\t\tthat.eventHandlers['selectHandler'] = (event: CustomEvent) => { that.onSelect.emit(event); }\n\t\tthat.nativeElement.addEventListener('select', that.eventHandlers['selectHandler']);\n\n\t\tthat.eventHandlers['unselectHandler'] = (event: CustomEvent) => { that.onUnselect.emit(event); }\n\t\tthat.nativeElement.addEventListener('unselect', that.eventHandlers['unselectHandler']);\n\n\t\tthat.eventHandlers['rangeSelectionChangedHandler'] = (event: CustomEvent) => { that.onRangeSelectionChanged.emit(event); }\n\t\tthat.nativeElement.addEventListener('rangeSelectionChanged', that.eventHandlers['rangeSelectionChangedHandler']);\n\n\t\tthat.eventHandlers['rangeSelectionChangingHandler'] = (event: CustomEvent) => { that.onRangeSelectionChanging.emit(event); }\n\t\tthat.nativeElement.addEventListener('rangeSelectionChanging', that.eventHandlers['rangeSelectionChangingHandler']);\n\n\t\tthat.eventHandlers['refreshBeginHandler'] = (event: CustomEvent) => { that.onRefreshBegin.emit(event); }\n\t\tthat.nativeElement.addEventListener('refreshBegin', that.eventHandlers['refreshBeginHandler']);\n\n\t\tthat.eventHandlers['refreshEndHandler'] = (event: CustomEvent) => { that.onRefreshEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('refreshEnd', that.eventHandlers['refreshEndHandler']);\n\n\t\tthat.eventHandlers['resizeBeginHandler'] = (event: CustomEvent) => { that.onResizeBegin.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeBegin', that.eventHandlers['resizeBeginHandler']);\n\n\t\tthat.eventHandlers['resizeEndHandler'] = (event: CustomEvent) => { that.onResizeEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['itemClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('itemClick', that.eventHandlers['itemClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['showHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('show', that.eventHandlers['showHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['hideHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('hide', that.eventHandlers['hideHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['selectHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('select', that.eventHandlers['selectHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['unselectHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('unselect', that.eventHandlers['unselectHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['rangeSelectionChangedHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('rangeSelectionChanged', that.eventHandlers['rangeSelectionChangedHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['rangeSelectionChangingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('rangeSelectionChanging', that.eventHandlers['rangeSelectionChangingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['refreshBeginHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('refreshBegin', that.eventHandlers['refreshBeginHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['refreshEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('refreshEnd', that.eventHandlers['refreshEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeBeginHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeBegin', that.eventHandlers['resizeBeginHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { ThreeDChartComponent } from './smart.threedchart';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [ThreeDChartComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [ThreeDChartComponent]\n})\n\nexport class ThreeDChartModule { }\n"]}