{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/tree/smart.element.ts","ng://smart-webcomponents-angular/tree/smart.tree.ts","ng://smart-webcomponents-angular/tree/smart.treeitem.ts","ng://smart-webcomponents-angular/tree/smart.treeitemsgroup.ts","ng://smart-webcomponents-angular/tree/smart.tree.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","TreeComponent","_this","_super","eventHandlers","onChange","onCollapse","onCollapsing","onDragEnd","onDragging","onDragStart","onExpand","onExpanding","onScrollBottomReached","onScrollTopReached","onSwipeleft","onSwiperight","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","allowDrag","allowDrop","animation","autoHideToggleElement","autoLoadState","autoSaveState","autoSort","dataSource","disabled","displayLoadingIndicator","displayMember","dragFeedbackFormatFunction","dragOffset","editable","expandMode","filterable","filterInputPlaceholder","filterMember","filterMode","hasThreeStates","itemsMember","loadingIndicatorPlaceholder","loadingIndicatorPosition","overflow","readonly","scrollMode","selectedIndexes","selectionDisplayMode","selectionMode","selectionTarget","showLines","showRootLines","sort","sortDirection","sorted","toggleElementPosition","toggleMode","unfocusable","valueMember","addAfter","item","sibling","isRendered","whenRendered","addBefore","addTo","parent","clearSelection","collapseAll","collapseItem","ensureVisible","expandAll","expandItem","filter","filterQuery","getItem","id","getResultOnRender","_a","getState","insert","path","loadState","state","moveDown","moveUp","removeItem","saveState","select","unselect","updateItem","newItem","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","ElementRef","Directive","selector","TreeItemComponent","level","selected","separator","shortcut","TreeItemsGroupComponent","expanded","TreeModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Tree } from './../index';\nimport { Animation, TreeExpandMode, FilterMode, VerticalAlignment, Overflow, TreeScrollMode, TreeSelectionDisplayMode, TreeSelectionMode, TreeSelectionTarget, TreeSortDirection, Position, TreeToggleMode, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter, QueryList, ContentChildren } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, TreeExpandMode, FilterMode, VerticalAlignment, Overflow, TreeScrollMode, TreeSelectionDisplayMode, TreeSelectionMode, TreeSelectionTarget, TreeSortDirection, Position, TreeToggleMode, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Tree } from './../index';\n\n\nimport { TreeItemComponent } from './smart.treeitem';\n\nimport { TreeItemsGroupComponent } from './smart.treeitemsgroup';\n\n@Directive({\n\tselector: 'smart-tree, [smart-tree]'\n})\n\nexport class TreeComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\n\tconstructor(ref: ElementRef<Tree>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Tree;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Tree;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Tree>document.createElement('smart-tree');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Allows drag operation in current tree. When enabled, items can be dragged and dropped to a tree with enabled allowDrop. */\n\t@Input()\n\tget allowDrag(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowDrag : undefined;\n\t}\n\tset allowDrag(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowDrag = value : undefined;\n\t}\n\n\t/** @description Allows drop operation. Dropped items could originate from the current tree or another tree. */\n\t@Input()\n\tget allowDrop(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowDrop : undefined;\n\t}\n\tset allowDrop(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowDrop = value : undefined;\n\t}\n\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Automatically hides the tree's toggle element (arrow) on mouseleave and shows it on mouseenter. */\n\t@Input()\n\tget autoHideToggleElement(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoHideToggleElement : undefined;\n\t}\n\tset autoHideToggleElement(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoHideToggleElement = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto load state from the browser's localStorage. Information about filtering, sorting, expanded and selected items is loaded. */\n\t@Input()\n\tget autoLoadState(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoLoadState : undefined;\n\t}\n\tset autoLoadState(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoLoadState = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto save state to the browser's localStorage. Information about filtering, sorting, expanded and selected items is saved. */\n\t@Input()\n\tget autoSaveState(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoSaveState : undefined;\n\t}\n\tset autoSaveState(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoSaveState = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto sorting. If modifications are made to a sorted tree, but autoSort is false, the tree will not be re-sorted automatically. */\n\t@Input()\n\tget autoSort(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoSort : undefined;\n\t}\n\tset autoSort(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoSort = value : undefined;\n\t}\n\n\t/** @description Determines the data source that will be loaded to the Tree. */\n\t@Input()\n\tget dataSource(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Enables or disables jqxTree. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Shows or hides loading indicator. */\n\t@Input()\n\tget displayLoadingIndicator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.displayLoadingIndicator : undefined;\n\t}\n\tset displayLoadingIndicator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.displayLoadingIndicator = value : undefined;\n\t}\n\n\t/** @description Determines the field in the data source that corresponds to an item's label. */\n\t@Input()\n\tget displayMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.displayMember : undefined;\n\t}\n\tset displayMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.displayMember = value : undefined;\n\t}\n\n\t/** @description A callback function for customizing the HTML of the drag feedback. It receives one parameter - an array of the currently dragged items. */\n\t@Input()\n\tget dragFeedbackFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dragFeedbackFormatFunction : undefined;\n\t}\n\tset dragFeedbackFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dragFeedbackFormatFunction = value : undefined;\n\t}\n\n\t/** @description Determines the offset of the drag feedback element from the mouse cursor when dragging items. The first member of the array is the horizontal offset and the second one - the vertical offset. */\n\t@Input()\n\tget dragOffset(): number[] {\n\t\treturn this.nativeElement ? this.nativeElement.dragOffset : undefined;\n\t}\n\tset dragOffset(value: number[]) {\n\t\tthis.nativeElement ? this.nativeElement.dragOffset = value : undefined;\n\t}\n\n\t/** @description Enables or disables item's editting. An edit operation can be initiated by double-clicking a tree item or pressing F2 while an item is selected. */\n\t@Input()\n\tget editable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.editable : undefined;\n\t}\n\tset editable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.editable = value : undefined;\n\t}\n\n\t/** @description Determines the expand behavior of TreeItemsGroups in the Tree. */\n\t@Input()\n\tget expandMode(): TreeExpandMode {\n\t\treturn this.nativeElement ? this.nativeElement.expandMode : undefined;\n\t}\n\tset expandMode(value: TreeExpandMode) {\n\t\tthis.nativeElement ? this.nativeElement.expandMode = value : undefined;\n\t}\n\n\t/** @description Enables or disables filtering. Shows or hides filter input. */\n\t@Input()\n\tget filterable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.filterable : undefined;\n\t}\n\tset filterable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.filterable = value : undefined;\n\t}\n\n\t/** @description Sets custom text for placeholder in the filter input. */\n\t@Input()\n\tget filterInputPlaceholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.filterInputPlaceholder : undefined;\n\t}\n\tset filterInputPlaceholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.filterInputPlaceholder = value : undefined;\n\t}\n\n\t/** @description Determines the TreeItem property that will be used as a filtering criteria. By default the label property is used. It can be set to 'value' if the user wants to filter by the value property or 'textContent' if the user wants to filter by text inside the TreeItem's content or any other property. */\n\t@Input()\n\tget filterMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.filterMember : undefined;\n\t}\n\tset filterMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.filterMember = value : undefined;\n\t}\n\n\t/** @description Sets filter mode. */\n\t@Input()\n\tget filterMode(): FilterMode {\n\t\treturn this.nativeElement ? this.nativeElement.filterMode : undefined;\n\t}\n\tset filterMode(value: FilterMode) {\n\t\tthis.nativeElement ? this.nativeElement.filterMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether the tree checkboxes have three states - checked, unchecked and indeterminate. Whorks on selectionMode: 'checkBox' */\n\t@Input()\n\tget hasThreeStates(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hasThreeStates : undefined;\n\t}\n\tset hasThreeStates(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hasThreeStates = value : undefined;\n\t}\n\n\t/** @description Determines the field in the data source that corresponds to an item group's subitems collection. */\n\t@Input()\n\tget itemsMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.itemsMember : undefined;\n\t}\n\tset itemsMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.itemsMember = value : undefined;\n\t}\n\n\t/** @description Sets custom text for placeholder in the loading indicator if loadingIndicatorPosition is set to 'top' or 'bottom'. */\n\t@Input()\n\tget loadingIndicatorPlaceholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.loadingIndicatorPlaceholder : undefined;\n\t}\n\tset loadingIndicatorPlaceholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.loadingIndicatorPlaceholder = value : undefined;\n\t}\n\n\t/** @description Sets the position of the loading indicator. */\n\t@Input()\n\tget loadingIndicatorPosition(): VerticalAlignment {\n\t\treturn this.nativeElement ? this.nativeElement.loadingIndicatorPosition : undefined;\n\t}\n\tset loadingIndicatorPosition(value: VerticalAlignment) {\n\t\tthis.nativeElement ? this.nativeElement.loadingIndicatorPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets the locale. Used in conjunction with the property messages. */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback, related to localization module.  */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale. */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Specifies what should happen with the scrollbar (or scroll buttons in scrollMode: 'scrollButtons') if content overflows the element's box. */\n\t@Input()\n\tget overflow(): Overflow {\n\t\treturn this.nativeElement ? this.nativeElement.overflow : undefined;\n\t}\n\tset overflow(value: Overflow) {\n\t\tthis.nativeElement ? this.nativeElement.overflow = value : undefined;\n\t}\n\n\t/** @description If the element is readonly, users cannot interact with it. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description Determines whether the right-to-left support is enabled. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines whether to use scrollbar or scrollButtons when content overflows an element's box. */\n\t@Input()\n\tget scrollMode(): TreeScrollMode {\n\t\treturn this.nativeElement ? this.nativeElement.scrollMode : undefined;\n\t}\n\tset scrollMode(value: TreeScrollMode) {\n\t\tthis.nativeElement ? this.nativeElement.scrollMode = value : undefined;\n\t}\n\n\t/** @description An array with indexes (paths) of the selected items. */\n\t@Input()\n\tget selectedIndexes(): string[] {\n\t\treturn this.nativeElement ? this.nativeElement.selectedIndexes : undefined;\n\t}\n\tset selectedIndexes(value: string[]) {\n\t\tthis.nativeElement ? this.nativeElement.selectedIndexes = value : undefined;\n\t}\n\n\t/** @description Determines the way selected items are highlighted. */\n\t@Input()\n\tget selectionDisplayMode(): TreeSelectionDisplayMode {\n\t\treturn this.nativeElement ? this.nativeElement.selectionDisplayMode : undefined;\n\t}\n\tset selectionDisplayMode(value: TreeSelectionDisplayMode) {\n\t\tthis.nativeElement ? this.nativeElement.selectionDisplayMode = value : undefined;\n\t}\n\n\t/** @description Determines selection mode. */\n\t@Input()\n\tget selectionMode(): TreeSelectionMode {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: TreeSelectionMode) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description Determines whether smart-tree-items-groups can be selected. */\n\t@Input()\n\tget selectionTarget(): TreeSelectionTarget {\n\t\treturn this.nativeElement ? this.nativeElement.selectionTarget : undefined;\n\t}\n\tset selectionTarget(value: TreeSelectionTarget) {\n\t\tthis.nativeElement ? this.nativeElement.selectionTarget = value : undefined;\n\t}\n\n\t/** @description Shows or hides lines, displaying the relation between elements in group. */\n\t@Input()\n\tget showLines(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showLines : undefined;\n\t}\n\tset showLines(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showLines = value : undefined;\n\t}\n\n\t/** @description Shows or hides lines starting from the root node. Enabled when 'showLines' is set to true. */\n\t@Input()\n\tget showRootLines(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showRootLines : undefined;\n\t}\n\tset showRootLines(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showRootLines = value : undefined;\n\t}\n\n\t/** @description Sets user-defined function about custom sorting. */\n\t@Input()\n\tget sort(): any {\n\t\treturn this.nativeElement ? this.nativeElement.sort : undefined;\n\t}\n\tset sort(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.sort = value : undefined;\n\t}\n\n\t/** @description Determines sort direction - ascending or descending. */\n\t@Input()\n\tget sortDirection(): TreeSortDirection {\n\t\treturn this.nativeElement ? this.nativeElement.sortDirection : undefined;\n\t}\n\tset sortDirection(value: TreeSortDirection) {\n\t\tthis.nativeElement ? this.nativeElement.sortDirection = value : undefined;\n\t}\n\n\t/** @description Enables or disables sorting. */\n\t@Input()\n\tget sorted(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.sorted : undefined;\n\t}\n\tset sorted(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.sorted = value : undefined;\n\t}\n\n\t/** @description Sets or gets the element's visual theme. */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Determines togle element (arrow) position. */\n\t@Input()\n\tget toggleElementPosition(): Position {\n\t\treturn this.nativeElement ? this.nativeElement.toggleElementPosition : undefined;\n\t}\n\tset toggleElementPosition(value: Position) {\n\t\tthis.nativeElement ? this.nativeElement.toggleElementPosition = value : undefined;\n\t}\n\n\t/** @description Determines the way to toggle smart-tree-items-groups. */\n\t@Input()\n\tget toggleMode(): TreeToggleMode {\n\t\treturn this.nativeElement ? this.nativeElement.toggleMode : undefined;\n\t}\n\tset toggleMode(value: TreeToggleMode) {\n\t\tthis.nativeElement ? this.nativeElement.toggleMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets if the element can be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description Determines the field in the data source that corresponds to an item's value. */\n\t@Input()\n\tget valueMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.valueMember : undefined;\n\t}\n\tset valueMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.valueMember = value : undefined;\n\t}\n\n\t/** @description This event is triggered when selection in smart-tree is changed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem, \toldSelectedIndexes, \tselectedIndexes)\n\t*   item - The item the user has interacted with to change the selection (only when applicable).\n\t*   oldSelectedIndexes - The selected indexes before the selection is changed.\n\t*   selectedIndexes - The selected indexes after the selection is changed.\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a smart-tree-items-group is collapsed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem, \tlabel, \tpath, \tvalue, \tchildren)\n\t*   item - the collapsed jqx-tree-items-group\n\t*   label - the label of the collapsed jqx-tree-items-group\n\t*   path - the path of the collapsed jqx-tree-items-group\n\t*   value - the value of the collapsed jqx-tree-items-group\n\t*   children - the children of the collapsed jqx-tree-items-group\n\t*/\n\t@Output() onCollapse: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a smart-tree-items-group is about to be collapsed. The collapsing operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem, \tlabel, \tpath, \tvalue, \tchildren)\n\t*   item - the jqx-tree-items-group to be collapsed\n\t*   label - the label of the jqx-tree-items-group to be collapsed\n\t*   path - the path of the jqx-tree-items-group to be collapsed\n\t*   value - the value of the jqx-tree-items-group to be collapsed\n\t*   children - the children of the jqx-tree-items-group to be collapsed\n\t*/\n\t@Output() onCollapsing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a smart-tree-item/smart-tree-items-group is dropped somewhere in the DOM. The dragging operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcontainer, \tdata, \titem, \titems, \toriginalEvent, \tpreviousContainer, \ttarget)\n\t*   container - the tree the dragged item(s) is dropped to\n\t*   data - an object with additional drag details\n\t*   item - the item that is dragged; if multiple items are dragged, this is the item that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged items\n\t*   originalEvent - the original, browser, event that initiates the drop operation\n\t*   previousContainer - the tree the dragged item(s) is dragged from\n\t*   target - the element the dragged items are dropped to\n\t*/\n\t@Output() onDragEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a smart-tree-item/smart-tree-items-group is being dragged.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tdata, \titem, \titems, \toriginalEvent)\n\t*   data - an object with additional drag details\n\t*   item - the item that is dragged; if multiple items are dragged, this is the item that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged items\n\t*   originalEvent - the original, browser, event that initiates the dragging operation\n\t*/\n\t@Output() onDragging: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a dragging operation is started in smart-tree. The dragging operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcontainer, \tdata, \titem, \titems, \toriginalEvent, \tpreviousContainer)\n\t*   container - the tree the dragged item(s) is dragged from\n\t*   data - an object with additional drag details\n\t*   item - the item that is dragged; if multiple items are dragged, this is the item that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged items\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*   previousContainer - the tree the dragged item(s) is dragged from\n\t*/\n\t@Output() onDragStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a smart-tree-items-group is expanded.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem, \tlabel, \tpath, \tvalue, \tchildren)\n\t*   item - the expanded jqx-tree-items-group\n\t*   label - the label of the expanded jqx-tree-items-group\n\t*   path - the path of the expanded jqx-tree-items-group\n\t*   value - the value of the expanded jqx-tree-items-group\n\t*   children - the children of the expanded jqx-tree-items-group\n\t*/\n\t@Output() onExpand: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a smart-tree-items-group is about to be expanded. The expanding operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\titem, \tlabel, \tpath, \tvalue, \tchildren)\n\t*   item - the jqx-tree-items-group to be expanded\n\t*   label - the label of the jqx-tree-items-group to be expanded\n\t*   path - the path of the jqx-tree-items-group to be expanded\n\t*   value - the value of the jqx-tree-items-group to be expanded\n\t*   children - the children of the jqx-tree-items-group to be expanded\n\t*/\n\t@Output() onExpanding: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the Tree has been scrolled to the bottom.\n\t*  @param event. The custom event. \t*/\n\t@Output() onScrollBottomReached: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the Tree has been scrolled to the top.\n\t*  @param event. The custom event. \t*/\n\t@Output() onScrollTopReached: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user swipes to the left inside the Tree.\n\t*  @param event. The custom event. \t*/\n\t@Output() onSwipeleft: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user swipes to the right inside the Tree.\n\t*  @param event. The custom event. \t*/\n\t@Output() onSwiperight: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Adds an item after another item as a sibling. \n\t* @param {HTMLElement} item. A smart-tree-item/smart-tree-items-group to add to the Tree\n\t* @param {string | HTMLElement} sibling. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to add the item after.\n\t*/\n    public addAfter(item: HTMLElement, sibling: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addAfter(item, sibling);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addAfter(item, sibling);\n            });\n        }\n    }\n\n\t/** @description Adds an item before another item as a sibling. \n\t* @param {HTMLElement} item. A smart-tree-item/smart-tree-items-group to add to the Tree\n\t* @param {string | HTMLElement} sibling. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to add the item before.\n\t*/\n    public addBefore(item: HTMLElement, sibling: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addBefore(item, sibling);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addBefore(item, sibling);\n            });\n        }\n    }\n\n\t/** @description Adds an item as the last child of a parent item. \n\t* @param {HTMLElement} item. A smart-tree-item/smart-tree-items-group to add to the Tree\n\t* @param {string | HTMLElement} parent?. The smart-tree-items-group (or its id or numeric path) to add the item to.\n\t*/\n    public addTo(item: HTMLElement, parent?: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addTo(item, parent);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addTo(item, parent);\n            });\n        }\n    }\n\n\t/** @description Clears selection. \n\t*/\n    public clearSelection(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearSelection();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearSelection();\n            });\n        }\n    }\n\n\t/** @description Collapses all smart-tree-items-groups. \n\t* @param {boolean} animation?. If set to false, disables collapse animation even if animation is enabled for the element.\n\t*/\n    public collapseAll(animation?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapseAll(animation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapseAll(animation);\n            });\n        }\n    }\n\n\t/** @description Collapses a smart-tree-items-group. \n\t* @param {HTMLElement | string} item. smart-tree-items-group (or its id or numeric path).\n\t* @param {boolean} animation?. If set to false, disables collapse animation even if animation is enabled for the element.\n\t*/\n    public collapseItem(item: HTMLElement | string, animation?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapseItem(item, animation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapseItem(item, animation);\n            });\n        }\n    }\n\n\t/** @description Makes sure an item is visible by scrolling to it. \n\t* @param {HTMLElement | string} item. The id or numeric path of an item\n\t*/\n    public ensureVisible(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.ensureVisible(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.ensureVisible(item);\n            });\n        }\n    }\n\n\t/** @description Expands all smart-tree-items-groups. \n\t* @param {string} animation?. If set to false, disables expand animation even if animation is enabled for the element.\n\t*/\n    public expandAll(animation?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expandAll(animation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expandAll(animation);\n            });\n        }\n    }\n\n\t/** @description Expands single smart-tree-items-group. \n\t* @param {HTMLElement | string} item. smart-tree-items-group (or its id or numeric path).\n\t* @param {boolean} animation?. If set to false, disables expand animation even if animation is enabled for the element.\n\t*/\n    public expandItem(item: HTMLElement | string, animation?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expandItem(item, animation);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expandItem(item, animation);\n            });\n        }\n    }\n\n\t/** @description Applies filter to the Tree. \n\t* @param {string} filterQuery. Filter query.\n\t*/\n    public filter(filterQuery: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.filter(filterQuery);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.filter(filterQuery);\n            });\n        }\n    }\n\n\t/** @description Gets an item by its id or numeric path. \n\t* @param {string} id. The id or numeric path of an item.\n\t* @returns {HTMLElement}\n  */\n\tpublic async getItem(id): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getItem(id);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Returns SmartTree's state \n\t* @returns {any}\n  */\n\tpublic async getState(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getState();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Inserts an item at the given position. \n\t* @param {any} item. A smart-tree-item/smart-tree-items-group (or an Object to create an item from) to add to the Tree. If an Object is passed, the available fields are <strong>tagName</strong> (<em>'smart-tree-item'</em> - default - or <em>'smart-tree-items-group'</em>), <strong>disabled</strong>, <strong>expanded</strong> (only if <strong>tagName</strong> is <em>'smart-tree-items-group'</em>), <strong>(items)</strong> (only if <strong>tagName</strong> is <em>'smart-tree-items-group'</em>), <strong>(label)</strong>, <strong>separator</strong>, <strong>shortcut</strong> (only if <strong>tagName</strong> is <em>'smart-tree-item'</em>), and <strong>(value)</strong>. (items), (label), and (value) have to correspond to the values of <strong>itemsMember</strong>, <strong>displayMember</strong>, and <strong>valueMember</strong> respectively.\n\t* @param {string} path?. The path to insert the item at.\n\t*/\n    public insert(item: any, path?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.insert(item, path);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.insert(item, path);\n            });\n        }\n    }\n\n\t/** @description Loads the Tree's state. \n\t* @param {any} state?. An object returned by one of the methods <strong>getState</strong> or <strong>saveState</strong>. If a state is not passed, the method tries to load the state from the browser's localStorage.\n\t*/\n    public loadState(state?: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.loadState(state);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.loadState(state);\n            });\n        }\n    }\n\n\t/** @description Moves an item down relative to its siblings. \n\t* @param {HTMLElement | string} item. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to remove.\n\t*/\n    public moveDown(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.moveDown(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.moveDown(item);\n            });\n        }\n    }\n\n\t/** @description Moves an item up relative to its siblings. \n\t* @param {HTMLElement | string} item. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to remove.\n\t*/\n    public moveUp(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.moveUp(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.moveUp(item);\n            });\n        }\n    }\n\n\t/** @description Removes an item. \n\t* @param {HTMLElement | string} item. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to remove.\n\t*/\n    public removeItem(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeItem(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeItem(item);\n            });\n        }\n    }\n\n\t/** @description Saves the Tree's state. \n\t* @returns {any}\n  */\n\tpublic async saveState(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.saveState();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Selects an item. \n\t* @param {HTMLElement | string} item. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to remove.\n\t*/\n    public select(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.select(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.select(item);\n            });\n        }\n    }\n\n\t/** @description Unselects an item. \n\t* @param {HTMLElement | string} item. The smart-tree-item/smart-tree-items-group (or its id or numeric path) to remove.\n\t*/\n    public unselect(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unselect(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unselect(item);\n            });\n        }\n    }\n\n\t/** @description Updates an item. \n\t* @param {HTMLElement | string} item. smart-tree-item/smart-tree-items-group (or its id or numeric path).\n\t* @param {any} newItem. An object with updated properties.\n\t*/\n    public updateItem(item: HTMLElement | string, newItem: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateItem(item, newItem);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateItem(item, newItem);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['collapseHandler'] = (event: CustomEvent) => { that.onCollapse.emit(event); }\n\t\tthat.nativeElement.addEventListener('collapse', that.eventHandlers['collapseHandler']);\n\n\t\tthat.eventHandlers['collapsingHandler'] = (event: CustomEvent) => { that.onCollapsing.emit(event); }\n\t\tthat.nativeElement.addEventListener('collapsing', that.eventHandlers['collapsingHandler']);\n\n\t\tthat.eventHandlers['dragEndHandler'] = (event: CustomEvent) => { that.onDragEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\n\t\tthat.eventHandlers['draggingHandler'] = (event: CustomEvent) => { that.onDragging.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragging', that.eventHandlers['draggingHandler']);\n\n\t\tthat.eventHandlers['dragStartHandler'] = (event: CustomEvent) => { that.onDragStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\n\t\tthat.eventHandlers['expandHandler'] = (event: CustomEvent) => { that.onExpand.emit(event); }\n\t\tthat.nativeElement.addEventListener('expand', that.eventHandlers['expandHandler']);\n\n\t\tthat.eventHandlers['expandingHandler'] = (event: CustomEvent) => { that.onExpanding.emit(event); }\n\t\tthat.nativeElement.addEventListener('expanding', that.eventHandlers['expandingHandler']);\n\n\t\tthat.eventHandlers['scrollBottomReachedHandler'] = (event: CustomEvent) => { that.onScrollBottomReached.emit(event); }\n\t\tthat.nativeElement.addEventListener('scrollBottomReached', that.eventHandlers['scrollBottomReachedHandler']);\n\n\t\tthat.eventHandlers['scrollTopReachedHandler'] = (event: CustomEvent) => { that.onScrollTopReached.emit(event); }\n\t\tthat.nativeElement.addEventListener('scrollTopReached', that.eventHandlers['scrollTopReachedHandler']);\n\n\t\tthat.eventHandlers['swipeleftHandler'] = (event: CustomEvent) => { that.onSwipeleft.emit(event); }\n\t\tthat.nativeElement.addEventListener('swipeleft', that.eventHandlers['swipeleftHandler']);\n\n\t\tthat.eventHandlers['swiperightHandler'] = (event: CustomEvent) => { that.onSwiperight.emit(event); }\n\t\tthat.nativeElement.addEventListener('swiperight', that.eventHandlers['swiperightHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['collapseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('collapse', that.eventHandlers['collapseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['collapsingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('collapsing', that.eventHandlers['collapsingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['draggingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragging', that.eventHandlers['draggingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['expandHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('expand', that.eventHandlers['expandHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['expandingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('expanding', that.eventHandlers['expandingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['scrollBottomReachedHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('scrollBottomReached', that.eventHandlers['scrollBottomReachedHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['scrollTopReachedHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('scrollTopReached', that.eventHandlers['scrollTopReachedHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['swipeleftHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('swipeleft', that.eventHandlers['swipeleftHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['swiperightHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('swiperight', that.eventHandlers['swiperightHandler']);\n\t\t}\n\n\t}\n}\n","import { TreeItem } from './../index';\nimport { ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { TreeItem } from './../index';\n\n\n@Directive({\n\tselector: 'smart-tree-item, [smart-tree-item]'\n})\n\nexport class TreeItemComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<TreeItem>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as TreeItem;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: TreeItem;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <TreeItem>document.createElement('smart-tree-item');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Enables or disables element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget label(): any {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget level(): number {\n\t\treturn this.nativeElement ? this.nativeElement.level : undefined;\n\t}\n\tset level(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.level = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget selected(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.selected : undefined;\n\t}\n\tset selected(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.selected = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget separator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.separator : undefined;\n\t}\n\tset separator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.separator = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget shortcut(): string {\n\t\treturn this.nativeElement ? this.nativeElement.shortcut : undefined;\n\t}\n\tset shortcut(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.shortcut = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget value(): any {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description Disables user interaction with the item. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t}\n\n\tngOnDestroy() {\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { TreeItemsGroup } from './../index';\nimport { ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { TreeItemsGroup } from './../index';\n\n\n@Directive({\n\tselector: 'smart-tree-items-group, [smart-tree-items-group]'\n})\n\nexport class TreeItemsGroupComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<TreeItemsGroup>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as TreeItemsGroup;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: TreeItemsGroup;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <TreeItemsGroup>document.createElement('smart-tree-items-group');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Enables or disables element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget expanded(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.expanded : undefined;\n\t}\n\tset expanded(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.expanded = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget label(): any {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget level(): number {\n\t\treturn this.nativeElement ? this.nativeElement.level : undefined;\n\t}\n\tset level(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.level = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget selected(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.selected : undefined;\n\t}\n\tset selected(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.selected = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget separator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.separator : undefined;\n\t}\n\tset separator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.separator = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget value(): any {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description Disables user interaction with the item. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t}\n\n\tngOnDestroy() {\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { TreeComponent } from './smart.tree';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { TreeItemComponent } from './smart.treeitem';\nimport { TreeItemsGroupComponent } from './smart.treeitemsgroup';\n\n@NgModule({\n    declarations: [TreeComponent, TreeItemComponent, TreeItemsGroupComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [TreeComponent, TreeItemComponent, TreeItemsGroupComponent]\n})\n\nexport class TreeModule { }\n"]}