{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/combobox/smart.element.ts","ng://smart-webcomponents-angular/combobox/smart.combobox.ts","ng://smart-webcomponents-angular/combobox/smart.listitem.ts","ng://smart-webcomponents-angular/combobox/smart.listitemsgroup.ts","ng://smart-webcomponents-angular/combobox/smart.combobox.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ComboBoxComponent","multi","_super","_this","eventHandlers","_onChange","_onTouched","onChange","onClose","onClosing","onItemClick","onOpen","onOpening","onResizeStart","onResizeEnd","onScrollBottomReached","onScrollTopReached","onTokenClick","_initialChange","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","autoCloseDelay","autoComplete","autoCompleteDelay","autoOpenShortcutKey","dataSource","disabled","displayLoadingIndicator","displayMember","dropDownAppendTo","dropDownButtonPosition","dropDownHeight","dropDownMaxHeight","dropDownMaxWidth","dropDownMinHeight","dropDownMinWidth","dropDownOpenMode","dropDownOverlay","dropDownPlaceholder","dropDownPosition","dropDownWidth","escKeyMode","filterable","filterInputPlaceholder","filterMode","grouped","groupMember","hint","horizontalScrollBarVisibility","inputMember","inputPurpose","incrementalSearchDelay","incrementalSearchMode","itemHeight","itemMeasureMode","items","itemTemplate","loadingIndicatorPlaceholder","loadingIndicatorPosition","minLength","maxLength","name","opened","placeholder","readonly","resizeIndicator","resizeMode","selectionDisplayMode","selectedIndexes","selectedValues","selectionMode","sorted","sortDirection","tokenTemplate","unfocusable","valueMember","verticalScrollBarVisibility","virtualized","appendChild","node","whenRendered","getResultOnRender","_a","clearItems","isRendered","clearSelection","close","ensureVisible","item","getItem","insert","position","insertBefore","referenceNode","open","removeAt","removeChild","select","unselect","update","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","input","querySelector","writeValue","normalizedValue","$","listBox","isInitialized","isArray","forEach","currentValue","_applySelection","registerOnChange","fn","registerOnTouched","ngOnChanges","changes","propName","setTimeout","ElementRef","Directive","exportAs","selector","providers","ListItemComponent","alternationIndex","color","displayMode","selected","details","group","hidden","ListItemsGroupComponent","ComboBoxModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { ComboBox } from './../index';\nimport { AutoComplete, DropDownButtonPosition, DropDownOpenMode, DropDownPosition, ComboBoxEscKeyMode, FilterMode, HorizontalScrollBarVisibility, SearchMode, ListItemMeasureMode, VerticalAlignment, ResizeMode, SelectionDisplayMode, ListSelectionMode, VerticalScrollBarVisibility, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, forwardRef, ChangeDetectionStrategy, Output, EventEmitter, QueryList, ContentChildren } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { AutoComplete, DropDownButtonPosition, DropDownOpenMode, DropDownPosition, ComboBoxEscKeyMode, FilterMode, HorizontalScrollBarVisibility, SearchMode, ListItemMeasureMode, VerticalAlignment, ResizeMode, SelectionDisplayMode, ListSelectionMode, VerticalScrollBarVisibility, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { ComboBox } from './../index';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n\nimport { ListItemComponent } from './smart.listitem';\n\nimport { ListItemsGroupComponent } from './smart.listitemsgroup';\n\nconst CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ComboBoxComponent),\n    multi: true\n}\n\n@Directive({\n\texportAs: 'smart-combo-box',\tselector: 'smart-combo-box, [smart-combo-box]',\n\tproviders: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n\n})\n\nexport class ComboBoxComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges, ControlValueAccessor {\n\n\tconstructor(ref: ElementRef<ComboBox>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as ComboBox;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: ComboBox;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <ComboBox>document.createElement('smart-combo-box');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n        /**\n        * @description\n        * The registered callback function called when a change event occurs on the form elements.\n        */\n       _onChange: (value: any) => void = () => {};\n        /**\n        * @description\n        * The registered callback function called when a blur event occurs on the form elements.\n        */\n       _onTouched: () => any = () => {};\n\n\n\t/** @description Used only when dropDownOpenMode is set to 'auto'. Determines the delay before the opened drop down closes if the pointer is not over the element. */\n\t@Input()\n\tget autoCloseDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.autoCloseDelay : undefined;\n\t}\n\tset autoCloseDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.autoCloseDelay = value : undefined;\n\t}\n\n\t/** @description Determines the autocomplete mode. Auto complete modes filter the items from the dataSource and show only those that match the input. */\n\t@Input()\n\tget autoComplete(): AutoComplete | string {\n\t\treturn this.nativeElement ? this.nativeElement.autoComplete : undefined;\n\t}\n\tset autoComplete(value: AutoComplete | string) {\n\t\tthis.nativeElement ? this.nativeElement.autoComplete = value : undefined;\n\t}\n\n\t/** @description Determines the delay before the drop down opens to show the matches from the auto complete operation. The delay is measured in miliseconds. */\n\t@Input()\n\tget autoCompleteDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.autoCompleteDelay : undefined;\n\t}\n\tset autoCompleteDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.autoCompleteDelay = value : undefined;\n\t}\n\n\t/** @description Allows the user to define a custom key name ( or multiple key names) to open that popup with. */\n\t@Input()\n\tget autoOpenShortcutKey(): string[] {\n\t\treturn this.nativeElement ? this.nativeElement.autoOpenShortcutKey : undefined;\n\t}\n\tset autoOpenShortcutKey(value: string[]) {\n\t\tthis.nativeElement ? this.nativeElement.autoOpenShortcutKey = value : undefined;\n\t}\n\n\t/** @description Determines the data source that will be loaded to the ComboBox. The dataSource can be an array of strings/numbers or objects where the attributes represent the properties of a List Item. For example label, value, group. It can also be a callback that returns an Array of items as previously described. */\n\t@Input()\n\tget dataSource(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Enables or disables the combo box. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Determines whether an indicator will appear during filtering and remote item loading. */\n\t@Input()\n\tget displayLoadingIndicator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.displayLoadingIndicator : undefined;\n\t}\n\tset displayLoadingIndicator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.displayLoadingIndicator = value : undefined;\n\t}\n\n\t/** @description Sets or gets the displayMember. The displayMember specifies the name of a property to display. The name is contained in the collection specified by the 'dataSource' property. */\n\t@Input()\n\tget displayMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.displayMember : undefined;\n\t}\n\tset displayMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.displayMember = value : undefined;\n\t}\n\n\t/** @description Determines the drop down parent. The expected value is CSS Selector, ID or 'body'. The drop down can be removed from the body of the element and continue to work in another container. This is usefull when one of the parents of the element doesn't allow overflowing, by settings this property to 'body' the drop down will be appended to the DOM and the popup will open/close as usual. dropDownAppendTo can be a string representing the id of an HTML element on the page or a direct reference to that element. Reseting it back to null will take the drop down back to it's original place. */\n\t@Input()\n\tget dropDownAppendTo(): string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownAppendTo : undefined;\n\t}\n\tset dropDownAppendTo(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownAppendTo = value : undefined;\n\t}\n\n\t/** @description Determines the position of the drop down button. */\n\t@Input()\n\tget dropDownButtonPosition(): DropDownButtonPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownButtonPosition : undefined;\n\t}\n\tset dropDownButtonPosition(value: DropDownButtonPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownButtonPosition = value : undefined;\n\t}\n\n\t/** @description Sets the height of the drop down. By default it's set to an empty string. In this case the height of the drop down is controlled by a CSS variable. */\n\t@Input()\n\tget dropDownHeight(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownHeight : undefined;\n\t}\n\tset dropDownHeight(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownHeight = value : undefined;\n\t}\n\n\t/** @description Sets the maximum Height of the drop down. By default it's set to an empty string. In this case the maxHeight of the drop down is controlled by a CSS variable. */\n\t@Input()\n\tget dropDownMaxHeight(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownMaxHeight : undefined;\n\t}\n\tset dropDownMaxHeight(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownMaxHeight = value : undefined;\n\t}\n\n\t/** @description Sets the maximum Width of the drop down. By default it's set to an empty string. In this case the maxWidth of the drop down is controlled by a CSS variable. */\n\t@Input()\n\tget dropDownMaxWidth(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownMaxWidth : undefined;\n\t}\n\tset dropDownMaxWidth(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownMaxWidth = value : undefined;\n\t}\n\n\t/** @description Sets the minimum Height of the drop down. By default it's set to an empty string. In this case the minHeight of the drop down is controlled by a CSS variable. */\n\t@Input()\n\tget dropDownMinHeight(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownMinHeight : undefined;\n\t}\n\tset dropDownMinHeight(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownMinHeight = value : undefined;\n\t}\n\n\t/** @description Sets the minimum Width of the drop down. By default it's set to an empty string. In this case the minWidth of the drop down is controlled by a CSS variable. */\n\t@Input()\n\tget dropDownMinWidth(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownMinWidth : undefined;\n\t}\n\tset dropDownMinWidth(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownMinWidth = value : undefined;\n\t}\n\n\t/** @description Determines how the drop down is going to open. */\n\t@Input()\n\tget dropDownOpenMode(): DropDownOpenMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownOpenMode : undefined;\n\t}\n\tset dropDownOpenMode(value: DropDownOpenMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownOpenMode = value : undefined;\n\t}\n\n\t/** @description If this property is enabled, when the element's dropdown is opened, a transparent overlay is positioned between the dropdown and the rest of the document. The purpose of the overlay is to make sure that clicking anywhere outside the popup will will target the overlay and not the DOM. */\n\t@Input()\n\tget dropDownOverlay(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownOverlay : undefined;\n\t}\n\tset dropDownOverlay(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownOverlay = value : undefined;\n\t}\n\n\t/** @description Determines the placeholder for the drop down, displayed when there are no items in it. */\n\t@Input()\n\tget dropDownPlaceholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownPlaceholder : undefined;\n\t}\n\tset dropDownPlaceholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownPlaceholder = value : undefined;\n\t}\n\n\t/** @description Determines the position of the drop down when opened. */\n\t@Input()\n\tget dropDownPosition(): DropDownPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownPosition : undefined;\n\t}\n\tset dropDownPosition(value: DropDownPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownPosition = value : undefined;\n\t}\n\n\t/** @description Sets the width of the drop down. By default it's set to an empty string. In this case the width of the drop down is controlled by a CSS variable. */\n\t@Input()\n\tget dropDownWidth(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownWidth : undefined;\n\t}\n\tset dropDownWidth(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownWidth = value : undefined;\n\t}\n\n\t/** @description Determines the behavior of the element when Escape key is pressed. */\n\t@Input()\n\tget escKeyMode(): ComboBoxEscKeyMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.escKeyMode : undefined;\n\t}\n\tset escKeyMode(value: ComboBoxEscKeyMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.escKeyMode = value : undefined;\n\t}\n\n\t/** @description Determines whether filtering is enabled. */\n\t@Input()\n\tget filterable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.filterable : undefined;\n\t}\n\tset filterable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.filterable = value : undefined;\n\t}\n\n\t/** @description Determines the placeholder for the drop down list filter input field. */\n\t@Input()\n\tget filterInputPlaceholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.filterInputPlaceholder : undefined;\n\t}\n\tset filterInputPlaceholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.filterInputPlaceholder = value : undefined;\n\t}\n\n\t/** @description Determines the filtering mode of the Combo box. */\n\t@Input()\n\tget filterMode(): FilterMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.filterMode : undefined;\n\t}\n\tset filterMode(value: FilterMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.filterMode = value : undefined;\n\t}\n\n\t/** @description If enabled, the items will be grouped by their first letter. Can't be applied if the dataSource already contains groups. */\n\t@Input()\n\tget grouped(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.grouped : undefined;\n\t}\n\tset grouped(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.grouped = value : undefined;\n\t}\n\n\t/** @description Determines which attribute from the dataSource object will be used as the group member for the items. If not set, by default 'group' property is used from the source object. groupMember is especially usefull when loading the data from a JSON file as a dataSource for the ListBox and there's a specific property that should be used to group the items. */\n\t@Input()\n\tget groupMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.groupMember : undefined;\n\t}\n\tset groupMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.groupMember = value : undefined;\n\t}\n\n\t/** @description Sets additional helper text below the element. The hint is visible only when the element is focused. */\n\t@Input()\n\tget hint(): string {\n\t\treturn this.nativeElement ? this.nativeElement.hint : undefined;\n\t}\n\tset hint(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.hint = value : undefined;\n\t}\n\n\t/** @description Determines the visibility of the horizontal Scroll bar inside the drop down. */\n\t@Input()\n\tget horizontalScrollBarVisibility(): HorizontalScrollBarVisibility | string {\n\t\treturn this.nativeElement ? this.nativeElement.horizontalScrollBarVisibility : undefined;\n\t}\n\tset horizontalScrollBarVisibility(value: HorizontalScrollBarVisibility | string) {\n\t\tthis.nativeElement ? this.nativeElement.horizontalScrollBarVisibility = value : undefined;\n\t}\n\n\t/** @description Represents the property name of a List item. Determines the value of the input when a ListItem is selected. Usefull in cases where the user wants to display for example the value of an item instead of it's label. By default the label is displayed in the input. */\n\t@Input()\n\tget inputMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.inputMember : undefined;\n\t}\n\tset inputMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.inputMember = value : undefined;\n\t}\n\n\t/** @description Sets the purpose of the input and what, if any, permission the user agent has to provide automated assistance in filling out the element's input when in a form, as well as guidance to the browser as to the type of information expected in the element. This value corresponds to the standard HTML autocomplete attribute and can be set to values such as 'on', 'name', 'organization', 'street-address', etc. */\n\t@Input()\n\tget inputPurpose(): string {\n\t\treturn this.nativeElement ? this.nativeElement.inputPurpose : undefined;\n\t}\n\tset inputPurpose(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.inputPurpose = value : undefined;\n\t}\n\n\t/** @description IncrementalSearchDelay property specifies the time-interval in milliseconds until the previous search query is cleared. The timer starts when the user stops typing. A new query can be started only when the delay has passed. */\n\t@Input()\n\tget incrementalSearchDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.incrementalSearchDelay : undefined;\n\t}\n\tset incrementalSearchDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.incrementalSearchDelay = value : undefined;\n\t}\n\n\t/** @description Sets ot gets the mode of the incremental search mode. Incremental search is enabled by default. Typing while the drop down is focused starts the incremental search. */\n\t@Input()\n\tget incrementalSearchMode(): SearchMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.incrementalSearchMode : undefined;\n\t}\n\tset incrementalSearchMode(value: SearchMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.incrementalSearchMode = value : undefined;\n\t}\n\n\t/** @description Sets the height for all list items. Used only when virtualization is enabled. */\n\t@Input()\n\tget itemHeight(): number {\n\t\treturn this.nativeElement ? this.nativeElement.itemHeight : undefined;\n\t}\n\tset itemHeight(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.itemHeight = value : undefined;\n\t}\n\n\t/** @description Determines the item width measuring algorithm. */\n\t@Input()\n\tget itemMeasureMode(): ListItemMeasureMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.itemMeasureMode : undefined;\n\t}\n\tset itemMeasureMode(value: ListItemMeasureMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.itemMeasureMode = value : undefined;\n\t}\n\n\t/** @description A getter that returns an array of all List items inside the drop down. */\n\t@Input()\n\tget items(): {label: string, value: string}[] {\n\t\treturn this.nativeElement ? this.nativeElement.items : undefined;\n\t}\n\tset items(value: {label: string, value: string}[]) {\n\t\tthis.nativeElement ? this.nativeElement.items = value : undefined;\n\t}\n\n\t/** @description The itemTemplate property is a string that represents the id of an HTMLTemplateElement in the DOM.  It's used to set a customize the content of the list items. */\n\t@Input()\n\tget itemTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.itemTemplate : undefined;\n\t}\n\tset itemTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.itemTemplate = value : undefined;\n\t}\n\n\t/** @description Sets a little text label above the element. */\n\t@Input()\n\tget label(): string {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description Determines the text that will be displayed next to the loading indicator when the loader is visible and it's position is top or bottom. */\n\t@Input()\n\tget loadingIndicatorPlaceholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.loadingIndicatorPlaceholder : undefined;\n\t}\n\tset loadingIndicatorPlaceholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.loadingIndicatorPlaceholder = value : undefined;\n\t}\n\n\t/** @description Determines the position of the loading indicator. */\n\t@Input()\n\tget loadingIndicatorPosition(): VerticalAlignment | string {\n\t\treturn this.nativeElement ? this.nativeElement.loadingIndicatorPosition : undefined;\n\t}\n\tset loadingIndicatorPosition(value: VerticalAlignment | string) {\n\t\tthis.nativeElement ? this.nativeElement.loadingIndicatorPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Determines the minimum number of characters inside the input in order to trigger the autocomplete functionality */\n\t@Input()\n\tget minLength(): number {\n\t\treturn this.nativeElement ? this.nativeElement.minLength : undefined;\n\t}\n\tset minLength(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.minLength = value : undefined;\n\t}\n\n\t/** @description Determines the maximum number of characters inside the input. */\n\t@Input()\n\tget maxLength(): number {\n\t\treturn this.nativeElement ? this.nativeElement.maxLength : undefined;\n\t}\n\tset maxLength(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.maxLength = value : undefined;\n\t}\n\n\t/** @description Sets or gets the name attribute for the element. Name is used when submiting HTML forms. */\n\t@Input()\n\tget name(): string {\n\t\treturn this.nativeElement ? this.nativeElement.name : undefined;\n\t}\n\tset name(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.name = value : undefined;\n\t}\n\n\t/** @description Determines whether the popup is opened or closed */\n\t@Input()\n\tget opened(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.opened : undefined;\n\t}\n\tset opened(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.opened = value : undefined;\n\t}\n\n\t/** @description Determines the input's placeholder. */\n\t@Input()\n\tget placeholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.placeholder : undefined;\n\t}\n\tset placeholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.placeholder = value : undefined;\n\t}\n\n\t/** @description Disables user interaction with the element. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines whether the resize indicator in the bottom right corner of the drop down is visible or not. This property is used in conjunction with resizeMode. */\n\t@Input()\n\tget resizeIndicator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.resizeIndicator : undefined;\n\t}\n\tset resizeIndicator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.resizeIndicator = value : undefined;\n\t}\n\n\t/** @description Determines whether the dropDown can be resized or not. When resizing is enabled, a resize bar appears on the top/bottom side of the drop down. */\n\t@Input()\n\tget resizeMode(): ResizeMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.resizeMode : undefined;\n\t}\n\tset resizeMode(value: ResizeMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.resizeMode = value : undefined;\n\t}\n\n\t/** @description Determines what will be displayed in the input. */\n\t@Input()\n\tget selectionDisplayMode(): SelectionDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.selectionDisplayMode : undefined;\n\t}\n\tset selectionDisplayMode(value: SelectionDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.selectionDisplayMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the selected indexes. Selected indexes represents an array of the indexes of the items that should be selected. */\n\t@Input()\n\tget selectedIndexes(): number[] {\n\t\treturn this.nativeElement ? this.nativeElement.selectedIndexes : undefined;\n\t}\n\tset selectedIndexes(value: number[]) {\n\t\tthis.nativeElement ? this.nativeElement.selectedIndexes = value : undefined;\n\t}\n\n\t/** @description Sets or gets elected indexes. Selected values represents the values of the items that should be selected. */\n\t@Input()\n\tget selectedValues(): string[] {\n\t\treturn this.nativeElement ? this.nativeElement.selectedValues : undefined;\n\t}\n\tset selectedValues(value: string[]) {\n\t\tthis.nativeElement ? this.nativeElement.selectedValues = value : undefined;\n\t}\n\n\t/** @description Determines how many items can be selected. */\n\t@Input()\n\tget selectionMode(): ListSelectionMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: ListSelectionMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description Determines whether the items are sorted alphabetically or not */\n\t@Input()\n\tget sorted(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.sorted : undefined;\n\t}\n\tset sorted(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.sorted = value : undefined;\n\t}\n\n\t/** @description Determines sorting direction - ascending(asc) or descending(desc) */\n\t@Input()\n\tget sortDirection(): string {\n\t\treturn this.nativeElement ? this.nativeElement.sortDirection : undefined;\n\t}\n\tset sortDirection(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.sortDirection = value : undefined;\n\t}\n\n\t/** @description Determines the theme for the element. Themes define the look of the elements. */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Sets a custom content for the tokens when selectionDisplayMode is set to 'tokens'. Tokens are used only for multiple selection. */\n\t@Input()\n\tget tokenTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.tokenTemplate : undefined;\n\t}\n\tset tokenTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.tokenTemplate = value : undefined;\n\t}\n\n\t/** @description If is set to true, the element cannot be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value. */\n\t@Input()\n\tget value(): string {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description Determines the value member of an item. Stored as value in the item object. Similar to groupMember, valueMember is especially usefull when using data from a JSON file as a dataSource for the ListBox and there's a specific property that should be used for the value the items. */\n\t@Input()\n\tget valueMember(): string {\n\t\treturn this.nativeElement ? this.nativeElement.valueMember : undefined;\n\t}\n\tset valueMember(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.valueMember = value : undefined;\n\t}\n\n\t/** @description Determines the visibility of the vertical scroll bar. */\n\t@Input()\n\tget verticalScrollBarVisibility(): VerticalScrollBarVisibility | string {\n\t\treturn this.nativeElement ? this.nativeElement.verticalScrollBarVisibility : undefined;\n\t}\n\tset verticalScrollBarVisibility(value: VerticalScrollBarVisibility | string) {\n\t\tthis.nativeElement ? this.nativeElement.verticalScrollBarVisibility = value : undefined;\n\t}\n\n\t/** @description Determines weather or not Virtualization is used for the Combo box. Virtualization allows a huge amount of items to be loaded to the List box while preserving the performance. For example a milion items can be loaded to the list box. */\n\t@Input()\n\tget virtualized(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.virtualized : undefined;\n\t}\n\tset virtualized(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.virtualized = value : undefined;\n\t}\n\n\t/** @description This event is triggered when the selection is changed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\taddedItems, \tdisabled, \tindex, \tlabel, \tremovedItems, \tselected, \tvalue)\n\t*   addedItems - An array of List items that have been selected.\n\t*   disabled - A flag indicating whether or not the item that caused the change event is disabled.\n\t*   index - The index of the List item that triggered the event.\n\t*   label - The label of the List item that triggered the event.\n\t*   removedItems - An array of List items that have been unselected before the event was fired.\n\t*   selected - The selected state of the List item that triggered the event. If an item was selected the value will be true and vice versa.\n\t*   value - The value of the List item that triggered the event.\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down list is closed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down list is about to be closed. This event allows to cancel the closing operation calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when an item is clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tdisabled, \tindex, \tlabel, \tselected, \tvalue)\n\t*   disabled - Indicates whether the List item that was clicked is disabled or not.\n\t*   index - Indicates the index of the List item that was clicked.\n\t*   label - The label of the List item that was clicked.\n\t*   selected - Indicates whether the List item that was clicked is selected or not.\n\t*   value - The value of the List item that was clicked.\n\t*/\n\t@Output() onItemClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down list is opened.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down list is about to be opened. This event allows to cancel the opening operation calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when user starts resizing the drop down.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tposition)\n\t*   position - An object containing the current left and top positions of the drop down.\n\t*/\n\t@Output() onResizeStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the resizing of the drop down is finished.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tposition)\n\t*   position - An object containing the current left and top positions of the drop down.\n\t*/\n\t@Output() onResizeEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when user scrolls to the end of the dropDown list.\n\t*  @param event. The custom event. \t*/\n\t@Output() onScrollBottomReached: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when user scrolls to the start of the dropDown list.\n\t*  @param event. The custom event. \t*/\n\t@Output() onScrollTopReached: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a token item(pill) has been clicked. This event allows to cancel the opening operation calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onTokenClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Appends a ListItem to the end of the list of items inside element. \n\t* @param {Node} node. A ListItem element that should be added to the rest of the items as the last item.\n\t* @returns {Node}\n  */\n\tpublic async appendChild(node): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.appendChild(node);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Removes all items from the drop down list. \n\t*/\n    public clearItems(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearItems();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearItems();\n            });\n        }\n    }\n\n\t/** @description Unselects all items. \n\t*/\n    public clearSelection(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clearSelection();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clearSelection();\n            });\n        }\n    }\n\n\t/** @description Closes the dropDown list. \n\t*/\n    public close(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.close();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.close();\n            });\n        }\n    }\n\n\t/** @description Ensures the desired item is visible by scrolling to it. \n\t* @param {HTMLElement | string} item. A list item or value of the desired item to be visible.\n\t*/\n    public ensureVisible(item: HTMLElement | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.ensureVisible(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.ensureVisible(item);\n            });\n        }\n    }\n\n\t/** @description Returns an item instance from the dropDown list. \n\t* @param {string} value. The value of an item from the drop down list.\n\t* @returns {HTMLElement}\n  */\n\tpublic async getItem(value): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getItem(value);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Inserts a new item at a specified position. \n\t* @param {number} position. The position where the item must be inserted.\n\t* @param {any} item. Describes the properties of the item that will be inserted.\n\t*/\n    public insert(position: number, item: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.insert(position, item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.insert(position, item);\n            });\n        }\n    }\n\n\t/** @description Inserts a new ListItem before another in the list. \n\t* @param {Node} node. A ListItem element that should be added before the referenceItem in the list.\n\t* @param {Node | null} referenceNode. A ListItem element that acts as the reference item before which a new item is about to be inserted. The referenceNode must be in the same list as the node.\n\t* @returns {Node}\n  */\n\tpublic async insertBefore(node, referenceNode): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.insertBefore(node, referenceNode);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Opens the dropDown list. \n\t*/\n    public open(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.open();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.open();\n            });\n        }\n    }\n\n\t/** @description Removes an item at a specified position. \n\t* @param {number} position. The position of the removed item.\n\t*/\n    public removeAt(position: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeAt(position);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeAt(position);\n            });\n        }\n    }\n\n\t/** @description Removes a ListItem from the list of items inside element. \n\t* @param {Node} node. A ListItem element that is part of the list of items inside the element.\n\t* @returns {Node}\n  */\n\tpublic async removeChild(node): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.removeChild(node);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Selects an item from the dropDown list.  \n\t* @param {string | HTMLElement} item. A string, representing the value of the item or an HTML Element referencing an item from the list\n\t*/\n    public select(item: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.select(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.select(item);\n            });\n        }\n    }\n\n\t/** @description Unselects an item from the dropDown list.  \n\t* @param {string | HTMLElement} item. A string, representing the value of the item or an HTML Element referencing an item from the list\n\t*/\n    public unselect(item: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unselect(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unselect(item);\n            });\n        }\n    }\n\n\t/** @description Updates an item from the dropDown list. \n\t* @param {number} position. The position where the item must be updated.\n\t* @param {any} value. The value of the updated item.\n\t*/\n    public update(position: number, value: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.update(position, value);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.update(position, value);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\t_initialChange = true; \n\n\tget ngValue(): any {\n\t\tif (!this.nativeElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.selectedValues && this.selectedValues.length > 0) {\n\t\t\tconst value = this.selectedValues.length === 1 ? this.nativeElement.selectedValues[0] : this.nativeElement.selectedValues;\n\t\t\treturn value;\n\t\t}\n        const input = this.nativeElement.querySelector('input');\n        return input ? input.value : null;\n\t}\n\n\tset ngValue(value: any) {\n\t\tif (this.nativeElement) {\n\t\t    this.writeValue(value);\n\t\t}\n\t}\n\n\twriteValue(value: any): void {\n        const that = this;\n        const normalizedValue = value == null ? '' : value;\n\n\t\tthat.nativeElement.whenRendered(() => {\n            that.nativeElement.$.listBox.isInitialized = that._initialChange ? false : true;\n\t\t\tthat.clearSelection();\n            if (Array.isArray(normalizedValue)) {\n                value.forEach((currentValue: any) => this.select(currentValue));\n                }\n                else {\n                    that.select(normalizedValue);\n                }\n            that.nativeElement.$.listBox.isInitialized = true;\n\t\t\tthat.nativeElement._applySelection();\n\t\t\tif (that._initialChange === false) {\n                if (that.selectedValues && that.selectedValues.length > 1) {\n                    that._onChange(that.selectedValues);\n                }\n                else {\n                    const input = that.nativeElement.querySelector('input');\n                    that._onChange((that.selectedValues && that.selectedValues.length > 0) ? that.selectedValues[0] : (input ? input.value : null));\n                }\n            }\n\t\t});\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis._onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis._onTouched = fn;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['closeHandler'] = (event: CustomEvent) => { that.onClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('close', that.eventHandlers['closeHandler']);\n\n\t\tthat.eventHandlers['closingHandler'] = (event: CustomEvent) => { that.onClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('closing', that.eventHandlers['closingHandler']);\n\n\t\tthat.eventHandlers['itemClickHandler'] = (event: CustomEvent) => { that.onItemClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('itemClick', that.eventHandlers['itemClickHandler']);\n\n\t\tthat.eventHandlers['openHandler'] = (event: CustomEvent) => { that.onOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('open', that.eventHandlers['openHandler']);\n\n\t\tthat.eventHandlers['openingHandler'] = (event: CustomEvent) => { that.onOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('opening', that.eventHandlers['openingHandler']);\n\n\t\tthat.eventHandlers['resizeStartHandler'] = (event: CustomEvent) => { that.onResizeStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\n\t\tthat.eventHandlers['resizeEndHandler'] = (event: CustomEvent) => { that.onResizeEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\n\t\tthat.eventHandlers['scrollBottomReachedHandler'] = (event: CustomEvent) => { that.onScrollBottomReached.emit(event); }\n\t\tthat.nativeElement.addEventListener('scrollBottomReached', that.eventHandlers['scrollBottomReachedHandler']);\n\n\t\tthat.eventHandlers['scrollTopReachedHandler'] = (event: CustomEvent) => { that.onScrollTopReached.emit(event); }\n\t\tthat.nativeElement.addEventListener('scrollTopReached', that.eventHandlers['scrollTopReachedHandler']);\n\n\t\tthat.eventHandlers['tokenClickHandler'] = (event: CustomEvent) => { that.onTokenClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('tokenClick', that.eventHandlers['tokenClickHandler']);\n\n\n        that.eventHandlers['changeModelHandler'] = (event: Event) =>\n        {\n            that._initialChange = false;\n            that._onChange(that.nativeElement.selectedValues.length > 0 ? (that.nativeElement.selectedValues.length > 1 ? that.nativeElement.selectedValues : that.nativeElement.selectedValues[0]) : that.nativeElement.querySelector('input').value);\n        }\n        that.eventHandlers['blurModelHandler'] = (event: Event) => {\n            that._onTouched();\n        };\n        that.nativeElement.whenRendered(() => {\n            if (that.nativeElement.querySelector('input')) {\n                that.eventHandlers['keyupModelHandler'] = (event) => {\n                    setTimeout(() => { that.eventHandlers['changeModelHandler'](event); }, 50);\n                };\n\n                that.nativeElement.querySelector('input').addEventListener('keyup', that.eventHandlers['keyupModelHandler']);\n            }\n        });\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeModelHandler']);\n\t\tthat.nativeElement.addEventListener('blur', that.eventHandlers['blurModelHandler']);\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('close', that.eventHandlers['closeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('closing', that.eventHandlers['closingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['itemClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('itemClick', that.eventHandlers['itemClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('open', that.eventHandlers['openHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('opening', that.eventHandlers['openingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['scrollBottomReachedHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('scrollBottomReached', that.eventHandlers['scrollBottomReachedHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['scrollTopReachedHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('scrollTopReached', that.eventHandlers['scrollTopReachedHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['tokenClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('tokenClick', that.eventHandlers['tokenClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changeModelHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeModelHandler']);\n            if (that.nativeElement.querySelector('input')) {\n                  that.nativeElement.querySelector('input').removeEventListener('keyup', that.eventHandlers['keyupModelHandler']);\n            }\n\t\t}\n\t\tif (that.eventHandlers['blurModelHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('blur', that.eventHandlers['blurModelHandler']);\n\t\t}\n\t}\n}\n","import { ListItem } from './../index';\nimport { ListItemDisplayMode, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { ListItemDisplayMode, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { ListItem } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-list-item',\tselector: 'smart-list-item, [smart-list-item]'\n})\n\nexport class ListItemComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<ListItem>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as ListItem;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: ListItem;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <ListItem>document.createElement('smart-list-item');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description  */\n\t@Input()\n\tget alternationIndex(): number {\n\t\treturn this.nativeElement ? this.nativeElement.alternationIndex : undefined;\n\t}\n\tset alternationIndex(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.alternationIndex = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget color(): string {\n\t\treturn this.nativeElement ? this.nativeElement.color : undefined;\n\t}\n\tset color(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.color = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget displayMode(): ListItemDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.displayMode : undefined;\n\t}\n\tset displayMode(value: ListItemDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.displayMode = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget grouped(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.grouped : undefined;\n\t}\n\tset grouped(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.grouped = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget selected(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.selected : undefined;\n\t}\n\tset selected(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.selected = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget value(): string {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget label(): string {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget details(): string {\n\t\treturn this.nativeElement ? this.nativeElement.details : undefined;\n\t}\n\tset details(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.details = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget group(): string {\n\t\treturn this.nativeElement ? this.nativeElement.group : undefined;\n\t}\n\tset group(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.group = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget hidden(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hidden : undefined;\n\t}\n\tset hidden(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hidden = value : undefined;\n\t}\n\n\t/** @description  */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t}\n\n\tngOnDestroy() {\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { ListItemsGroup } from './../index';\nimport { ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { ListItemsGroup } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-list-items-group',\tselector: 'smart-list-items-group, [smart-list-items-group]'\n})\n\nexport class ListItemsGroupComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<ListItemsGroup>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as ListItemsGroup;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: ListItemsGroup;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <ListItemsGroup>document.createElement('smart-list-items-group');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description  */\n\t@Input()\n\tget label(): string {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t}\n\n\tngOnDestroy() {\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { ComboBoxComponent } from './smart.combobox';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { ListItemComponent } from './smart.listitem';\nimport { ListItemsGroupComponent } from './smart.listitemsgroup';\n\n@NgModule({\n    declarations: [ComboBoxComponent, ListItemComponent, ListItemsGroupComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [ComboBoxComponent, ListItemComponent, ListItemsGroupComponent]\n})\n\nexport class ComboBoxModule { }\n"]}