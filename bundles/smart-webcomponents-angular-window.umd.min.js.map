{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/window/smart.element.ts","ng://smart-webcomponents-angular/window/smart.window.ts","ng://smart-webcomponents-angular/window/smart.window.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","WindowComponent","_this","_super","eventHandlers","onOpening","onOpen","onClosing","onClose","onCollapse","onDragEnd","onDragStart","onExpand","onMaximize","onMinimize","onResizeEnd","onResizeStart","onRestore","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","addNewTab","animation","autoCapitalize","autoExpand","cancelLabel","completeLabel","confirmLabel","collapsed","closeOnMaskClick","dataSource","disabled","disableSnap","disableEscape","disableKeyboard","displayMode","dropPosition","formatFunction","footerPosition","footerTemplate","headerButtons","headerTemplate","headerPosition","hint","indeterminate","inverted","liveResize","layout","locked","maximized","modal","max","min","minimized","maxLength","minLength","opened","pinned","placeholder","promptLabel","readonly","resizeIndicator","resizeMode","required","requiredMessage","selectAllOnFocus","selectedIndex","selectionMode","selectionEnd","selectionStart","showProgressValue","siblings","size","spellCheck","tabCloseButtons","tabCloseButtonMode","tabOverflow","tabPosition","tabScrollButtonsPosition","tabTextOrientation","unfocusable","windowParent","wrap","appendChild","node","whenRendered","getResultOnRender","_a","bringToFront","isRendered","clear","close","collapse","ensureVisible","index","expand","insert","details","insertBefore","newNode","referenceNode","move","left","top","maximize","minimize","open","pin","removeAt","removeChild","restore","select","unpin","updateLabel","updateContent","content","update","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","ElementRef","Directive","exportAs","selector","WindowModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":";;;;;;;;;;;;;;oFAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAgCrB,SAASO,EAAWC,EAAYC,EAAQC,EAAKC,GAChD,IAA2HZ,EAAvHa,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOV,OAAOe,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,iBAAZM,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIQ,EAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASpB,EAAIS,EAAWW,MAAIJ,GAAKH,EAAI,EAAIb,EAAEgB,GAAKH,EAAI,EAAIb,EAAEU,EAAQC,EAAKK,GAAKhB,EAAEU,EAAQC,KAASK,GAChJ,OAAOH,EAAI,GAAKG,GAAKd,OAAOmB,eAAeX,EAAQC,EAAKK,GAAIA,EAWzD,SAASM,EAAUC,EAASC,EAAYC,EAAGC,GAE9C,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,IAAW,MAAOG,GAAKL,EAAOK,IACpF,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,IAAW,MAAOG,GAAKL,EAAOK,IACvF,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,OAITO,KAAKR,EAAWK,GAClGH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,WAI/D,SAASO,EAAYjB,EAASkB,GACjC,IAAsGC,EAAGC,EAAGC,EAAGC,EAA3GC,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAPJ,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOK,KAAM,GAAIC,IAAK,IAChG,OAAOL,EAAI,CAAEZ,KAAMkB,EAAK,GAAIC,MAASD,EAAK,GAAIE,OAAUF,EAAK,IAAwB,mBAAXG,SAA0BT,EAAES,OAAOC,UAAY,WAAa,OAAOC,OAAUX,EACvJ,SAASM,EAAKM,GAAK,OAAO,SAAUC,GAAK,OACzC,SAAcC,GACV,GAAIjB,EAAG,MAAM,IAAIkB,UAAU,mCAC3B,KAAOd,GAAG,IACN,GAAIJ,EAAI,EAAGC,IAAMC,EAAY,EAARe,EAAG,GAAShB,EAAU,OAAIgB,EAAG,GAAKhB,EAAS,SAAOC,EAAID,EAAU,SAAMC,EAAEiB,KAAKlB,GAAI,GAAKA,EAAEV,SAAWW,EAAIA,EAAEiB,KAAKlB,EAAGgB,EAAG,KAAKtB,KAAM,OAAOO,EAE3J,OADID,EAAI,EAAGC,IAAGe,EAAK,CAAS,EAARA,EAAG,GAAQf,EAAEb,QACzB4B,EAAG,IACP,KAAK,EAAG,KAAK,EAAGf,EAAIe,EAAI,MACxB,KAAK,EAAc,OAAXb,EAAEC,QAAgB,CAAEhB,MAAO4B,EAAG,GAAItB,MAAM,GAChD,KAAK,EAAGS,EAAEC,QAASJ,EAAIgB,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKb,EAAEI,IAAIY,MAAOhB,EAAEG,KAAKa,MAAO,SACxC,QACI,KAAMlB,EAAIE,EAAEG,MAAML,EAAIA,EAAE7B,OAAS,GAAK6B,EAAEA,EAAE7B,OAAS,KAAkB,IAAV4C,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEb,EAAI,EAAG,SACjG,GAAc,IAAVa,EAAG,MAAcf,GAAMe,EAAG,GAAKf,EAAE,IAAMe,EAAG,GAAKf,EAAE,IAAM,CAAEE,EAAEC,MAAQY,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYb,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIA,EAAIe,EAAI,MAC7D,GAAIf,GAAKE,EAAEC,MAAQH,EAAE,GAAI,CAAEE,EAAEC,MAAQH,EAAE,GAAIE,EAAEI,IAAIa,KAAKJ,GAAK,MACvDf,EAAE,IAAIE,EAAEI,IAAIY,MAChBhB,EAAEG,KAAKa,MAAO,SAEtBH,EAAKlB,EAAKoB,KAAKtC,EAASuB,GAC1B,MAAOZ,GAAKyB,EAAK,CAAC,EAAGzB,GAAIS,EAAI,EAAI,QAAWD,EAAIE,EAAI,EACtD,GAAY,EAARe,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAE5B,MAAO4B,EAAG,GAAKA,EAAG,QAAK,EAAQtB,MAAM,GArB9BL,CAAK,CAACyB,EAAGC,uBCpEzD,SAAAM,EAAYC,GAaFT,KAAAU,SAA8B,IAAIC,EAAAA,aAClCX,KAAAY,QAA6B,IAAID,EAAAA,aACjCX,KAAAa,SAA8B,IAAIF,EAAAA,aAClCX,KAAAc,SAA8B,IAAIH,EAAAA,aAfxC,IAAMI,EAAOf,KACbA,KAAKgB,cAAgBP,EAAIO,cAEzBD,EAAKC,cAAcC,WAAa,WAC5BF,EAAKF,SAASK,KAAKH,EAAKC,gBAG5BD,EAAKC,cAAcG,WAAa,WAC5BJ,EAAKD,SAASI,KAAKH,EAAKC,gBA+EpC,OApEWR,EAAAY,UAAAC,iBAAP,SAAwBC,EAAcC,EAA8CC,QAAA,IAAAA,IAAAA,GAAA,GAChFxB,KAAKgB,cAAcK,iBAAiBC,EAAMC,EAAUC,IAGpDhB,EAAAY,UAAAK,oBAAP,SAA2BH,EAAcC,EAA8CC,QAAA,IAAAA,IAAAA,GAAA,GACtFxB,KAAKgB,cAAcS,oBAAoBH,EAAMC,EAAUC,IAGjDhB,EAAAY,UAAAM,cAAP,SAAqBC,GACpB,OAAO3B,KAAKgB,cAAcU,cAAcC,IAGlCnB,EAAAY,UAAAQ,KAAP,WACC5B,KAAKgB,cAAcY,QAGbpB,EAAAY,UAAAS,MAAP,WACC7B,KAAKgB,cAAca,SAGbrB,EAAAY,UAAAU,MAAP,SAAaN,GACZxB,KAAKgB,cAAcc,MAAMN,IAK1B9E,OAAAmB,eAAI2C,EAAAY,UAAA,SAAM,KAAV,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAce,YAASC,OAEzD,SAAWzD,GACVyB,KAAKgB,gBAAgBhB,KAAKgB,cAAce,OAASxD,oCAKlD7B,OAAAmB,eAAI2C,EAAAY,UAAA,yBAAsB,KAA1B,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAciB,4BAAyBD,OAEzE,SAA2BzD,GAC1ByB,KAAKgB,gBAAgBhB,KAAKgB,cAAciB,uBAAyB1D,oCAKlE7B,OAAAmB,eAAI2C,EAAAY,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAckB,cAAWF,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAckB,SAAW3D,oCAKpD7B,OAAAmB,eAAI2C,EAAAY,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcmB,iBAAcH,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcmB,YAAc5D,oCAKvD7B,OAAAmB,eAAI2C,EAAAY,UAAA,QAAK,KAAT,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcoB,WAAQJ,OAExD,SAAUzD,GACTyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcoB,MAAQ7D,oCAzEpC8D,EAAAA,CAATC,EAAAA,yCACSD,EAAAA,CAATC,EAAAA,wCACSD,EAAAA,CAATC,EAAAA,yCACSD,EAAAA,CAATC,EAAAA,yCA8BJD,EAAAA,CADCE,EAAAA,oCAUDF,EAAAA,CADCE,EAAAA,oDAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,mCAOF/B,KAEagC,EAAaC,OAAOD,oBCxFhC,SAAAE,EAAYjC,GAAZ,IAAAkC,EACCC,EAAAvC,KAAAL,KAAMS,IAAIT,YAIH2C,EAAAE,cAAuB,GA4nBrBF,EAAAG,UAAuC,IAAInC,EAAAA,aAI3CgC,EAAAI,OAAoC,IAAIpC,EAAAA,aAIxCgC,EAAAK,UAAuC,IAAIrC,EAAAA,aAI3CgC,EAAAM,QAAqC,IAAItC,EAAAA,aAIzCgC,EAAAO,WAAwC,IAAIvC,EAAAA,aAI5CgC,EAAAQ,UAAuC,IAAIxC,EAAAA,aAI3CgC,EAAAS,YAAyC,IAAIzC,EAAAA,aAI7CgC,EAAAU,SAAsC,IAAI1C,EAAAA,aAI1CgC,EAAAW,WAAwC,IAAI3C,EAAAA,aAI5CgC,EAAAY,WAAwC,IAAI5C,EAAAA,aAI5CgC,EAAAa,YAAyC,IAAI7C,EAAAA,aAI7CgC,EAAAc,cAA2C,IAAI9C,EAAAA,aAI/CgC,EAAAe,UAAuC,IAAI/C,EAAAA,aA/qBpDgC,EAAK3B,cAAgBP,EAAIO,gBA2oC3B,OFpoCO,SAAmBxE,EAAGC,GAEzB,SAASkH,IAAO3D,KAAK4D,YAAcpH,EADnCD,EAAcC,EAAGC,GAEjBD,EAAE4E,UAAkB,OAAN3E,EAAaC,OAAOmH,OAAOpH,IAAMkH,EAAGvC,UAAY3E,EAAE2E,UAAW,IAAIuC,GEb9CG,CAAAA,EAAAA,GAY7BpB,EAAAtB,UAAA2C,gBAAP,SAAuBC,GAEtB,IAAK,IAAIC,UAFa,IAAAD,IAAAA,EAAA,IACnBhE,KAAKgB,cAAwBkD,SAASC,cAAc,gBAC9BH,EACvBhE,KAAKgB,cAAciD,GAAgBD,EAAWC,GAEhD,OAAOjE,KAAKgB,eAIbtE,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcoD,eAAYpC,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcoD,UAAY7F,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcqD,eAAYrC,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcqD,UAAY9F,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcsD,oBAAiBtC,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcsD,eAAiB/F,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,aAAU,KAAd,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcuD,gBAAavC,OAE7D,SAAezD,GACdyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcuD,WAAahG,oCAKtD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcwD,iBAAcxC,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcwD,YAAcjG,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,gBAAa,KAAjB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcyD,mBAAgBzC,OAEhE,SAAkBzD,GACjByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcyD,cAAgBlG,oCAKzD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,eAAY,KAAhB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc0D,kBAAe1C,OAE/D,SAAiBzD,GAChByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc0D,aAAenG,oCAKxD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc2D,eAAY3C,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc2D,UAAYpG,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,mBAAgB,KAApB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc4D,sBAAmB5C,OAEnE,SAAqBzD,GACpByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc4D,iBAAmBrG,oCAK5D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,aAAU,KAAd,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc6D,gBAAa7C,OAE7D,SAAezD,GACdyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc6D,WAAatG,oCAKtD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc8D,cAAW9C,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc8D,SAAWvG,oCAKpD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc+D,iBAAc/C,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc+D,YAAcxG,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,gBAAa,KAAjB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcgE,mBAAgBhD,OAEhE,SAAkBzD,GACjByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcgE,cAAgBzG,oCAKzD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,kBAAe,KAAnB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAciE,qBAAkBjD,OAElE,SAAoBzD,GACnByB,KAAKgB,gBAAgBhB,KAAKgB,cAAciE,gBAAkB1G,oCAK3D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAckE,iBAAclD,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAckE,YAAc3G,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,eAAY,KAAhB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcmE,kBAAenD,OAE/D,SAAiBzD,GAChByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcmE,aAAe5G,oCAKxD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcoE,oBAAiBpD,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcoE,eAAiB7G,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcqE,oBAAiBrD,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcqE,eAAiB9G,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcsE,oBAAiBtD,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcsE,eAAiB/G,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,gBAAa,KAAjB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcuE,mBAAgBvD,OAEhE,SAAkBzD,GACjByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcuE,cAAgBhH,oCAKzD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcwE,oBAAiBxD,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcwE,eAAiBjH,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcyE,oBAAiBzD,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcyE,eAAiBlH,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,OAAI,KAAR,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc0E,UAAO1D,OAEvD,SAASzD,GACRyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc0E,KAAOnH,oCAKhD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,gBAAa,KAAjB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc2E,mBAAgB3D,OAEhE,SAAkBzD,GACjByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc2E,cAAgBpH,oCAKzD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc4E,cAAW5D,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc4E,SAAWrH,oCAKpD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,QAAK,KAAT,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAczB,WAAQyC,OAExD,SAAUzD,GACTyB,KAAKgB,gBAAgBhB,KAAKgB,cAAczB,MAAQhB,oCAKjD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,aAAU,KAAd,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc6E,gBAAa7D,OAE7D,SAAezD,GACdyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc6E,WAAatH,oCAKtD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,SAAM,KAAV,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc8E,YAAS9D,OAEzD,SAAWzD,GACVyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc8E,OAASvH,oCAKlD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,SAAM,KAAV,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAce,YAASC,OAEzD,SAAWzD,GACVyB,KAAKgB,gBAAgBhB,KAAKgB,cAAce,OAASxD,oCAKlD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,SAAM,KAAV,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc+E,YAAS/D,OAEzD,SAAWzD,GACVyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc+E,OAASxH,oCAKlD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,yBAAsB,KAA1B,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAciB,4BAAyBD,OAEzE,SAA2BzD,GAC1ByB,KAAKgB,gBAAgBhB,KAAKgB,cAAciB,uBAAyB1D,oCAKlE7B,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcgF,eAAYhE,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcgF,UAAYzH,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAckB,cAAWF,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAckB,SAAW3D,oCAKpD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,QAAK,KAAT,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAciF,WAAQjE,OAExD,SAAUzD,GACTyB,KAAKgB,gBAAgBhB,KAAKgB,cAAciF,MAAQ1H,oCAKjD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,MAAG,KAAP,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAckF,SAAMlE,OAEtD,SAAQzD,GACPyB,KAAKgB,gBAAgBhB,KAAKgB,cAAckF,IAAM3H,oCAK/C7B,OAAAmB,eAAI6E,EAAAtB,UAAA,MAAG,KAAP,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcmF,SAAMnE,OAEtD,SAAQzD,GACPyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcmF,IAAM5H,oCAK/C7B,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcoF,eAAYpE,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcoF,UAAY7H,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcqF,eAAYrE,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcqF,UAAY9H,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,YAAS,KAAb,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcsF,eAAYtE,OAE5D,SAAczD,GACbyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcsF,UAAY/H,oCAKrD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,SAAM,KAAV,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcuF,YAASvE,OAEzD,SAAWzD,GACVyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcuF,OAAShI,oCAKlD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,SAAM,KAAV,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcwF,YAASxE,OAEzD,SAAWzD,GACVyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcwF,OAASjI,oCAKlD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcyF,iBAAczE,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcyF,YAAclI,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc0F,iBAAc1E,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc0F,YAAcnI,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc2F,cAAW3E,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc2F,SAAWpI,oCAKpD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,kBAAe,KAAnB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc4F,qBAAkB5E,OAElE,SAAoBzD,GACnByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc4F,gBAAkBrI,oCAK3D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,aAAU,KAAd,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc6F,gBAAa7E,OAE7D,SAAezD,GACdyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc6F,WAAatI,oCAKtD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcmB,iBAAcH,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcmB,YAAc5D,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc8F,cAAW9E,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc8F,SAAWvI,oCAKpD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,kBAAe,KAAnB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc+F,qBAAkB/E,OAElE,SAAoBzD,GACnByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc+F,gBAAkBxI,oCAK3D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,mBAAgB,KAApB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcgG,sBAAmBhF,OAEnE,SAAqBzD,GACpByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcgG,iBAAmBzI,oCAK5D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,gBAAa,KAAjB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAciG,mBAAgBjF,OAEhE,SAAkBzD,GACjByB,KAAKgB,gBAAgBhB,KAAKgB,cAAciG,cAAgB1I,oCAKzD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,gBAAa,KAAjB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAckG,mBAAgBlF,OAEhE,SAAkBzD,GACjByB,KAAKgB,gBAAgBhB,KAAKgB,cAAckG,cAAgB3I,oCAKzD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,eAAY,KAAhB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcmG,kBAAenF,OAE/D,SAAiBzD,GAChByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcmG,aAAe5I,oCAKxD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,iBAAc,KAAlB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcoG,oBAAiBpF,OAEjE,SAAmBzD,GAClByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcoG,eAAiB7I,oCAK1D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,oBAAiB,KAArB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcqG,uBAAoBrF,OAEpE,SAAsBzD,GACrByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcqG,kBAAoB9I,oCAK7D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,WAAQ,KAAZ,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcsG,cAAWtF,OAE3D,SAAazD,GACZyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcsG,SAAW/I,oCAKpD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,OAAI,KAAR,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcuG,UAAOvF,OAEvD,SAASzD,GACRyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcuG,KAAOhJ,oCAKhD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,aAAU,KAAd,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcwG,gBAAaxF,OAE7D,SAAezD,GACdyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcwG,WAAajJ,oCAKtD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,kBAAe,KAAnB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcyG,qBAAkBzF,OAElE,SAAoBzD,GACnByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcyG,gBAAkBlJ,oCAK3D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,qBAAkB,KAAtB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc0G,wBAAqB1F,OAErE,SAAuBzD,GACtByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc0G,mBAAqBnJ,oCAK9D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc2G,iBAAc3F,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc2G,YAAcpJ,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc4G,iBAAc5F,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc4G,YAAcrJ,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,2BAAwB,KAA5B,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc6G,8BAA2B7F,OAE3E,SAA6BzD,GAC5ByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc6G,yBAA2BtJ,oCAKpE7B,OAAAmB,eAAI6E,EAAAtB,UAAA,qBAAkB,KAAtB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc8G,wBAAqB9F,OAErE,SAAuBzD,GACtByB,KAAKgB,gBAAgBhB,KAAKgB,cAAc8G,mBAAqBvJ,oCAK9D7B,OAAAmB,eAAI6E,EAAAtB,UAAA,QAAK,KAAT,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcoB,WAAQJ,OAExD,SAAUzD,GACTyB,KAAKgB,gBAAgBhB,KAAKgB,cAAcoB,MAAQ7D,oCAKjD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,cAAW,KAAf,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAc+G,iBAAc/F,OAE9D,SAAgBzD,GACfyB,KAAKgB,gBAAgBhB,KAAKgB,cAAc+G,YAAcxJ,oCAKvD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,QAAK,KAAT,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAczC,WAAQyD,OAExD,SAAUzD,GACTyB,KAAKgB,gBAAgBhB,KAAKgB,cAAczC,MAAQA,oCAKjD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,eAAY,KAAhB,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAcgH,kBAAehG,OAE/D,SAAiBzD,GAChByB,KAAKgB,gBAAgBhB,KAAKgB,cAAcgH,aAAezJ,oCAKxD7B,OAAAmB,eAAI6E,EAAAtB,UAAA,OAAI,KAAR,WACC,OAAOpB,KAAKgB,cAAgBhB,KAAKgB,cAAciH,UAAOjG,OAEvD,SAASzD,GACRyB,KAAKgB,gBAAgBhB,KAAKgB,cAAciH,KAAO1J,oCA2DnCmE,EAAAtB,UAAA8G,YAAb,SAAyBC,wGASH,MAAA,CAAA,EARK,WAChB,OAAO,IAAIhK,SAAQ,SAAAC,GACfuE,EAAK3B,cAAcoH,cAAa,WAC5B,IAAMxJ,EAAS+D,EAAK3B,cAAckH,YAAYC,GAC9C/J,EAAQQ,SAICyJ,WAErB,MAAA,CAAA,EAFeC,EAAA9I,gBAOZkD,EAAAtB,UAAAmH,aAAP,WAAA,IAAA5F,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcuH,eAInBvI,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcuH,mBAOxB7F,EAAAtB,UAAAqH,MAAP,WAAA,IAAA9F,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcyH,QAInBzI,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcyH,YAOxB/F,EAAAtB,UAAAsH,MAAP,WAAA,IAAA/F,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc0H,QAInB1I,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc0H,YAQrBhG,EAAAtB,UAAAuH,SAAb,gHASsB,MAAA,CAAA,EARK,WAChB,OAAO,IAAIxK,SAAQ,SAAAC,GACfuE,EAAK3B,cAAcoH,cAAa,WAC5B,IAAMxJ,EAAS+D,EAAK3B,cAAc2H,WAClCvK,EAAQQ,SAICyJ,WAErB,MAAA,CAAA,EAFeC,EAAA9I,gBAQZkD,EAAAtB,UAAAwH,cAAP,SAAqBC,GAArB,IAAAlG,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc4H,cAAcC,GAIjC7I,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc4H,cAAcC,OAQnCnG,EAAAtB,UAAA0H,OAAb,gHASsB,MAAA,CAAA,EARK,WAChB,OAAO,IAAI3K,SAAQ,SAAAC,GACfuE,EAAK3B,cAAcoH,cAAa,WAC5B,IAAMxJ,EAAS+D,EAAK3B,cAAc8H,SAClC1K,EAAQQ,SAICyJ,WAErB,MAAA,CAAA,EAFeC,EAAA9I,gBASZkD,EAAAtB,UAAA2H,OAAP,SAAcF,EAAeG,GAA7B,IAAArG,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc+H,OAAOF,EAAOG,GAIjChJ,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc+H,OAAOF,EAAOG,OAUnCtG,EAAAtB,UAAA6H,aAAb,SAA0BC,EAASC,wGASb,MAAA,CAAA,EARK,WAChB,OAAO,IAAIhL,SAAQ,SAAAC,GACfuE,EAAK3B,cAAcoH,cAAa,WAC5B,IAAMxJ,EAAS+D,EAAK3B,cAAciI,aAAaC,EAASC,GACxD/K,EAAQQ,SAICyJ,WAErB,MAAA,CAAA,EAFeC,EAAA9I,gBASZkD,EAAAtB,UAAAgI,KAAP,SAAYC,EAAuBC,GAAnC,IAAA3G,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcoI,KAAKC,EAAMC,GAI9BtJ,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcoI,KAAKC,EAAMC,OAOnC5G,EAAAtB,UAAAmI,SAAP,WAAA,IAAA5G,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcuI,WAInBvJ,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcuI,eAOxB7G,EAAAtB,UAAAoI,SAAP,WAAA,IAAA7G,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcwI,WAInBxJ,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcwI,eAOxB9G,EAAAtB,UAAAqI,KAAP,WAAA,IAAA9G,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcyI,OAInBzJ,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcyI,WAOxB/G,EAAAtB,UAAAsI,IAAP,WAAA,IAAA/G,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc0I,MAInB1J,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc0I,UAQxBhH,EAAAtB,UAAAuI,SAAP,SAAgBd,GAAhB,IAAAlG,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc2I,SAASd,GAI5B7I,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc2I,SAASd,OAS9BnG,EAAAtB,UAAAwI,YAAb,SAAyBzB,wGASH,MAAA,CAAA,EARK,WAChB,OAAO,IAAIhK,SAAQ,SAAAC,GACfuE,EAAK3B,cAAcoH,cAAa,WAC5B,IAAMxJ,EAAS+D,EAAK3B,cAAc4I,YAAYzB,GAC9C/J,EAAQQ,SAICyJ,WAErB,MAAA,CAAA,EAFeC,EAAA9I,gBAOZkD,EAAAtB,UAAAyI,QAAP,WAAA,IAAAlH,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc6I,UAInB7J,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc6I,cAQxBnH,EAAAtB,UAAA0I,OAAP,SAAcjB,GAAd,IAAAlG,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc8I,OAAOjB,GAI1B7I,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc8I,OAAOjB,OAO/BnG,EAAAtB,UAAA2I,MAAP,WAAA,IAAApH,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAc+I,QAInB/J,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAc+I,YAQxBrH,EAAAtB,UAAA4I,YAAP,SAAmBzK,GAAnB,IAAAoD,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcgJ,YAAYzK,GAI/BS,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcgJ,YAAYzK,OAQpCmD,EAAAtB,UAAA6I,cAAP,SAAqBC,GAArB,IAAAvH,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAciJ,cAAcC,GAIjClK,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAciJ,cAAcC,OAUtCxH,EAAAtB,UAAA+I,OAAP,SAActB,EAAetJ,EAAe2K,GAA5C,IAAAvH,EAAA3C,KACQA,KAAKgB,cAAcwH,WACnBxI,KAAKgB,cAAcmJ,OAAOtB,EAAOtJ,EAAO2K,GAIxClK,KAAKgB,cAAcoH,cAAa,WAC5BzF,EAAK3B,cAAcmJ,OAAOtB,EAAOtJ,EAAO2K,OAMvDxN,OAAAmB,eAAI6E,EAAAtB,UAAA,aAAU,KAAd,WACC,QAAOpB,KAAKgB,eAAgBhB,KAAKgB,cAAcwH,4CAGhD9F,EAAAtB,UAAAgJ,SAAA,aAGG1H,EAAAtB,UAAAiJ,gBAAA,WACE,IAAMtJ,EAAOf,KAEbe,EAAKL,SAASQ,KAAKH,EAAKC,eAE5BwB,EAAM8H,SAENtK,KAAKgB,cAAcuJ,UAAUC,IAAI,iBAEjCxK,KAAKgB,cAAcoH,cAAa,WAAQrH,EAAKH,QAAQM,KAAKH,EAAKC,kBAC/DhB,KAAKyK,UAGN/H,EAAAtB,UAAAsJ,YAAA,WACC1K,KAAK2K,YAGNjI,EAAAtB,UAAAwJ,YAAA,SAAYC,GACX,GAAI7K,KAAKgB,eAAiBhB,KAAKgB,cAAcwH,WAC5C,IAAK,IAAMsC,KAAYD,EAClBA,EAAQ9N,eAAe+N,KAC1B9K,KAAKgB,cAAc8J,GAAYD,EAAQC,GAAUC,eAO7CrI,EAAAtB,UAAAqJ,OAAR,WACO,IAAM1J,EAAOf,KACnBe,EAAK8B,cAA8B,eAAI,SAAClB,GAAyBZ,EAAK+B,UAAU5B,KAAKS,IACrFZ,EAAKC,cAAcK,iBAAiB,UAAWN,EAAK8B,cAA8B,gBAElF9B,EAAK8B,cAA2B,YAAI,SAAClB,GAAyBZ,EAAKgC,OAAO7B,KAAKS,IAC/EZ,EAAKC,cAAcK,iBAAiB,OAAQN,EAAK8B,cAA2B,aAE5E9B,EAAK8B,cAA8B,eAAI,SAAClB,GAAyBZ,EAAKiC,UAAU9B,KAAKS,IACrFZ,EAAKC,cAAcK,iBAAiB,UAAWN,EAAK8B,cAA8B,gBAElF9B,EAAK8B,cAA4B,aAAI,SAAClB,GAAyBZ,EAAKkC,QAAQ/B,KAAKS,IACjFZ,EAAKC,cAAcK,iBAAiB,QAASN,EAAK8B,cAA4B,cAE9E9B,EAAK8B,cAA+B,gBAAI,SAAClB,GAAyBZ,EAAKmC,WAAWhC,KAAKS,IACvFZ,EAAKC,cAAcK,iBAAiB,WAAYN,EAAK8B,cAA+B,iBAEpF9B,EAAK8B,cAA8B,eAAI,SAAClB,GAAyBZ,EAAKoC,UAAUjC,KAAKS,IACrFZ,EAAKC,cAAcK,iBAAiB,UAAWN,EAAK8B,cAA8B,gBAElF9B,EAAK8B,cAAgC,iBAAI,SAAClB,GAAyBZ,EAAKqC,YAAYlC,KAAKS,IACzFZ,EAAKC,cAAcK,iBAAiB,YAAaN,EAAK8B,cAAgC,kBAEtF9B,EAAK8B,cAA6B,cAAI,SAAClB,GAAyBZ,EAAKsC,SAASnC,KAAKS,IACnFZ,EAAKC,cAAcK,iBAAiB,SAAUN,EAAK8B,cAA6B,eAEhF9B,EAAK8B,cAA+B,gBAAI,SAAClB,GAAyBZ,EAAKuC,WAAWpC,KAAKS,IACvFZ,EAAKC,cAAcK,iBAAiB,WAAYN,EAAK8B,cAA+B,iBAEpF9B,EAAK8B,cAA+B,gBAAI,SAAClB,GAAyBZ,EAAKwC,WAAWrC,KAAKS,IACvFZ,EAAKC,cAAcK,iBAAiB,WAAYN,EAAK8B,cAA+B,iBAEpF9B,EAAK8B,cAAgC,iBAAI,SAAClB,GAAyBZ,EAAKyC,YAAYtC,KAAKS,IACzFZ,EAAKC,cAAcK,iBAAiB,YAAaN,EAAK8B,cAAgC,kBAEtF9B,EAAK8B,cAAkC,mBAAI,SAAClB,GAAyBZ,EAAK0C,cAAcvC,KAAKS,IAC7FZ,EAAKC,cAAcK,iBAAiB,cAAeN,EAAK8B,cAAkC,oBAE1F9B,EAAK8B,cAA8B,eAAI,SAAClB,GAAyBZ,EAAK2C,UAAUxC,KAAKS,IACrFZ,EAAKC,cAAcK,iBAAiB,UAAWN,EAAK8B,cAA8B,iBAK3EH,EAAAtB,UAAAuJ,SAAR,WACoB3K,KACV6C,cAA8B,gBADpB7C,KAEbgB,cAAcS,oBAAoB,UAFrBzB,KAEqC6C,cAA8B,gBAFnE7C,KAKV6C,cAA2B,aALjB7C,KAMbgB,cAAcS,oBAAoB,OANrBzB,KAMkC6C,cAA2B,aAN7D7C,KASV6C,cAA8B,gBATpB7C,KAUbgB,cAAcS,oBAAoB,UAVrBzB,KAUqC6C,cAA8B,gBAVnE7C,KAaV6C,cAA4B,cAblB7C,KAcbgB,cAAcS,oBAAoB,QAdrBzB,KAcmC6C,cAA4B,cAd/D7C,KAiBV6C,cAA+B,iBAjBrB7C,KAkBbgB,cAAcS,oBAAoB,WAlBrBzB,KAkBsC6C,cAA+B,iBAlBrE7C,KAqBV6C,cAA8B,gBArBpB7C,KAsBbgB,cAAcS,oBAAoB,UAtBrBzB,KAsBqC6C,cAA8B,gBAtBnE7C,KAyBV6C,cAAgC,kBAzBtB7C,KA0BbgB,cAAcS,oBAAoB,YA1BrBzB,KA0BuC6C,cAAgC,kBA1BvE7C,KA6BV6C,cAA6B,eA7BnB7C,KA8BbgB,cAAcS,oBAAoB,SA9BrBzB,KA8BoC6C,cAA6B,eA9BjE7C,KAiCV6C,cAA+B,iBAjCrB7C,KAkCbgB,cAAcS,oBAAoB,WAlCrBzB,KAkCsC6C,cAA+B,iBAlCrE7C,KAqCV6C,cAA+B,iBArCrB7C,KAsCbgB,cAAcS,oBAAoB,WAtCrBzB,KAsCsC6C,cAA+B,iBAtCrE7C,KAyCV6C,cAAgC,kBAzCtB7C,KA0CbgB,cAAcS,oBAAoB,YA1CrBzB,KA0CuC6C,cAAgC,kBA1CvE7C,KA6CV6C,cAAkC,oBA7CxB7C,KA8CbgB,cAAcS,oBAAoB,cA9CrBzB,KA8CyC6C,cAAkC,oBA9C3E7C,KAiDV6C,cAA8B,gBAjDpB7C,KAkDbgB,cAAcS,oBAAoB,UAlDrBzB,KAkDqC6C,cAA8B,0DAzoCtEmI,EAAAA,cAoBjB3I,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,wCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,2CAUDF,EAAAA,CADCE,EAAAA,0CAUDF,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,8CAUDF,EAAAA,CADCE,EAAAA,wCAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,2CAUDF,EAAAA,CADCE,EAAAA,6CAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,0CAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,2CAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,kCAUDF,EAAAA,CADCE,EAAAA,2CAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,mCAUDF,EAAAA,CADCE,EAAAA,wCAUDF,EAAAA,CADCE,EAAAA,oCAUDF,EAAAA,CADCE,EAAAA,oCAUDF,EAAAA,CADCE,EAAAA,oCAUDF,EAAAA,CADCE,EAAAA,oDAUDF,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,mCAUDF,EAAAA,CADCE,EAAAA,iCAUDF,EAAAA,CADCE,EAAAA,iCAUDF,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,uCAUDF,EAAAA,CADCE,EAAAA,oCAUDF,EAAAA,CADCE,EAAAA,oCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,6CAUDF,EAAAA,CADCE,EAAAA,wCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,6CAUDF,EAAAA,CADCE,EAAAA,8CAUDF,EAAAA,CADCE,EAAAA,2CAUDF,EAAAA,CADCE,EAAAA,2CAUDF,EAAAA,CADCE,EAAAA,0CAUDF,EAAAA,CADCE,EAAAA,4CAUDF,EAAAA,CADCE,EAAAA,+CAUDF,EAAAA,CADCE,EAAAA,sCAUDF,EAAAA,CADCE,EAAAA,kCAUDF,EAAAA,CADCE,EAAAA,wCAUDF,EAAAA,CADCE,EAAAA,6CAUDF,EAAAA,CADCE,EAAAA,gDAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,sDAUDF,EAAAA,CADCE,EAAAA,gDAUDF,EAAAA,CADCE,EAAAA,mCAUDF,EAAAA,CADCE,EAAAA,yCAUDF,EAAAA,CADCE,EAAAA,mCAUDF,EAAAA,CADCE,EAAAA,0CAUDF,EAAAA,CADCE,EAAAA,kCAUSF,EAAAA,CAATC,EAAAA,0CAISD,EAAAA,CAATC,EAAAA,uCAISD,EAAAA,CAATC,EAAAA,0CAISD,EAAAA,CAATC,EAAAA,wCAISD,EAAAA,CAATC,EAAAA,2CAISD,EAAAA,CAATC,EAAAA,0CAISD,EAAAA,CAATC,EAAAA,4CAISD,EAAAA,CAATC,EAAAA,yCAISD,EAAAA,CAATC,EAAAA,2CAISD,EAAAA,CAATC,EAAAA,2CAISD,EAAAA,CAATC,EAAAA,4CAISD,EAAAA,CAATC,EAAAA,8CAISD,EAAAA,CAATC,EAAAA,0CAlrBWI,EAAe1F,EAAA,CAJ3BiO,EAAAA,UAAU,CACVC,SAAU,eAAgBC,SAAU,6LAGxBzI,IAAwBlC,gBCFrC,SAAA4K,KAA4B,OAAfA,EAAYpO,EAAA,CANxBqO,EAAAA,SAAS,CACNC,aAAc,CAAC5I,GAClB6I,QAAS,CAACC,EAAAA,wBACVC,QAAS,CAAC/I,MAGE0I","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Window } from './../index';\nimport { Animation, WindowAutoCapitalize, WindowDisplayMode, WindowDropPosition, WindowFooterPosition, TabPosition, WindowResizeMode, TabSelectionMode, WindowTabCloseButtonMode, Overflow, LayoutPosition, Orientation, WindowWrap, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, WindowAutoCapitalize, WindowDisplayMode, WindowDropPosition, WindowFooterPosition, TabPosition, WindowResizeMode, TabSelectionMode, WindowTabCloseButtonMode, Overflow, LayoutPosition, Orientation, WindowWrap, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Window } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-window',\tselector: 'smart-window, [smart-window], smart-tabs-window, smart-prompt-window, smart-multiline-prompt-window, smart-dialog-window,  smart-alert-window, smart-progress-window, smart-wait-window'\n})\n\nexport class WindowComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<Window>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Window;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Window;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Window>document.createElement('smart-window');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Determines if 'Add New' Tab inside the Tabs element is visible. Applicable only to TabsWindow */\n\t@Input()\n\tget addNewTab(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.addNewTab : undefined;\n\t}\n\tset addNewTab(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.addNewTab = value : undefined;\n\t}\n\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation | string {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation | string) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Determines whether and how the value should be automatically capitalized as it is entered/edited by the user. Applicable only to MultilinePromptWindow. */\n\t@Input()\n\tget autoCapitalize(): WindowAutoCapitalize | string {\n\t\treturn this.nativeElement ? this.nativeElement.autoCapitalize : undefined;\n\t}\n\tset autoCapitalize(value: WindowAutoCapitalize | string) {\n\t\tthis.nativeElement ? this.nativeElement.autoCapitalize = value : undefined;\n\t}\n\n\t/** @description Determines whether element will auto expand when the input overflows vertically. Applicable only to MultilinePromptWindow. */\n\t@Input()\n\tget autoExpand(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoExpand : undefined;\n\t}\n\tset autoExpand(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoExpand = value : undefined;\n\t}\n\n\t/** @description Determines the label for the 'cancel' button inside the Prompt Window. */\n\t@Input()\n\tget cancelLabel(): string {\n\t\treturn this.nativeElement ? this.nativeElement.cancelLabel : undefined;\n\t}\n\tset cancelLabel(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.cancelLabel = value : undefined;\n\t}\n\n\t/** @description Determines the label for the 'Complete' button insinde the Progress Window. */\n\t@Input()\n\tget completeLabel(): string {\n\t\treturn this.nativeElement ? this.nativeElement.completeLabel : undefined;\n\t}\n\tset completeLabel(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.completeLabel = value : undefined;\n\t}\n\n\t/** @description Determines the label for the 'Confirm' button insinde the Prompt Window. */\n\t@Input()\n\tget confirmLabel(): string {\n\t\treturn this.nativeElement ? this.nativeElement.confirmLabel : undefined;\n\t}\n\tset confirmLabel(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.confirmLabel = value : undefined;\n\t}\n\n\t/** @description Determines if the window is collapsed or not. When collapsed the only the header of the window is visible. */\n\t@Input()\n\tget collapsed(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.collapsed : undefined;\n\t}\n\tset collapsed(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.collapsed = value : undefined;\n\t}\n\n\t/** @description When a modal window is opened, thid property determines if clicking on the mask closes the window or not. */\n\t@Input()\n\tget closeOnMaskClick(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.closeOnMaskClick : undefined;\n\t}\n\tset closeOnMaskClick(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.closeOnMaskClick = value : undefined;\n\t}\n\n\t/** @description Determines the data source that will be loaded to the TabsWindow. Applicable only to TabsWindow. */\n\t@Input()\n\tget dataSource(): {label: string, content: string}[] {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: {label: string, content: string}[]) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Enables or disables the window. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Enables or disables the window snapping feature. */\n\t@Input()\n\tget disableSnap(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableSnap : undefined;\n\t}\n\tset disableSnap(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableSnap = value : undefined;\n\t}\n\n\t/** @description By default the window is closing after the 'Escape' key is pressed. Set this property to true, if you want to disable that. */\n\t@Input()\n\tget disableEscape(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableEscape : undefined;\n\t}\n\tset disableEscape(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableEscape = value : undefined;\n\t}\n\n\t/** @description By default the window is handling keyboard keys like 'Arrows', 'Escape', etc. Set this property to true, if you want to disable that. */\n\t@Input()\n\tget disableKeyboard(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableKeyboard : undefined;\n\t}\n\tset disableKeyboard(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableKeyboard = value : undefined;\n\t}\n\n\t/** @description Determines how the characters are displayed inside the input. Applicable to Prompt Window. */\n\t@Input()\n\tget displayMode(): WindowDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.displayMode : undefined;\n\t}\n\tset displayMode(value: WindowDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.displayMode = value : undefined;\n\t}\n\n\t/** @description Applicable to TabsWindow when docked inside a DockingLayout Custom Element.  Determines where the window(it's tab items as well) can be dropped inside the DockingLayout.  The property is an array that accepts multiple positions. Note: Positions with prefix 'layout-' are applied to the Tab item children of the TabsWidnow owner that is being dragged. The rest of the positions indicate the allowed drop position inside the hovered target(TabsWindow). Used only by jqxDockingLayout custom elements. Determines the possible drop position inside the DockingLayout. The following values are allowed. */\n\t@Input()\n\tget dropPosition(): WindowDropPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropPosition : undefined;\n\t}\n\tset dropPosition(value: WindowDropPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropPosition = value : undefined;\n\t}\n\n\t/** @description A callback function defining the new format for the label of the Progress Bar. Applicable only to ProgressWindow. */\n\t@Input()\n\tget formatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.formatFunction : undefined;\n\t}\n\tset formatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.formatFunction = value : undefined;\n\t}\n\n\t/** @description Determines the position of the footer of the window element. */\n\t@Input()\n\tget footerPosition(): WindowFooterPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.footerPosition : undefined;\n\t}\n\tset footerPosition(value: WindowFooterPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.footerPosition = value : undefined;\n\t}\n\n\t/** @description Determines the template for the Dialog section of the window. By default footerTemplate is null. */\n\t@Input()\n\tget footerTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.footerTemplate : undefined;\n\t}\n\tset footerTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.footerTemplate = value : undefined;\n\t}\n\n\t/** @description Set's the buttons that will be visible in the header section. */\n\t@Input()\n\tget headerButtons(): string[] {\n\t\treturn this.nativeElement ? this.nativeElement.headerButtons : undefined;\n\t}\n\tset headerButtons(value: string[]) {\n\t\tthis.nativeElement ? this.nativeElement.headerButtons = value : undefined;\n\t}\n\n\t/** @description Determines the template for the Dialog section of the window. By default headerTemplate is null. */\n\t@Input()\n\tget headerTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.headerTemplate : undefined;\n\t}\n\tset headerTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.headerTemplate = value : undefined;\n\t}\n\n\t/** @description Determines the position of the header of the window element. */\n\t@Input()\n\tget headerPosition(): TabPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.headerPosition : undefined;\n\t}\n\tset headerPosition(value: TabPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.headerPosition = value : undefined;\n\t}\n\n\t/** @description Sets additional helper text below the text box. The hint is visible only when the text box is focued. Applicable to Prompt Window. */\n\t@Input()\n\tget hint(): any {\n\t\treturn this.nativeElement ? this.nativeElement.hint : undefined;\n\t}\n\tset hint(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.hint = value : undefined;\n\t}\n\n\t/** @description Sets the value of the Progress bar to indeterminate state(null) and starts the animation. Applicable only to ProgressWindow. */\n\t@Input()\n\tget indeterminate(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.indeterminate : undefined;\n\t}\n\tset indeterminate(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.indeterminate = value : undefined;\n\t}\n\n\t/** @description Sets the filling direction of the Progress Bar. Applicable only to ProgressWindow. */\n\t@Input()\n\tget inverted(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.inverted : undefined;\n\t}\n\tset inverted(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.inverted = value : undefined;\n\t}\n\n\t/** @description The label of the window that appears in the header area. */\n\t@Input()\n\tget label(): string {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description When enabled the resizing operation happens live. By default it's not enabled and during resizing a highlighter around the edges of the window appears to outline  the current size of the element. */\n\t@Input()\n\tget liveResize(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.liveResize : undefined;\n\t}\n\tset liveResize(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.liveResize = value : undefined;\n\t}\n\n\t/** @description Applicable only to TabsWindow when used with a DockingLayout custom element.Used only by jqxDockingLayout. Determines the owner jqxDockingLayout  that the window belongs to. When the tabsWindow has been removed from a DockingLayout element, the property is used to indicate that it belongs to that particular Dockinglayout. Accepts a string, representing the ID of a jqxDockingLayout on the page, or an instance of jqxDokcingLayout. */\n\t@Input()\n\tget layout(): any {\n\t\treturn this.nativeElement ? this.nativeElement.layout : undefined;\n\t}\n\tset layout(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.layout = value : undefined;\n\t}\n\n\t/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Applicable only to TabsWindow when docked inside a DockingLayout Custom Element.Determines of the item can be resized or not. */\n\t@Input()\n\tget locked(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.locked : undefined;\n\t}\n\tset locked(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.locked = value : undefined;\n\t}\n\n\t/** @description Callback, related to localization module.  */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Determines if the window is maximized or not. When maximized the window covers the whole viewport. */\n\t@Input()\n\tget maximized(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.maximized : undefined;\n\t}\n\tset maximized(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.maximized = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Determines if the window is modal or not. If true the user can only interact with the window and nothing else on the page. */\n\t@Input()\n\tget modal(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.modal : undefined;\n\t}\n\tset modal(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.modal = value : undefined;\n\t}\n\n\t/** @description Applicable to TabsWindow when docked inside a DockingLayout Custom Element. Determines the max size of the item. Applicable to Progress Window by allowing the user to specify the maximum of the ProgressBar. */\n\t@Input()\n\tget max(): string | number | null {\n\t\treturn this.nativeElement ? this.nativeElement.max : undefined;\n\t}\n\tset max(value: string | number | null) {\n\t\tthis.nativeElement ? this.nativeElement.max = value : undefined;\n\t}\n\n\t/** @description Applicable to TabsWindow when docked inside DockingLayout Custom Element. Determines the min size of the item. Applicable to Progress Window by allowing the user to specify the minimu of the ProgressBar. */\n\t@Input()\n\tget min(): string | number | null {\n\t\treturn this.nativeElement ? this.nativeElement.min : undefined;\n\t}\n\tset min(value: string | number | null) {\n\t\tthis.nativeElement ? this.nativeElement.min = value : undefined;\n\t}\n\n\t/** @description Determines if the window is minimized or not. When minimized the window is docked at the bottom left corner of the viewport. */\n\t@Input()\n\tget minimized(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.minimized : undefined;\n\t}\n\tset minimized(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.minimized = value : undefined;\n\t}\n\n\t/** @description Sets or gets the maximum number of characters that the user can enter. Applicable to Prompt/MultilinePrompt Window. */\n\t@Input()\n\tget maxLength(): number {\n\t\treturn this.nativeElement ? this.nativeElement.maxLength : undefined;\n\t}\n\tset maxLength(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.maxLength = value : undefined;\n\t}\n\n\t/** @description Sets or gets the minimum number of characters that the user have to enter to trigger the auto complete functionality. Applicable to Prompt/MultilinePrompt Window. */\n\t@Input()\n\tget minLength(): number {\n\t\treturn this.nativeElement ? this.nativeElement.minLength : undefined;\n\t}\n\tset minLength(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.minLength = value : undefined;\n\t}\n\n\t/** @description Determines if the window is visible or not. */\n\t@Input()\n\tget opened(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.opened : undefined;\n\t}\n\tset opened(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.opened = value : undefined;\n\t}\n\n\t/** @description Determines if the window is pinned or not. Pinned window is a window that can't be dragged but can be resized. */\n\t@Input()\n\tget pinned(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.pinned : undefined;\n\t}\n\tset pinned(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.pinned = value : undefined;\n\t}\n\n\t/** @description Determines the input's placeholder. Applicable to Prompt Window. */\n\t@Input()\n\tget placeholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.placeholder : undefined;\n\t}\n\tset placeholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.placeholder = value : undefined;\n\t}\n\n\t/** @description Determines the label for the Input insinde the PromptWindow. */\n\t@Input()\n\tget promptLabel(): string {\n\t\treturn this.nativeElement ? this.nativeElement.promptLabel : undefined;\n\t}\n\tset promptLabel(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.promptLabel = value : undefined;\n\t}\n\n\t/** @description If the element is readonly, users cannot interact with it. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description When applied a resize indicator is displayed in the bottom right corner of the window and resizing operation can be initiated only from its position. */\n\t@Input()\n\tget resizeIndicator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.resizeIndicator : undefined;\n\t}\n\tset resizeIndicator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.resizeIndicator = value : undefined;\n\t}\n\n\t/** @description Determines the resizing mode of the window.  Several modes are available:   none - resizing is disabled.  vertical - vertical resizing is allowed.  horizontal - horizontal resizing is allowed. both - horizontal and vertical resizing is allowed. top - the window can only be resized from the top side. bottom - the window is resizable only from the bottom side. left - the window can be resized only from the left side. right - the window can be resized only from the right side.  */\n\t@Input()\n\tget resizeMode(): WindowResizeMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.resizeMode : undefined;\n\t}\n\tset resizeMode(value: WindowResizeMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.resizeMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Specifies that the user must fill the input before submitting a form with the text box.Applicable to Prompt Window. */\n\t@Input()\n\tget required(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.required : undefined;\n\t}\n\tset required(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.required = value : undefined;\n\t}\n\n\t/** @description Specifies the message that will appear if required is set and no value is provided in the input. Applicable to Prompt Window. */\n\t@Input()\n\tget requiredMessage(): string {\n\t\treturn this.nativeElement ? this.nativeElement.requiredMessage : undefined;\n\t}\n\tset requiredMessage(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.requiredMessage = value : undefined;\n\t}\n\n\t/** @description Determines whether the content of the input will be selected on focus or not. Applicable to Prompt Window. */\n\t@Input()\n\tget selectAllOnFocus(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.selectAllOnFocus : undefined;\n\t}\n\tset selectAllOnFocus(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.selectAllOnFocus = value : undefined;\n\t}\n\n\t/** @description Sets or gets which tab is selected. Applicable only to TabsWindow. */\n\t@Input()\n\tget selectedIndex(): number | null {\n\t\treturn this.nativeElement ? this.nativeElement.selectedIndex : undefined;\n\t}\n\tset selectedIndex(value: number | null) {\n\t\tthis.nativeElement ? this.nativeElement.selectedIndex = value : undefined;\n\t}\n\n\t/** @description Determines the way the user can switch between tabs. Applicable only to TabsWindow. */\n\t@Input()\n\tget selectionMode(): TabSelectionMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: TabSelectionMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description Indicates the index of the last character in the current selection. Applicable only to MultilinePromptWindow. */\n\t@Input()\n\tget selectionEnd(): number {\n\t\treturn this.nativeElement ? this.nativeElement.selectionEnd : undefined;\n\t}\n\tset selectionEnd(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.selectionEnd = value : undefined;\n\t}\n\n\t/** @description Indicates the index to the first character in the current selection. Applicable only to MultilinePromptWindow. */\n\t@Input()\n\tget selectionStart(): number {\n\t\treturn this.nativeElement ? this.nativeElement.selectionStart : undefined;\n\t}\n\tset selectionStart(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.selectionStart = value : undefined;\n\t}\n\n\t/** @description Enables/Disabled the label for the Progress Bar. Applicable only to Progress Window. */\n\t@Input()\n\tget showProgressValue(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.showProgressValue : undefined;\n\t}\n\tset showProgressValue(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.showProgressValue = value : undefined;\n\t}\n\n\t/** @description A getter that returns the siblings (that share the same parent) of a LayoutPanel item that is docked inside a DockingLayout. The siblings are also DockingLayout items ( LayoutPanels).Applicable only to TabsWindow when docked inside a DockingLayout. */\n\t@Input()\n\tget siblings(): any {\n\t\treturn this.nativeElement ? this.nativeElement.siblings : undefined;\n\t}\n\tset siblings(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.siblings = value : undefined;\n\t}\n\n\t/** @description Applicable to TabsWindow when nested inside a DockingLayout Custom Element. Determines the size of the item. */\n\t@Input()\n\tget size(): string {\n\t\treturn this.nativeElement ? this.nativeElement.size : undefined;\n\t}\n\tset size(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.size = value : undefined;\n\t}\n\n\t/** @description Specifies whether the element is to have its spelling and grammar checked or not. Applicable only to MultilinePromptWindow. */\n\t@Input()\n\tget spellCheck(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.spellCheck : undefined;\n\t}\n\tset spellCheck(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.spellCheck = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether close buttons are displayed inside the Tab Strip of the TabsWindow. Applicable only to TabsWindow. */\n\t@Input()\n\tget tabCloseButtons(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.tabCloseButtons : undefined;\n\t}\n\tset tabCloseButtons(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.tabCloseButtons = value : undefined;\n\t}\n\n\t/** @description Determines if the close button is visible on select or always. Applicable only to TabsWindow. */\n\t@Input()\n\tget tabCloseButtonMode(): WindowTabCloseButtonMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.tabCloseButtonMode : undefined;\n\t}\n\tset tabCloseButtonMode(value: WindowTabCloseButtonMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.tabCloseButtonMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the Tabs scroll buttons behavior. Applicable only when tabLayout is 'scroll'. Applicable only to TabsWindow. */\n\t@Input()\n\tget tabOverflow(): Overflow | string {\n\t\treturn this.nativeElement ? this.nativeElement.tabOverflow : undefined;\n\t}\n\tset tabOverflow(value: Overflow | string) {\n\t\tthis.nativeElement ? this.nativeElement.tabOverflow = value : undefined;\n\t}\n\n\t/** @description Detetmines Tab Strip is positioned of the TabsWindow. Applicable only to TabsWindow. */\n\t@Input()\n\tget tabPosition(): TabPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.tabPosition : undefined;\n\t}\n\tset tabPosition(value: TabPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.tabPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets the position of the scroll buttons inside the Tab header of the TabsWindow. Applicable only to TabsWindow. */\n\t@Input()\n\tget tabScrollButtonsPosition(): LayoutPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.tabScrollButtonsPosition : undefined;\n\t}\n\tset tabScrollButtonsPosition(value: LayoutPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.tabScrollButtonsPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets the orientation of the text in the tabs labels of the TabsWindow. Applicable only to TabsWindow. */\n\t@Input()\n\tget tabTextOrientation(): Orientation | string {\n\t\treturn this.nativeElement ? this.nativeElement.tabTextOrientation : undefined;\n\t}\n\tset tabTextOrientation(value: Orientation | string) {\n\t\tthis.nativeElement ? this.nativeElement.tabTextOrientation = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description If is set to true, the element cannot be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description Determines the value of the TextBox/ProgressBar inside the Dialog/Prompt/Progress Window */\n\t@Input()\n\tget value(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description Determines the actual parent of the element. The window can size and move only in the area of that element. */\n\t@Input()\n\tget windowParent(): any {\n\t\treturn this.nativeElement ? this.nativeElement.windowParent : undefined;\n\t}\n\tset windowParent(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.windowParent = value : undefined;\n\t}\n\n\t/** @description Indicates how the input wraps text. Applicable only to MultilinePromptWindow. */\n\t@Input()\n\tget wrap(): WindowWrap | string {\n\t\treturn this.nativeElement ? this.nativeElement.wrap : undefined;\n\t}\n\tset wrap(value: WindowWrap | string) {\n\t\tthis.nativeElement ? this.nativeElement.wrap = value : undefined;\n\t}\n\n\t/** @description This event is triggered just before the window starts opening.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is opened( visible ).\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered just before the window starts closing.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is closed( hidden )\n\t*  @param event. The custom event. \t*/\n\t@Output() onClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is collapsed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onCollapse: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when window's dragging is ended.\n\t*  @param event. The custom event. \t*/\n\t@Output() onDragEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when window's dragging is started.\n\t*  @param event. The custom event. \t*/\n\t@Output() onDragStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is expanded.\n\t*  @param event. The custom event. \t*/\n\t@Output() onExpand: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is maximized.\n\t*  @param event. The custom event. \t*/\n\t@Output() onMaximize: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is minimized.\n\t*  @param event. The custom event. \t*/\n\t@Output() onMinimize: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when window's resizing is ended.\n\t*  @param event. The custom event. \t*/\n\t@Output() onResizeEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when window's resizing is started.\n\t*  @param event. The custom event. \t*/\n\t@Output() onResizeStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the window is restored to it's previous state before maximization.\n\t*  @param event. The custom event. \t*/\n\t@Output() onRestore: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Appends a tabitem to the end of the list of tab items inside element. \n\t* @param {Node} node. A TabItem element that should be added to the rest of the items as the last item.\n\t* @returns {Node}\n  */\n\tpublic async appendChild(node): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.appendChild(node);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Sets the window to the top level so the user can interact with it. \n\t*/\n    public bringToFront(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.bringToFront();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.bringToFront();\n            });\n        }\n    }\n\n\t/** @description Clears the content of the Window. \n\t*/\n    public clear(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.clear();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.clear();\n            });\n        }\n    }\n\n\t/** @description Closes the window. \n\t*/\n    public close(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.close();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.close();\n            });\n        }\n    }\n\n\t/** @description Collapses the window. \n\t* @returns {HTMLElement}\n  */\n\tpublic async collapse(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.collapse();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Makes sure a tab item is visible by scrolling to it. Applicable only to TabsWindow. \n\t* @param {number} index. The index of the tab to scroll to.\n\t*/\n    public ensureVisible(index: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.ensureVisible(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.ensureVisible(index);\n            });\n        }\n    }\n\n\t/** @description Expands the window after being collapsed. \n\t* @returns {any[]}\n  */\n\tpublic async expand(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.expand();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Inserts a new tab and an associated content section. Applicable only to TabsWindow. \n\t* @param {number} index. The index to insert a new tab at.\n\t* @param {any} details. An Object with the fields \"label\", \"labelSize\", \"content\" and \"group\".\n\t*/\n    public insert(index: number, details: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.insert(index, details);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.insert(index, details);\n            });\n        }\n    }\n\n\t/** @description Inserts the specified \"smart-tab-item\" node before the reference \"smart-tab-item\" node. Applicable only to TabsWindow. \n\t* @param {Node} newNode. The \"smart-tab-item\" node to insert.\n\t* @param {Node | null} referenceNode?. The \"smart-tab-item\" node before which newNode is inserted.\n\t* @returns {Node}\n  */\n\tpublic async insertBefore(newNode, referenceNode?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.insertBefore(newNode, referenceNode);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Moves the window to a new position \n\t* @param {string | number} left. Left position. For example: '100px'. \n\t* @param {string | number} top. Top position. For example: '100px'. \n\t*/\n    public move(left: string | number, top: string | number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.move(left, top);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.move(left, top);\n            });\n        }\n    }\n\n\t/** @description Maximizes the window to fill the area. \n\t*/\n    public maximize(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.maximize();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.maximize();\n            });\n        }\n    }\n\n\t/** @description Minimizes the window. \n\t*/\n    public minimize(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.minimize();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.minimize();\n            });\n        }\n    }\n\n\t/** @description Opens the window \n\t*/\n    public open(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.open();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.open();\n            });\n        }\n    }\n\n\t/** @description Pins the window. Disables window dragging. \n\t*/\n    public pin(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.pin();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.pin();\n            });\n        }\n    }\n\n\t/** @description Removes a tab and its associated content section. Applicable only to TabsWindow. \n\t* @param {number} index. The index of the tab to remove.\n\t*/\n    public removeAt(index: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeAt(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeAt(index);\n            });\n        }\n    }\n\n\t/** @description Removes a child \"smart-tab-item\" node. Applicable only to TabsWindow. \n\t* @param {Node} node. The \"smart-tab-item\" node to remove.\n\t* @returns {Node}\n  */\n\tpublic async removeChild(node): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.removeChild(node);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Restores the window to it's previous size before maximization/minimization. \n\t*/\n    public restore(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.restore();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.restore();\n            });\n        }\n    }\n\n\t/** @description Selects a tab.  Applicalbe only to TabsWindow elements. \n\t* @param {number} index. The index of the tab to select.\n\t*/\n    public select(index: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.select(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.select(index);\n            });\n        }\n    }\n\n\t/** @description Unpins the window. Enables window dragging. \n\t*/\n    public unpin(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unpin();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unpin();\n            });\n        }\n    }\n\n\t/** @description Updates the header label. \n\t* @param {string} label. The new label of the Header.\n\t*/\n    public updateLabel(label: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateLabel(label);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateLabel(label);\n            });\n        }\n    }\n\n\t/** @description Updates the content. \n\t* @param {string | HTMLElement} content. The new content of the window.\n\t*/\n    public updateContent(content: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateContent(content);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateContent(content);\n            });\n        }\n    }\n\n\t/** @description Updates a TAB in TAB Window and its associated content section.  Applies only to TabsWindow elements. \n\t* @param {number} index. The index of the tab to update.\n\t* @param {string} label. The new label of the tab. The value can be the id of an HTMLTemplateElement\n\t* @param {string | HTMLElement} content. The new content of the tab.\n\t*/\n    public update(index: number, label: string, content: string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.update(index, label, content);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.update(index, label, content);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['openingHandler'] = (event: CustomEvent) => { that.onOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('opening', that.eventHandlers['openingHandler']);\n\n\t\tthat.eventHandlers['openHandler'] = (event: CustomEvent) => { that.onOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('open', that.eventHandlers['openHandler']);\n\n\t\tthat.eventHandlers['closingHandler'] = (event: CustomEvent) => { that.onClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('closing', that.eventHandlers['closingHandler']);\n\n\t\tthat.eventHandlers['closeHandler'] = (event: CustomEvent) => { that.onClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('close', that.eventHandlers['closeHandler']);\n\n\t\tthat.eventHandlers['collapseHandler'] = (event: CustomEvent) => { that.onCollapse.emit(event); }\n\t\tthat.nativeElement.addEventListener('collapse', that.eventHandlers['collapseHandler']);\n\n\t\tthat.eventHandlers['dragEndHandler'] = (event: CustomEvent) => { that.onDragEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\n\t\tthat.eventHandlers['dragStartHandler'] = (event: CustomEvent) => { that.onDragStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\n\t\tthat.eventHandlers['expandHandler'] = (event: CustomEvent) => { that.onExpand.emit(event); }\n\t\tthat.nativeElement.addEventListener('expand', that.eventHandlers['expandHandler']);\n\n\t\tthat.eventHandlers['maximizeHandler'] = (event: CustomEvent) => { that.onMaximize.emit(event); }\n\t\tthat.nativeElement.addEventListener('maximize', that.eventHandlers['maximizeHandler']);\n\n\t\tthat.eventHandlers['minimizeHandler'] = (event: CustomEvent) => { that.onMinimize.emit(event); }\n\t\tthat.nativeElement.addEventListener('minimize', that.eventHandlers['minimizeHandler']);\n\n\t\tthat.eventHandlers['resizeEndHandler'] = (event: CustomEvent) => { that.onResizeEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\n\t\tthat.eventHandlers['resizeStartHandler'] = (event: CustomEvent) => { that.onResizeStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\n\t\tthat.eventHandlers['restoreHandler'] = (event: CustomEvent) => { that.onRestore.emit(event); }\n\t\tthat.nativeElement.addEventListener('restore', that.eventHandlers['restoreHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['openingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('opening', that.eventHandlers['openingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('open', that.eventHandlers['openHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('closing', that.eventHandlers['closingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('close', that.eventHandlers['closeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['collapseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('collapse', that.eventHandlers['collapseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['expandHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('expand', that.eventHandlers['expandHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['maximizeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('maximize', that.eventHandlers['maximizeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['minimizeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('minimize', that.eventHandlers['minimizeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['restoreHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('restore', that.eventHandlers['restoreHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { WindowComponent } from './smart.window';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [WindowComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [WindowComponent]\n})\n\nexport class WindowModule { }\n"]}