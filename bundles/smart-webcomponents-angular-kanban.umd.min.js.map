{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/kanban/smart.element.ts","ng://smart-webcomponents-angular/kanban/smart.kanban.ts","ng://smart-webcomponents-angular/kanban/smart.kanban.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","KanbanComponent","_this","_super","eventHandlers","onChange","onClose","onClosing","onColumnAdd","onColumnRemove","onColumnReorder","onColumnUpdate","onColumnClick","onColumnDoubleClick","onDragEnd","onDragging","onDragStart","onFilter","onOpen","onOpening","onSort","onTaskAdd","onTaskRemove","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","allowColumnReorder","allowColumnEdit","allowColumnRemove","addNewButton","addNewColumn","allowDrag","allowDrop","animation","autoLoadState","autoSaveState","collapsible","columns","columnActions","columnEditMode","currentUser","dataSource","dataSourceMap","dragOffset","editable","formatStringDate","formatStringTime","headerPosition","hierarchy","selectionMode","swimlanes","swimlanesFrom","swimlanesTo","tags","taskActions","taskComments","taskDue","taskPosition","taskPriority","taskProgress","taskTags","taskUserIcon","textTemplate","userList","users","addFilter","filters","operator","isRendered","whenRendered","addSort","dataFields","orderBy","addTask","data","addColumn","beginEdit","task","cancelEdit","closePanel","collapse","column","copyTask","endEdit","ensureVisible","getResultOnRender","_a","expand","expandAll","exportData","dataFormat","fileName","callback","getState","loadState","state","moveTask","newStatus","openCustomizePanel","openFilterPanel","openSortPanel","removeFilter","removeSort","removeTask","prompt","removeColumn","dataField","saveState","updateTask","newData","updateColumn","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","onfilterHandler","ElementRef","Directive","selector","KanbanModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Kanban } from './../index';\nimport { Animation, KanbanColumnOrientation, KanbanColumnEditMode, KanbanDataSourcePriority, KanbanHeaderPosition, KanbanHierarchy, KanbanSelectionMode, KanbanTaskPosition, KanbanColumn, KanbanDataSource, KanbanSwimlane, KanbanUser, ElementRenderMode} from './../index';\nimport { DataAdapter } from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, KanbanColumnOrientation, KanbanColumnEditMode, KanbanDataSourcePriority, KanbanHeaderPosition, KanbanHierarchy, KanbanSelectionMode, KanbanTaskPosition, KanbanColumn, KanbanDataSource, KanbanSwimlane, KanbanUser, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Kanban } from './../index';\nexport { DataAdapter } from './../index';\n\n\n@Directive({\n\tselector: 'smart-kanban, [smart-kanban]'\n})\n\nexport class KanbanComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<Kanban>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Kanban;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Kanban;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Kanban>document.createElement('smart-kanban');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Enables or disables column reordering. When this property is set to true and allowDrag is enabled, users will be able to reoder columns through drag & drop. For example: Click and drag the first column's header and drop it over another column. */\n\t@Input()\n\tget allowColumnReorder(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnReorder : undefined;\n\t}\n\tset allowColumnReorder(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnReorder = value : undefined;\n\t}\n\n\t/** @description Enables or disables column editing. When this property is set to true, users will be able to dynamically change the column's header label by double clicking on it. */\n\t@Input()\n\tget allowColumnEdit(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnEdit : undefined;\n\t}\n\tset allowColumnEdit(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnEdit = value : undefined;\n\t}\n\n\t/** @description Enables or disables column removing. When this property is set to true, users will be able to dynamically remove a column through the column actions menu. the 'columnActions' property should be true. */\n\t@Input()\n\tget allowColumnRemove(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowColumnRemove : undefined;\n\t}\n\tset allowColumnRemove(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowColumnRemove = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the column buttons for adding tasks. A particular button can be disabled by setting addNewButton in the column's definition to false. */\n\t@Input()\n\tget addNewButton(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.addNewButton : undefined;\n\t}\n\tset addNewButton(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.addNewButton = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether a column with a button for adding new status columns to the Kanban will be displayed. */\n\t@Input()\n\tget addNewColumn(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.addNewColumn : undefined;\n\t}\n\tset addNewColumn(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.addNewColumn = value : undefined;\n\t}\n\n\t/** @description Allows the dragging of tasks. */\n\t@Input()\n\tget allowDrag(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowDrag : undefined;\n\t}\n\tset allowDrag(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowDrag = value : undefined;\n\t}\n\n\t/** @description Allows the dropping of tasks. */\n\t@Input()\n\tget allowDrop(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.allowDrop : undefined;\n\t}\n\tset allowDrop(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.allowDrop = value : undefined;\n\t}\n\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto load state from the browser's localStorage. Information about tasks and their position and selected state, filtering, sorting, collapsed columns, as well as the values of the properties taskActions, taskComments, taskDue, taskPriority, taskProgress, taskTags, and taskUserIcon is loaded. */\n\t@Input()\n\tget autoLoadState(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoLoadState : undefined;\n\t}\n\tset autoLoadState(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoLoadState = value : undefined;\n\t}\n\n\t/** @description Enables or disables auto save state to the browser's localStorage. Information about tasks and their position and selected state, filtering, sorting, collapsed columns, as well as the values of the properties taskActions, taskComments, taskDue, taskPriority, taskProgress, taskTags, and taskUserIcon is saved. */\n\t@Input()\n\tget autoSaveState(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.autoSaveState : undefined;\n\t}\n\tset autoSaveState(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.autoSaveState = value : undefined;\n\t}\n\n\t/** @description Allows collapsing the card content. */\n\t@Input()\n\tget collapsible(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.collapsible : undefined;\n\t}\n\tset collapsible(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.collapsible = value : undefined;\n\t}\n\n\t/** @description Describes the columns properties. */\n\t@Input()\n\tget columns(): KanbanColumn[] {\n\t\treturn this.nativeElement ? this.nativeElement.columns : undefined;\n\t}\n\tset columns(value: KanbanColumn[]) {\n\t\tthis.nativeElement ? this.nativeElement.columns = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the column actions icon. */\n\t@Input()\n\tget columnActions(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.columnActions : undefined;\n\t}\n\tset columnActions(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.columnActions = value : undefined;\n\t}\n\n\t/** @description Determines the column edit behavior. With the 'header' option, edit starts on double click on the column's label. In 'menu' mode, edit is allowed from the 'columnActions' menu. In 'headerAndMenu' option, column editing includes both options. */\n\t@Input()\n\tget columnEditMode(): KanbanColumnEditMode {\n\t\treturn this.nativeElement ? this.nativeElement.columnEditMode : undefined;\n\t}\n\tset columnEditMode(value: KanbanColumnEditMode) {\n\t\tthis.nativeElement ? this.nativeElement.columnEditMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the id of the current user. Has to correspond to the id of an item from the users property/array. Depending on the current user, different privileges are enabled. If no current user is set, privileges depend on the element's properties. */\n\t@Input()\n\tget currentUser(): string | number {\n\t\treturn this.nativeElement ? this.nativeElement.currentUser : undefined;\n\t}\n\tset currentUser(value: string | number) {\n\t\tthis.nativeElement ? this.nativeElement.currentUser = value : undefined;\n\t}\n\n\t/** @description Determines the data source to be visualized in the kanban board. */\n\t@Input()\n\tget dataSource(): KanbanDataSource[] {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: KanbanDataSource[]) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description Determines the the relation (mapping) between the Kanban's default fields (keywords) and the data fields from the data source. Not necessary if both match. Only some of the default mapping can be overwritten. */\n\t@Input()\n\tget dataSourceMap(): { checklist: string; color: string; comments: string; dueDate: string; id: string; priority: string; progress: string; startDate: string; status: string; swimlane: string; tags: string; text: string; userId: string; } {\n\t\treturn this.nativeElement ? this.nativeElement.dataSourceMap : undefined;\n\t}\n\tset dataSourceMap(value: { checklist: string; color: string; comments: string; dueDate: string; id: string; priority: string; progress: string; startDate: string; status: string; swimlane: string; tags: string; text: string; userId: string; }) {\n\t\tthis.nativeElement ? this.nativeElement.dataSourceMap = value : undefined;\n\t}\n\n\t/** @description Determines the offset of the drag feedback element from the mouse cursor when dragging tasks. The first member of the array is the horizontal offset and the second one - the vertical offset. If set to 'auto', the offset is based on the mouse position when the dragging started. */\n\t@Input()\n\tget dragOffset(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.dragOffset : undefined;\n\t}\n\tset dragOffset(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.dragOffset = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether tasks can be edited (including the assigning of users to tasks). */\n\t@Input()\n\tget editable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.editable : undefined;\n\t}\n\tset editable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.editable = value : undefined;\n\t}\n\n\t/** @description Sets or gets the format string of the \"Due date\" label and the \"Start date\" and \"Due date\" editors. */\n\t@Input()\n\tget formatStringDate(): string {\n\t\treturn this.nativeElement ? this.nativeElement.formatStringDate : undefined;\n\t}\n\tset formatStringDate(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.formatStringDate = value : undefined;\n\t}\n\n\t/** @description Sets or gets the format string of comments time stamp. */\n\t@Input()\n\tget formatStringTime(): string {\n\t\treturn this.nativeElement ? this.nativeElement.formatStringTime : undefined;\n\t}\n\tset formatStringTime(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.formatStringTime = value : undefined;\n\t}\n\n\t/** @description Sets or gets the header position. The header contains the Customize, Filter, Sort, and Search buttons. */\n\t@Input()\n\tget headerPosition(): KanbanHeaderPosition {\n\t\treturn this.nativeElement ? this.nativeElement.headerPosition : undefined;\n\t}\n\tset headerPosition(value: KanbanHeaderPosition) {\n\t\tthis.nativeElement ? this.nativeElement.headerPosition = value : undefined;\n\t}\n\n\t/** @description Sets or gets the way column hierarchy is represented. */\n\t@Input()\n\tget hierarchy(): KanbanHierarchy {\n\t\treturn this.nativeElement ? this.nativeElement.hierarchy : undefined;\n\t}\n\tset hierarchy(value: KanbanHierarchy) {\n\t\tthis.nativeElement ? this.nativeElement.hierarchy = value : undefined;\n\t}\n\n\t/** @description Sets or gets the locale. Used in conjunction with the property messages. */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Determines selection mode. */\n\t@Input()\n\tget selectionMode(): KanbanSelectionMode {\n\t\treturn this.nativeElement ? this.nativeElement.selectionMode : undefined;\n\t}\n\tset selectionMode(value: KanbanSelectionMode) {\n\t\tthis.nativeElement ? this.nativeElement.selectionMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Describes the swimlanes in the kanban board. Sub-columns are not applicable when swimlanes are present. */\n\t@Input()\n\tget swimlanes(): KanbanSwimlane[] {\n\t\treturn this.nativeElement ? this.nativeElement.swimlanes : undefined;\n\t}\n\tset swimlanes(value: KanbanSwimlane[]) {\n\t\tthis.nativeElement ? this.nativeElement.swimlanes = value : undefined;\n\t}\n\n\t/** @description Sets or gets the index of the column at which to start the swimlanes. */\n\t@Input()\n\tget swimlanesFrom(): number {\n\t\treturn this.nativeElement ? this.nativeElement.swimlanesFrom : undefined;\n\t}\n\tset swimlanesFrom(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.swimlanesFrom = value : undefined;\n\t}\n\n\t/** @description Sets or gets the index of the column at which to end the swimlanes. By default, swimlanes end at the last column. */\n\t@Input()\n\tget swimlanesTo(): number {\n\t\treturn this.nativeElement ? this.nativeElement.swimlanesTo : undefined;\n\t}\n\tset swimlanesTo(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.swimlanesTo = value : undefined;\n\t}\n\n\t/** @description Sets or gets the allowed tags. If no tags are listed, all tags from the data source are allowed. */\n\t@Input()\n\tget tags(): any[] {\n\t\treturn this.nativeElement ? this.nativeElement.tags : undefined;\n\t}\n\tset tags(value: any[]) {\n\t\tthis.nativeElement ? this.nativeElement.tags = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task actions icon. */\n\t@Input()\n\tget taskActions(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskActions : undefined;\n\t}\n\tset taskActions(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskActions = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task comments icon. */\n\t@Input()\n\tget taskComments(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskComments : undefined;\n\t}\n\tset taskComments(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskComments = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task due icon. */\n\t@Input()\n\tget taskDue(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskDue : undefined;\n\t}\n\tset taskDue(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskDue = value : undefined;\n\t}\n\n\t/** @description Sets or gets whether tasks can be shown in all levels of column hierarchy or only on leaf columns. */\n\t@Input()\n\tget taskPosition(): KanbanTaskPosition {\n\t\treturn this.nativeElement ? this.nativeElement.taskPosition : undefined;\n\t}\n\tset taskPosition(value: KanbanTaskPosition) {\n\t\tthis.nativeElement ? this.nativeElement.taskPosition = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task priority icon (shown when priority is low or high). */\n\t@Input()\n\tget taskPriority(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskPriority : undefined;\n\t}\n\tset taskPriority(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskPriority = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of task progress bar and the completed sub-tasks label. */\n\t@Input()\n\tget taskProgress(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskProgress : undefined;\n\t}\n\tset taskProgress(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskProgress = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of task tags. */\n\t@Input()\n\tget taskTags(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskTags : undefined;\n\t}\n\tset taskTags(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskTags = value : undefined;\n\t}\n\n\t/** @description Toggles the visibility of the task user icon. */\n\t@Input()\n\tget taskUserIcon(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.taskUserIcon : undefined;\n\t}\n\tset taskUserIcon(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.taskUserIcon = value : undefined;\n\t}\n\n\t/** @description Sets or gets a template to be applied to task text. Can be a string beginning with # and referencing the id of a template element on the page. Can also be a function that modifies the task text or the template itself. Finally, it can also be a string that will be parsed. */\n\t@Input()\n\tget textTemplate(): any {\n\t\treturn this.nativeElement ? this.nativeElement.textTemplate : undefined;\n\t}\n\tset textTemplate(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.textTemplate = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Determines whether the user list (as defined by the users property) will be shown when clicking the user icon. Only applicable if editable privileges are enabled. */\n\t@Input()\n\tget userList(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.userList : undefined;\n\t}\n\tset userList(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.userList = value : undefined;\n\t}\n\n\t/** @description Determines the users Kanban tasks can be assigned to and their characteristics and privileges. */\n\t@Input()\n\tget users(): KanbanUser[] {\n\t\treturn this.nativeElement ? this.nativeElement.users : undefined;\n\t}\n\tset users(value: KanbanUser[]) {\n\t\tthis.nativeElement ? this.nativeElement.users = value : undefined;\n\t}\n\n\t/** @description This event is triggered when a task has been updated.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \ttask, \tvalue)\n\t*   oldValue - The old data of the task\n\t*   task - The HTML element of the task whose data has been changed\n\t*   value - The new data of the task\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is closed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is about to be closed. The closing operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is added.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnAdd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is removed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnRemove: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is reordered.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldIndex, \tindex, \tcolumn)\n\t*   oldIndex - The column's old index.\n\t*   index - The column's new index.\n\t*   column - The column's data object with 'label', 'dataField' and 'collapsed' fields.\n\t*/\n\t@Output() onColumnReorder: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column is updated.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnUpdate: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column header is clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a column header is double clicked.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tlabel, \tdataField, \tcollapsed)\n\t*   label - The column label.\n\t*   dataField - The column data field.\n\t*   collapsed - The column's collapsed state.\n\t*/\n\t@Output() onColumnDoubleClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is dropped somewhere in the DOM. The dragging operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcontainer, \tdata, \titem, \titems, \toriginalEvent, \tpreviousContainer, \ttarget)\n\t*   container - the Kanban the dragged task(s) is dropped to\n\t*   data - an object with additional drag details\n\t*   item - the task that is dragged; if multiple tasks are dragged, this is the task that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged tasks\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*   previousContainer - the Kanban the dragged item(s) is dragged from\n\t*   target - the element the dragged tasks are dropped to\n\t*/\n\t@Output() onDragEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user is dragging a task.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tdata, \titem, \titems, \toriginalEvent)\n\t*   data - an object with additional drag details\n\t*   item - the task that is dragged; if multiple tasks are dragged, this is the task that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged tasks\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*/\n\t@Output() onDragging: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the user starts dragging task(s). The dragging operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcontainer, \tdata, \titem, \titems, \toriginalEvent, \tpreviousContainer)\n\t*   container - the Kanban the dragged task(s) is dragged from\n\t*   data - an object with additional drag details\n\t*   item - the task that is dragged; if multiple tasks are dragged, this is the task that has been clicked when initiating the drag operation\n\t*   items - an array with all dragged tasks\n\t*   originalEvent - the original, browser, event that initiates the drag operation\n\t*   previousContainer - the Kanban the dragged item(s) is dragged from\n\t*/\n\t@Output() onDragStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a filter has been applied.\n\t*  @param event. The custom event. \t*/\n\t@Output() onFilter: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is opened.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the edit/prompt dialog is about to be opened. The opening operation can be canceled by calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tcomment, \tpurpose, \ttask)\n\t*   comment - The comment that is about to be removed (if applicable).\n\t*   purpose - The purpose of the dialog to be opened - <em>'edit'</em> or <em>'prompt'</em>.\n\t*   task - The task that is about to be edited or removed (if applicable).\n\t*/\n\t@Output() onOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when sorting has been applied.\n\t*  @param event. The custom event. \t*/\n\t@Output() onSort: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a new task is added.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue)\n\t*   value - The task data that is added to the Kanban.\n\t*/\n\t@Output() onTaskAdd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when a task is removed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue)\n\t*   value - The task data that is removed from the Kanban.\n\t*/\n\t@Output() onTaskRemove: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Adds filtering \n\t* @param {string[]} filters. Filter information\n\t* @param {string} operator?. Logical operator between the filters of different fields\n\t*/\n    public addFilter(filters: string[], operator?: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addFilter(filters, operator);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addFilter(filters, operator);\n            });\n        }\n    }\n\n\t/** @description Adds sorting \n\t* @param {[] | string} dataFields. The data field(s) to sort by\n\t* @param {[] | string} orderBy. The sort direction(s) to sort the data field(s) by\n\t*/\n    public addSort(dataFields: [] | string, orderBy: [] | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addSort(dataFields, orderBy);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addSort(dataFields, orderBy);\n            });\n        }\n    }\n\n\t/** @description Adds a task to a Kanban column. If no data is specified, an empty task is added to the first column. \n\t* @param {any} data?. An object containing the new task's data\n\t*/\n    public addTask(data?: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addTask(data);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addTask(data);\n            });\n        }\n    }\n\n\t/** @description Adds a column to a Kanban. If no data is specified, an empty column is added. \n\t* @param {any} data?. An object containing the new column's data\n\t*/\n    public addColumn(data?: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.addColumn(data);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.addColumn(data);\n            });\n        }\n    }\n\n\t/** @description Begins an edit operation \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t*/\n    public beginEdit(task: number | string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.beginEdit(task);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.beginEdit(task);\n            });\n        }\n    }\n\n\t/** @description Ends the current edit operation and discards changes \n\t*/\n    public cancelEdit(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.cancelEdit();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.cancelEdit();\n            });\n        }\n    }\n\n\t/** @description Closes any open header panel (drop down) \n\t*/\n    public closePanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.closePanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.closePanel();\n            });\n        }\n    }\n\n\t/** @description Collapses a Kanban column. \n\t* @param {number | string} column. The index or dataField of the column to collapse\n\t*/\n    public collapse(column: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapse(column);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapse(column);\n            });\n        }\n    }\n\n\t/** @description Creates a copy of a task in the same column. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t*/\n    public copyTask(task: number | string | HTMLElement): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.copyTask(task);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.copyTask(task);\n            });\n        }\n    }\n\n\t/** @description Ends the current edit operation and saves changes \n\t*/\n    public endEdit(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.endEdit();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.endEdit();\n            });\n        }\n    }\n\n\t/** @description Makes sure a task is visible by scrolling to it. If succcessful, the method returns the HTML element of the task. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @returns {HTMLElement}\n  */\n\tpublic async ensureVisible(task): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.ensureVisible(task);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Expands a Kanban column. \n\t* @param {number | string} column. The index or dataField of the column to expand\n\t*/\n    public expand(column: number | string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expand(column);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expand(column);\n            });\n        }\n    }\n\n\t/** @description Expands all Kanban columns. \n\t*/\n    public expandAll(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expandAll();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expandAll();\n            });\n        }\n    }\n\n\t/** @description Exports the Kanban's data. \n\t* @param {string} dataFormat. The file format to export to. Supported formats: 'csv', 'html', 'json', 'pdf', 'tsv', 'xlsx', 'xml'.\n\t* @param {string} fileName?. The name of the file to export to\n\t* @param {Function} callback?. A callback function to pass the exported data to (if fileName is not provided)\n\t* @returns {any}\n  */\n\tpublic async exportData(dataFormat, fileName?, callback?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.exportData(dataFormat, fileName, callback);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Gets the Kanban's state. \n\t* @returns {{ collapsed: {}, dataSource: [], filtering: { filters: [], operator: string }, selection: { selected: [], selectionStart: number | string, selectionInColumn: string, swimlane: string }, sorting: { dataFields: [], dataTypes: [], orderBy: [] }, tabs: [], visibility: { taskActions: boolean, taskComments: boolean, taskDue: boolean, taskPriority: boolean, taskProgress: boolean, taskTags: boolean, taskUserIcon: boolean } }}\n  */\n\tpublic async getState(): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.getState();\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Loads the Kanban's state. \n\t* @param {{ collapsed: {}, dataSource: [], filtering: { filters: [], operator: string }, selection: { selected: [], selectionStart?: number | string, selectionInColumn: string, swimlane: string }, sorting: { dataFields: [], dataTypes: [], orderBy: [] }, tabs: [], visibility: { taskActions: boolean, taskComments: boolean, taskDue: boolean, taskPriority: boolean, taskProgress: boolean, taskTags: boolean, taskUserIcon: boolean } }} state?. An object returned by one of the methods getState or saveState. If not passed, gets saved state from the browser's localStorage.\n\t*/\n    public loadState(state?: { collapsed: {}, dataSource: [], filtering: { filters: [], operator: string }, selection: { selected: [], selectionStart?: number | string, selectionInColumn: string, swimlane: string }, sorting: { dataFields: [], dataTypes: [], orderBy: [] }, tabs: [], visibility: { taskActions: boolean, taskComments: boolean, taskDue: boolean, taskPriority: boolean, taskProgress: boolean, taskTags: boolean, taskUserIcon: boolean } }): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.loadState(state);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.loadState(state);\n            });\n        }\n    }\n\n\t/** @description Moves a task to a different column. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @param {string} newStatus. The new status of the task (its new column's dataField)\n\t*/\n    public moveTask(task: number | string | HTMLElement, newStatus: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.moveTask(task, newStatus);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.moveTask(task, newStatus);\n            });\n        }\n    }\n\n\t/** @description Opens the \"Customize tasks\" header panel (drop down) \n\t*/\n    public openCustomizePanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openCustomizePanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openCustomizePanel();\n            });\n        }\n    }\n\n\t/** @description Opens the \"Filter\" header panel (drop down) \n\t*/\n    public openFilterPanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openFilterPanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openFilterPanel();\n            });\n        }\n    }\n\n\t/** @description Opens the \"Sort\" header panel (drop down) \n\t*/\n    public openSortPanel(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.openSortPanel();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.openSortPanel();\n            });\n        }\n    }\n\n\t/** @description Removes filtering \n\t*/\n    public removeFilter(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeFilter();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeFilter();\n            });\n        }\n    }\n\n\t/** @description Removes sorting \n\t*/\n    public removeSort(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeSort();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeSort();\n            });\n        }\n    }\n\n\t/** @description Removes a task. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @param {boolean} prompt?. Whether or not to prompt the user before removing the task\n\t*/\n    public removeTask(task: number | string | HTMLElement, prompt?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeTask(task, prompt);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeTask(task, prompt);\n            });\n        }\n    }\n\n\t/** @description Removes a column. \n\t* @param {string} dataField. The column's data field\n\t*/\n    public removeColumn(dataField: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeColumn(dataField);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeColumn(dataField);\n            });\n        }\n    }\n\n\t/** @description Saves the Kanban's state to the browser's localStorage. \n\t*/\n    public saveState(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.saveState();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.saveState();\n            });\n        }\n    }\n\n\t/** @description Updates a task. \n\t* @param {number | string | HTMLElement} task. The task's id or corresponding HTMLElement\n\t* @param {{}} newData. The new data to visualize in the task.\n\t*/\n    public updateTask(task: number | string | HTMLElement, newData: {}): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateTask(task, newData);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateTask(task, newData);\n            });\n        }\n    }\n\n\t/** @description Updates a column. \n\t* @param {string} dataField. The new column's data field\n\t* @param {{}} newData. The new data to visualize in the column.\n\t*/\n    public updateColumn(dataField: string, newData: {}): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.updateColumn(dataField, newData);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.updateColumn(dataField, newData);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['closeHandler'] = (event: CustomEvent) => { that.onClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('close', that.eventHandlers['closeHandler']);\n\n\t\tthat.eventHandlers['closingHandler'] = (event: CustomEvent) => { that.onClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('closing', that.eventHandlers['closingHandler']);\n\n\t\tthat.eventHandlers['columnAddHandler'] = (event: CustomEvent) => { that.onColumnAdd.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnAdd', that.eventHandlers['columnAddHandler']);\n\n\t\tthat.eventHandlers['columnRemoveHandler'] = (event: CustomEvent) => { that.onColumnRemove.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnRemove', that.eventHandlers['columnRemoveHandler']);\n\n\t\tthat.eventHandlers['columnReorderHandler'] = (event: CustomEvent) => { that.onColumnReorder.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnReorder', that.eventHandlers['columnReorderHandler']);\n\n\t\tthat.eventHandlers['columnUpdateHandler'] = (event: CustomEvent) => { that.onColumnUpdate.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnUpdate', that.eventHandlers['columnUpdateHandler']);\n\n\t\tthat.eventHandlers['columnClickHandler'] = (event: CustomEvent) => { that.onColumnClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnClick', that.eventHandlers['columnClickHandler']);\n\n\t\tthat.eventHandlers['columnDoubleClickHandler'] = (event: CustomEvent) => { that.onColumnDoubleClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('columnDoubleClick', that.eventHandlers['columnDoubleClickHandler']);\n\n\t\tthat.eventHandlers['dragEndHandler'] = (event: CustomEvent) => { that.onDragEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\n\t\tthat.eventHandlers['draggingHandler'] = (event: CustomEvent) => { that.onDragging.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragging', that.eventHandlers['draggingHandler']);\n\n\t\tthat.eventHandlers['dragStartHandler'] = (event: CustomEvent) => { that.onDragStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\n\t\tthat.eventHandlers['filterHandler'] = (event: CustomEvent) => { that.onFilter.emit(event); }\n\t\tthat.nativeElement.addEventListener('filter', that.eventHandlers['filterHandler']);\n\n\t\tthat.eventHandlers['openHandler'] = (event: CustomEvent) => { that.onOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('open', that.eventHandlers['openHandler']);\n\n\t\tthat.eventHandlers['openingHandler'] = (event: CustomEvent) => { that.onOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('opening', that.eventHandlers['openingHandler']);\n\n\t\tthat.eventHandlers['sortHandler'] = (event: CustomEvent) => { that.onSort.emit(event); }\n\t\tthat.nativeElement.addEventListener('sort', that.eventHandlers['sortHandler']);\n\n\t\tthat.eventHandlers['taskAddHandler'] = (event: CustomEvent) => { that.onTaskAdd.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskAdd', that.eventHandlers['taskAddHandler']);\n\n\t\tthat.eventHandlers['taskRemoveHandler'] = (event: CustomEvent) => { that.onTaskRemove.emit(event); }\n\t\tthat.nativeElement.addEventListener('taskRemove', that.eventHandlers['taskRemoveHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('close', that.eventHandlers['closeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('closing', that.eventHandlers['closingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnAddHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnAdd', that.eventHandlers['columnAddHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnRemoveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnRemove', that.eventHandlers['columnRemoveHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnReorderHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnReorder', that.eventHandlers['columnReorderHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnUpdateHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnUpdate', that.eventHandlers['columnUpdateHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnClick', that.eventHandlers['columnClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['columnDoubleClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('columnDoubleClick', that.eventHandlers['columnDoubleClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragEnd', that.eventHandlers['dragEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['draggingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragging', that.eventHandlers['draggingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dragStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dragStart', that.eventHandlers['dragStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['filterHandler']) {\n\t\t\tthat.nativeElement.onfilterHandler = null;\n\t\t}\n\n\t\tif (that.eventHandlers['openHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('open', that.eventHandlers['openHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('opening', that.eventHandlers['openingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['sortHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('sort', that.eventHandlers['sortHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskAddHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskAdd', that.eventHandlers['taskAddHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['taskRemoveHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('taskRemove', that.eventHandlers['taskRemoveHandler']);\n\t\t}\n\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { KanbanComponent } from './smart.kanban';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [KanbanComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [KanbanComponent]\n})\n\nexport class KanbanModule { }\n"]}