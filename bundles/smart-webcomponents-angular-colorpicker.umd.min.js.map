{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/colorpicker/smart.element.ts","ng://smart-webcomponents-angular/colorpicker/smart.colorpicker.ts","ng://smart-webcomponents-angular/colorpicker/smart.colorpicker.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","BaseElement","ref","this","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","prototype","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","value","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ColorPickerComponent","multi","_super","_this","call","eventHandlers","_onChange","_onTouched","onActionButtonClick","onCancelButtonClick","onChange","onClose","onClosing","onCustomColorSelection","onDropDownButtonClick","onOkButtonClick","onOpen","onOpening","onResizeStart","onResizeEnd","_initialChange","__","constructor","create","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","animation","editable","autoCloseDelay","applyValueMode","columnCount","displayMode","disabled","disableUndo","dropDownAppendTo","dropDownOpenMode","dropDownButtonPosition","dropDownPosition","dropDownHeight","dropDownOverlay","dropDownWidth","editAlphaChannel","enableCustomColors","gridThemeColors","gridShadeColors","gridStandardColors","hideAlphaEditor","hideContentToFit","hideHEXEditor","hidePreviewContainer","hideRGBEditor","hint","inverted","label","name","opened","palette","paletteColors","paletteCustomColors","placeholder","readonly","resizeIndicator","resizeMode","tooltipDisplayMode","unfocusable","valueFormat","valueDisplayMode","open","isRendered","whenRendered","close","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","writeValue","normalizedValue","registerOnChange","fn","registerOnTouched","ngOnChanges","changes","propName","currentValue","querySelector","setTimeout","ElementRef","Directive","exportAs","selector","providers","ColorPickerModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { ColorPicker } from './../index';\nimport { Animation, ColorApplyValueMode, ColorDisplayMode, DropDownOpenMode, DropDownButtonPosition, DropDownPosition, ColorPalette, ResizeMode, ColorTooltipDisplayMode, ColorValueFormat, ColorValueDisplayMode, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, forwardRef, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, ColorApplyValueMode, ColorDisplayMode, DropDownOpenMode, DropDownButtonPosition, DropDownPosition, ColorPalette, ResizeMode, ColorTooltipDisplayMode, ColorValueFormat, ColorValueDisplayMode, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { ColorPicker } from './../index';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n\nconst CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ColorPickerComponent),\n    multi: true\n}\n\n@Directive({\n\texportAs: 'smart-color-picker',\tselector: 'smart-color-picker, [smart-color-picker]',\n\tproviders: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n\n})\n\nexport class ColorPickerComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges, ControlValueAccessor {\n\tconstructor(ref: ElementRef<ColorPicker>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as ColorPicker;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: ColorPicker;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <ColorPicker>document.createElement('smart-color-picker');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n        /**\n        * @description\n        * The registered callback function called when a change event occurs on the form elements.\n        */\n       _onChange: (value: any) => void = () => {};\n        /**\n        * @description\n        * The registered callback function called when a blur event occurs on the form elements.\n        */\n       _onTouched: () => any = () => {};\n\n\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation | string {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation | string) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description This property allows editting of colors via the input inside the element's action section. Accepts values in all supported types. This property works when 'valueDisplayMode' is set to default or colorCode. */\n\t@Input()\n\tget editable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.editable : undefined;\n\t}\n\tset editable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.editable = value : undefined;\n\t}\n\n\t/** @description Determines the delay before the opened drop down closes when dropDownOpenMode is set to 'auto'. */\n\t@Input()\n\tget autoCloseDelay(): number {\n\t\treturn this.nativeElement ? this.nativeElement.autoCloseDelay : undefined;\n\t}\n\tset autoCloseDelay(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.autoCloseDelay = value : undefined;\n\t}\n\n\t/** @description Specifies how the user applies the selected value. In 'instantly' mode the value is applied immediately when color is selected. In 'useButtons' mode are shown 'Ok' and 'Cancel' buttons at the botom of the colorpicker's drop down. Only click on 'OK' button applies the value. */\n\t@Input()\n\tget applyValueMode(): ColorApplyValueMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.applyValueMode : undefined;\n\t}\n\tset applyValueMode(value: ColorApplyValueMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.applyValueMode = value : undefined;\n\t}\n\n\t/** @description Defines the number of columns for the colors in displayModes 'grid', 'hexagonal' and 'spectrumGrid'. */\n\t@Input()\n\tget columnCount(): number {\n\t\treturn this.nativeElement ? this.nativeElement.columnCount : undefined;\n\t}\n\tset columnCount(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.columnCount = value : undefined;\n\t}\n\n\t/** @description Determines the colors that will be displayed and their layout. */\n\t@Input()\n\tget displayMode(): ColorDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.displayMode : undefined;\n\t}\n\tset displayMode(value: ColorDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.displayMode = value : undefined;\n\t}\n\n\t/** @description Enables or disables the element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description By default clicking on color panel's preview container returns the color value to it's previous state. 'disableUndo' prevents this functionality. */\n\t@Input()\n\tget disableUndo(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disableUndo : undefined;\n\t}\n\tset disableUndo(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disableUndo = value : undefined;\n\t}\n\n\t/** @description Sets the parent container of the dropDown (the popup). The expected value is CSS Selector, ID or 'body'. Used when a CSS property of unknowned parent is interfering with the visibility of the dropDown. Example: 'body'. */\n\t@Input()\n\tget dropDownAppendTo(): string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownAppendTo : undefined;\n\t}\n\tset dropDownAppendTo(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownAppendTo = value : undefined;\n\t}\n\n\t/** @description Determines how the drop down is going to open. */\n\t@Input()\n\tget dropDownOpenMode(): DropDownOpenMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownOpenMode : undefined;\n\t}\n\tset dropDownOpenMode(value: DropDownOpenMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownOpenMode = value : undefined;\n\t}\n\n\t/** @description Determines the position of the drop down button. */\n\t@Input()\n\tget dropDownButtonPosition(): DropDownButtonPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownButtonPosition : undefined;\n\t}\n\tset dropDownButtonPosition(value: DropDownButtonPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownButtonPosition = value : undefined;\n\t}\n\n\t/** @description Determines the vertical position of the dropDown. 'Auto' means its automatically determined depending on the viewport size. */\n\t@Input()\n\tget dropDownPosition(): DropDownPosition | string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownPosition : undefined;\n\t}\n\tset dropDownPosition(value: DropDownPosition | string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownPosition = value : undefined;\n\t}\n\n\t/** @description Sets the height of the drop down. Default value of null means that CSS variables are used. This property should be used when the browser doesn not support CSS variables. */\n\t@Input()\n\tget dropDownHeight(): string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownHeight : undefined;\n\t}\n\tset dropDownHeight(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownHeight = value : undefined;\n\t}\n\n\t/** @description If this property is enabled, when the element's dropdown is opened, a transparent overlay is positioned between the dropdown and the rest of the document. */\n\t@Input()\n\tget dropDownOverlay(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownOverlay : undefined;\n\t}\n\tset dropDownOverlay(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownOverlay = value : undefined;\n\t}\n\n\t/** @description Sets the width of the drop down. Default value of null means that CSS variables are used. This property should be used when the browser doesn't support CSS variables. */\n\t@Input()\n\tget dropDownWidth(): string {\n\t\treturn this.nativeElement ? this.nativeElement.dropDownWidth : undefined;\n\t}\n\tset dropDownWidth(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.dropDownWidth = value : undefined;\n\t}\n\n\t/** @description Allows to edit the alpha(transparency) of the colors via an editor/slider in the following displayModes: 'palette', 'radial', 'hexagonal' */\n\t@Input()\n\tget editAlphaChannel(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.editAlphaChannel : undefined;\n\t}\n\tset editAlphaChannel(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.editAlphaChannel = value : undefined;\n\t}\n\n\t/** @description Allows to select a custom color via an editor popup. Custom color selection is available in modes that don't have this option by default, like: 'grid', 'default, 'spectrum grid'. */\n\t@Input()\n\tget enableCustomColors(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.enableCustomColors : undefined;\n\t}\n\tset enableCustomColors(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.enableCustomColors = value : undefined;\n\t}\n\n\t/** @description Defines an Array of colors that will be used as the Theme Colors in the corresponding section of displayMode: 'grid' and 'default'. */\n\t@Input()\n\tget gridThemeColors(): string[] | null {\n\t\treturn this.nativeElement ? this.nativeElement.gridThemeColors : undefined;\n\t}\n\tset gridThemeColors(value: string[] | null) {\n\t\tthis.nativeElement ? this.nativeElement.gridThemeColors = value : undefined;\n\t}\n\n\t/** @description Defines an Array of colors that will be used as the Shade Colors in the corresponding section of displayMode: 'grid' and 'default'. */\n\t@Input()\n\tget gridShadeColors(): string[] | null {\n\t\treturn this.nativeElement ? this.nativeElement.gridShadeColors : undefined;\n\t}\n\tset gridShadeColors(value: string[] | null) {\n\t\tthis.nativeElement ? this.nativeElement.gridShadeColors = value : undefined;\n\t}\n\n\t/** @description Defines an Array of colors that will be used as the Standart Colors in the corresponding section of displayMode: 'grid' and 'default'. */\n\t@Input()\n\tget gridStandardColors(): string[] | null {\n\t\treturn this.nativeElement ? this.nativeElement.gridStandardColors : undefined;\n\t}\n\tset gridStandardColors(value: string[] | null) {\n\t\tthis.nativeElement ? this.nativeElement.gridStandardColors = value : undefined;\n\t}\n\n\t/** @description Hides the alpha editor. Alpha editor is an input containing the value of the current color opacity. The input is available in the following modes: 'radial', 'palette', 'hexagonal'. The input is only visible if there's enough space. This editor is visible by default. */\n\t@Input()\n\tget hideAlphaEditor(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideAlphaEditor : undefined;\n\t}\n\tset hideAlphaEditor(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideAlphaEditor = value : undefined;\n\t}\n\n\t/** @description Determines which color editors will be hidden first when there's not enough space for all of them to be visible. By default the editors are only visible in 'palette', 'radial' and 'hexagonal' display modes. This property allows to prioritize the visibility of the editors. */\n\t@Input()\n\tget hideContentToFit(): string[] {\n\t\treturn this.nativeElement ? this.nativeElement.hideContentToFit : undefined;\n\t}\n\tset hideContentToFit(value: string[]) {\n\t\tthis.nativeElement ? this.nativeElement.hideContentToFit = value : undefined;\n\t}\n\n\t/** @description HEX editor is an input containing the hexadecimal representation of a color. This editor is visible by default. Setting 'hideRGBeditor' to true hides it. */\n\t@Input()\n\tget hideHEXEditor(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideHEXEditor : undefined;\n\t}\n\tset hideHEXEditor(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideHEXEditor = value : undefined;\n\t}\n\n\t/** @description Hides the preview container. Preview container is used to show the currently selected value in 'palette', 'radial' and 'hexagonal' display modes. */\n\t@Input()\n\tget hidePreviewContainer(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hidePreviewContainer : undefined;\n\t}\n\tset hidePreviewContainer(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hidePreviewContainer = value : undefined;\n\t}\n\n\t/** @description Hides the RGB editor. This editor is a group of three separate inputs for the Red, Green and Blue values of the color. */\n\t@Input()\n\tget hideRGBEditor(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.hideRGBEditor : undefined;\n\t}\n\tset hideRGBEditor(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.hideRGBEditor = value : undefined;\n\t}\n\n\t/** @description Sets additional helper text below the element that is only visible when the element is focused. */\n\t@Input()\n\tget hint(): string {\n\t\treturn this.nativeElement ? this.nativeElement.hint : undefined;\n\t}\n\tset hint(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.hint = value : undefined;\n\t}\n\n\t/** @description Inverts the colors in 'spectrumGrid', 'hexagonal', 'radial' modes. */\n\t@Input()\n\tget inverted(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.inverted : undefined;\n\t}\n\tset inverted(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.inverted = value : undefined;\n\t}\n\n\t/** @description Sets a label above the element. */\n\t@Input()\n\tget label(): string {\n\t\treturn this.nativeElement ? this.nativeElement.label : undefined;\n\t}\n\tset label(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.label = value : undefined;\n\t}\n\n\t/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the name attribute for the element. Name is used when submiting HTML forms. */\n\t@Input()\n\tget name(): string {\n\t\treturn this.nativeElement ? this.nativeElement.name : undefined;\n\t}\n\tset name(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.name = value : undefined;\n\t}\n\n\t/** @description Determines whether the popup is opened or closed */\n\t@Input()\n\tget opened(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.opened : undefined;\n\t}\n\tset opened(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.opened = value : undefined;\n\t}\n\n\t/** @description Determines what colors will be displayed in 'spectrumGrid', 'grid' and 'hexagonal' displayModes. */\n\t@Input()\n\tget palette(): ColorPalette | string {\n\t\treturn this.nativeElement ? this.nativeElement.palette : undefined;\n\t}\n\tset palette(value: ColorPalette | string) {\n\t\tthis.nativeElement ? this.nativeElement.palette = value : undefined;\n\t}\n\n\t/** @description Defines an array of colors that form a custom palette. This palette can be used in displayModes 'grid' and 'spectrum grid' if the palette property is set to custom. The value of the property can be an array of strings or objects that contain valid colors ( HEX, RGBA, etc). */\n\t@Input()\n\tget paletteColors(): {name: string, value: string}[] | string[] | null {\n\t\treturn this.nativeElement ? this.nativeElement.paletteColors : undefined;\n\t}\n\tset paletteColors(value: {name: string, value: string}[] | string[] | null) {\n\t\tthis.nativeElement ? this.nativeElement.paletteColors = value : undefined;\n\t}\n\n\t/** @description Defines an array of colors that represent a predefined list of custom colors. This palette can be used in displayModes 'grid', 'default' and 'spectrum grid'. Custom colors are displayed at the bottom of the color grid below the button for custom color selection. They are only visible if enableCustomColor property is true. */\n\t@Input()\n\tget paletteCustomColors(): string[] | null {\n\t\treturn this.nativeElement ? this.nativeElement.paletteCustomColors : undefined;\n\t}\n\tset paletteCustomColors(value: string[] | null) {\n\t\tthis.nativeElement ? this.nativeElement.paletteCustomColors = value : undefined;\n\t}\n\n\t/** @description The placeholder is shown when the value is not set yet or is set to null. */\n\t@Input()\n\tget placeholder(): string {\n\t\treturn this.nativeElement ? this.nativeElement.placeholder : undefined;\n\t}\n\tset placeholder(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.placeholder = value : undefined;\n\t}\n\n\t/** @description Disables user interaction with the element. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description Determines whether the resize indicator in the bottom right corner of the drop down is visible or not. This property is used in conjunction with resizeMode. */\n\t@Input()\n\tget resizeIndicator(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.resizeIndicator : undefined;\n\t}\n\tset resizeIndicator(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.resizeIndicator = value : undefined;\n\t}\n\n\t/** @description Determines whether the dropDown can be resized or not. When resizing is enabled, a resize bar appears on the top/bottom side of the drop down. */\n\t@Input()\n\tget resizeMode(): ResizeMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.resizeMode : undefined;\n\t}\n\tset resizeMode(value: ResizeMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.resizeMode = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description Determines how the tooltip displays the value of the color that is being hovered. */\n\t@Input()\n\tget tooltipDisplayMode(): ColorTooltipDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.tooltipDisplayMode : undefined;\n\t}\n\tset tooltipDisplayMode(value: ColorTooltipDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.tooltipDisplayMode = value : undefined;\n\t}\n\n\t/** @description If is set to true, the element cannot be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description Represents the value of the selected color as the value of the element. */\n\t@Input()\n\tget value(): string {\n\t\treturn this.nativeElement ? this.nativeElement.value : undefined;\n\t}\n\tset value(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.value = value : undefined;\n\t}\n\n\t/** @description Determines the format of the color. Whether it's in HEX, RGB or RGBA. By default it shows the color depending on the displayMode. */\n\t@Input()\n\tget valueFormat(): ColorValueFormat | string {\n\t\treturn this.nativeElement ? this.nativeElement.valueFormat : undefined;\n\t}\n\tset valueFormat(value: ColorValueFormat | string) {\n\t\tthis.nativeElement ? this.nativeElement.valueFormat = value : undefined;\n\t}\n\n\t/** @description Determines which elements will be displayed in color picker's action section. */\n\t@Input()\n\tget valueDisplayMode(): ColorValueDisplayMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.valueDisplayMode : undefined;\n\t}\n\tset valueDisplayMode(value: ColorValueDisplayMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.valueDisplayMode = value : undefined;\n\t}\n\n\t/** @description This event is triggered when user clicks on the action button. 'Ok' button is visible only when applyValueMode is set to useButtons.\n\t*  @param event. The custom event. \t*/\n\t@Output() onActionButtonClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the cancel button is clicked. 'Cancel' button is visible only when applyValueMode is set to useButtons.\n\t*  @param event. The custom event. \t*/\n\t@Output() onCancelButtonClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the color value is changed.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\toldValue, \tvalue)\n\t*   oldValue - The previously selected color.\n\t*   value - The new selected color.\n\t*/\n\t@Output() onChange: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down is closed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClose: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down is about to be closed. This event allows to cancel the closing operation calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onClosing: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the custom color selection view is opened/closed. Custom color selection view is available when enableCustomColors property is true.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tvalue)\n\t*   value - A boolean that indicates whether the custom color view is shown or not.\n\t*/\n\t@Output() onCustomColorSelection: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when user clicks on the drop down button.\n\t*  @param event. The custom event. \t*/\n\t@Output() onDropDownButtonClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the ok button is clicked.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOkButtonClick: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down is opened.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpen: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the drop down is about to be opened. This event allows to cancel the opening operation calling event.preventDefault() in the event handler function.\n\t*  @param event. The custom event. \t*/\n\t@Output() onOpening: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when user starts resizing the drop down.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tposition)\n\t*   position - An object containing the current left and top positions of the drop down.\n\t*/\n\t@Output() onResizeStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when the resizing of the drop down is finished.\n\t*  @param event. The custom event. \tCustom event was created with: event.detail(\tposition)\n\t*   position - An object containing the current left and top positions of the drop down.\n\t*/\n\t@Output() onResizeEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Opens the drop down of the color picker. \n\t*/\n    public open(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.open();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.open();\n            });\n        }\n    }\n\n\t/** @description Closes the drop down of the color picker. \n\t*/\n    public close(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.close();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.close();\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\t_initialChange = true; \n\n\tget ngValue(): any {\n\t\tif (!this.nativeElement) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst value = this.nativeElement.value;\n\t\treturn value;\n\t}\n\n\tset ngValue(value: any) {\n\t\tif (this.nativeElement) {\n\t\t    this.writeValue(value);\n\t\t}\n\t}\n\n\twriteValue(value: any): void {\n        const that = this;\n        const normalizedValue = value == null ? '' : value;\n\n\t\tthat.nativeElement.whenRendered(() => {\n\t\t\tthat.value = normalizedValue;\n\t\t\tif (that._initialChange === false) {\n\t    \t\tthat._onChange(that.value);\n            }\n\t\t});\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis._onChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any): void {\n\t\tthis._onTouched = fn;\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['actionButtonClickHandler'] = (event: CustomEvent) => { that.onActionButtonClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('actionButtonClick', that.eventHandlers['actionButtonClickHandler']);\n\n\t\tthat.eventHandlers['cancelButtonClickHandler'] = (event: CustomEvent) => { that.onCancelButtonClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('cancelButtonClick', that.eventHandlers['cancelButtonClickHandler']);\n\n\t\tthat.eventHandlers['changeHandler'] = (event: CustomEvent) => { that.onChange.emit(event); }\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeHandler']);\n\n\t\tthat.eventHandlers['closeHandler'] = (event: CustomEvent) => { that.onClose.emit(event); }\n\t\tthat.nativeElement.addEventListener('close', that.eventHandlers['closeHandler']);\n\n\t\tthat.eventHandlers['closingHandler'] = (event: CustomEvent) => { that.onClosing.emit(event); }\n\t\tthat.nativeElement.addEventListener('closing', that.eventHandlers['closingHandler']);\n\n\t\tthat.eventHandlers['customColorSelectionHandler'] = (event: CustomEvent) => { that.onCustomColorSelection.emit(event); }\n\t\tthat.nativeElement.addEventListener('customColorSelection', that.eventHandlers['customColorSelectionHandler']);\n\n\t\tthat.eventHandlers['dropDownButtonClickHandler'] = (event: CustomEvent) => { that.onDropDownButtonClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('dropDownButtonClick', that.eventHandlers['dropDownButtonClickHandler']);\n\n\t\tthat.eventHandlers['okButtonClickHandler'] = (event: CustomEvent) => { that.onOkButtonClick.emit(event); }\n\t\tthat.nativeElement.addEventListener('okButtonClick', that.eventHandlers['okButtonClickHandler']);\n\n\t\tthat.eventHandlers['openHandler'] = (event: CustomEvent) => { that.onOpen.emit(event); }\n\t\tthat.nativeElement.addEventListener('open', that.eventHandlers['openHandler']);\n\n\t\tthat.eventHandlers['openingHandler'] = (event: CustomEvent) => { that.onOpening.emit(event); }\n\t\tthat.nativeElement.addEventListener('opening', that.eventHandlers['openingHandler']);\n\n\t\tthat.eventHandlers['resizeStartHandler'] = (event: CustomEvent) => { that.onResizeStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\n\t\tthat.eventHandlers['resizeEndHandler'] = (event: CustomEvent) => { that.onResizeEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\n\n        that.eventHandlers['changeModelHandler'] = (event: Event) => {\n            that._initialChange = false;\n            that._onChange(that.nativeElement.value);\n        };\n        that.eventHandlers['blurModelHandler'] = (event: Event) => {\n            that._onTouched();\n        };\n        that.nativeElement.whenRendered(() => {\n            if (that.nativeElement.querySelector('input')) {\n                that.eventHandlers['keyupModelHandler'] = (event) => {\n                    setTimeout(() => { that.eventHandlers['changeModelHandler'](event); }, 50);\n                };\n\n                that.nativeElement.querySelector('input').addEventListener('keyup', that.eventHandlers['keyupModelHandler']);\n            }\n        });\n\t\tthat.nativeElement.addEventListener('change', that.eventHandlers['changeModelHandler']);\n\t\tthat.nativeElement.addEventListener('blur', that.eventHandlers['blurModelHandler']);\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['actionButtonClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('actionButtonClick', that.eventHandlers['actionButtonClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['cancelButtonClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('cancelButtonClick', that.eventHandlers['cancelButtonClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closeHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('close', that.eventHandlers['closeHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['closingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('closing', that.eventHandlers['closingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['customColorSelectionHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('customColorSelection', that.eventHandlers['customColorSelectionHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['dropDownButtonClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('dropDownButtonClick', that.eventHandlers['dropDownButtonClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['okButtonClickHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('okButtonClick', that.eventHandlers['okButtonClickHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('open', that.eventHandlers['openHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['openingHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('opening', that.eventHandlers['openingHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['changeModelHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('change', that.eventHandlers['changeModelHandler']);\n            if (that.nativeElement.querySelector('input')) {\n                  that.nativeElement.querySelector('input').removeEventListener('keyup', that.eventHandlers['keyupModelHandler']);\n            }\n\t\t}\n\t\tif (that.eventHandlers['blurModelHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('blur', that.eventHandlers['blurModelHandler']);\n\t\t}\n\t}\n}\n","import { NgModule } from '@angular/core';\n\nimport { ColorPickerComponent } from './smart.colorpicker';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\n\n@NgModule({\n    declarations: [ColorPickerComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [ColorPickerComponent]\n})\n\nexport class ColorPickerModule { }\n"]}