{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://smart-webcomponents-angular/splitter/smart.element.ts","ng://smart-webcomponents-angular/splitter/smart.splitter.ts","ng://smart-webcomponents-angular/splitter/smart.splitteritem.ts","ng://smart-webcomponents-angular/splitter/smart.splitterbar.ts","ng://smart-webcomponents-angular/splitter/smart.splitter.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","BaseElement","ref","onCreate","EventEmitter","onReady","onAttach","onDetach","that","nativeElement","onAttached","emit","onDetached","addEventListener","type","listener","options","removeEventListener","dispatchEvent","event","blur","click","focus","locale","undefined","localizeFormatFunction","messages","rightToLeft","theme","tslib_1.__decorate","Output","Input","Smart","window","SplitterComponent","_this","_super","eventHandlers","onCollapse","onExpand","onResizeStart","onResizeEnd","tslib_1.__extends","createComponent","properties","propertyName","document","createElement","animation","autoFitMode","disabled","dataSource","items","keepProportionsOnResize","orientation","readonly","resizeMode","resizeStep","liveResize","unfocusable","appendChild","node","isRendered","whenRendered","collapse","item","far","expand","hideBar","splitterBar","getResultOnRender","_a","insert","index","details","insertBefore","newNode","referenceNode","lockItem","lockBar","removeAt","removeAll","removeChild","refresh","showBar","unlockItem","unlockBar","update","settings","ngOnInit","ngAfterViewInit","Render","classList","add","listen","ngOnDestroy","unlisten","ngOnChanges","changes","propName","currentValue","ElementRef","Directive","exportAs","selector","SplitterItemComponent","collapsed","collapsible","content","locked","max","min","size","lock","unlock","SplitterBarComponent","hide","show","SplitterModule","NgModule","declarations","schemas","CUSTOM_ELEMENTS_SCHEMA","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\ndeclare global {\n    interface Window {\n        Smart: any;\n}\n}\n\n\nimport { ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { ElementRenderMode } from './../index';\n\nexport class BaseElement {\n    constructor(ref: ElementRef) {\n        const that = this;\n        this.nativeElement = ref.nativeElement as any;\n\n        that.nativeElement.onAttached = () => {\n            that.onAttach.emit(that.nativeElement);\n        }\n\n        that.nativeElement.onDetached = () => {\n            that.onDetach.emit(that.nativeElement);\n        }\n    }\n\n    @Output() onCreate: EventEmitter<any> = new EventEmitter();\n    @Output() onReady: EventEmitter<any> = new EventEmitter();\n    @Output() onAttach: EventEmitter<any> = new EventEmitter();\n    @Output() onDetach: EventEmitter<any> = new EventEmitter();\n\n    public nativeElement: any;\n\n    public addEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n        this.nativeElement.addEventListener(type, listener, options);\n\t}\n\n\tpublic removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions = false): void {\n\t\tthis.nativeElement.removeEventListener(type, listener, options);\n\t}\n\n\tpublic dispatchEvent(event: Event): boolean {\n\t\treturn this.nativeElement.dispatchEvent(event);\n\t}\n\n\tpublic blur(): void {\n\t\tthis.nativeElement.blur();\n\t}\n\n\tpublic click(): void {\n\t\tthis.nativeElement.click();\n\t}\n\n\tpublic focus(options?: FocusOptions): void {\n\t\tthis.nativeElement.focus(options);\n\t}\n\n/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback used to customize the format of the messages that are returned from the Localization Module. */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property locale.  */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n}\n\nexport const Smart: any = window.Smart;\n\n","import { Splitter } from './../index';\nimport { Animation, SplitterAutoFitMode, Orientation, SplitterResizeMode, ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges, Output, EventEmitter, QueryList, ContentChildren } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { Animation, SplitterAutoFitMode, Orientation, SplitterResizeMode, ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { Splitter } from './../index';\n\n\nimport { SplitterItemComponent } from './smart.splitteritem';\n\nimport { SplitterBarComponent } from './smart.splitterbar';\n\n@Directive({\n\texportAs: 'smart-splitter',\tselector: 'smart-splitter, [smart-splitter]'\n})\n\nexport class SplitterComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\n\tconstructor(ref: ElementRef<Splitter>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as Splitter;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: Splitter;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <Splitter>document.createElement('smart-splitter');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Sets or gets the animation mode. Animation is disabled when the property is set to 'none' */\n\t@Input()\n\tget animation(): Animation | string {\n\t\treturn this.nativeElement ? this.nativeElement.animation : undefined;\n\t}\n\tset animation(value: Animation | string) {\n\t\tthis.nativeElement ? this.nativeElement.animation = value : undefined;\n\t}\n\n\t/** @description Determines how the items are arranged inside the Splitter. Possible values:   end - all items will fit the size of the Splitter. When inserting a new item the space required for the item to fit will be deducted from it's neighbour. proportional - all items will fit the size of the Splitter. When inserting a new item the space required for it to fit will be the result from the proportional deduction of the size from the rest of the items inside the element. overflow - the items inside the Splitter will not fit it's size. Instead they overflow by taking the exact amount of space they need and a scrollbar is displayed in order to view the content. */\n\t@Input()\n\tget autoFitMode(): SplitterAutoFitMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.autoFitMode : undefined;\n\t}\n\tset autoFitMode(value: SplitterAutoFitMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.autoFitMode = value : undefined;\n\t}\n\n\t/** @description Enables or disables the element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Sets or gets splitter's data source. */\n\t@Input()\n\tget dataSource(): any {\n\t\treturn this.nativeElement ? this.nativeElement.dataSource : undefined;\n\t}\n\tset dataSource(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.dataSource = value : undefined;\n\t}\n\n\t/** @description A getter that returns an array of all Splitter items. */\n\t@Input()\n\tget items(): any {\n\t\treturn this.nativeElement ? this.nativeElement.items : undefined;\n\t}\n\tset items(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.items = value : undefined;\n\t}\n\n\t/** @description If set the element keeps the same proportions of the items after the whole element has been resized regardless of the size property unit ( pixels or percentages) of the items. */\n\t@Input()\n\tget keepProportionsOnResize(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.keepProportionsOnResize : undefined;\n\t}\n\tset keepProportionsOnResize(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.keepProportionsOnResize = value : undefined;\n\t}\n\n\t/** @description Sets or gets the language. Used in conjunction with the property messages.  */\n\t@Input()\n\tget locale(): string {\n\t\treturn this.nativeElement ? this.nativeElement.locale : undefined;\n\t}\n\tset locale(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.locale = value : undefined;\n\t}\n\n\t/** @description Callback, related to localization module.  */\n\t@Input()\n\tget localizeFormatFunction(): any {\n\t\treturn this.nativeElement ? this.nativeElement.localizeFormatFunction : undefined;\n\t}\n\tset localizeFormatFunction(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.localizeFormatFunction = value : undefined;\n\t}\n\n\t/** @description Sets an object with string values, related to the different states of passwords strength. */\n\t@Input()\n\tget messages(): any {\n\t\treturn this.nativeElement ? this.nativeElement.messages : undefined;\n\t}\n\tset messages(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.messages = value : undefined;\n\t}\n\n\t/** @description Sets or gets splitter's orientation. */\n\t@Input()\n\tget orientation(): Orientation | string {\n\t\treturn this.nativeElement ? this.nativeElement.orientation : undefined;\n\t}\n\tset orientation(value: Orientation | string) {\n\t\tthis.nativeElement ? this.nativeElement.orientation = value : undefined;\n\t}\n\n\t/** @description If the element is readonly, users cannot interact with it. */\n\t@Input()\n\tget readonly(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.readonly : undefined;\n\t}\n\tset readonly(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.readonly = value : undefined;\n\t}\n\n\t/** @description Determines the resize mode of the splitter. Possible values are:  - None - resizing is disabled.  - Adjacent - only the two adjacent items between the target splitter bar are being affected. This is the default behavior.  - End - only the first item( left or top according to the orientation) of the target Splitter bar and the last item are affected.  Proportional - all of the items positioned in the direction to which the splitter bar is dragged will be affected. For example, when a splitter bar is dragged to the right all the items positioned on it's the right side will be affected. The items will obtain a proportional size corresponding to their current size. */\n\t@Input()\n\tget resizeMode(): SplitterResizeMode | string {\n\t\treturn this.nativeElement ? this.nativeElement.resizeMode : undefined;\n\t}\n\tset resizeMode(value: SplitterResizeMode | string) {\n\t\tthis.nativeElement ? this.nativeElement.resizeMode = value : undefined;\n\t}\n\n\t/** @description Determines the resize step during reisizing */\n\t@Input()\n\tget resizeStep(): number {\n\t\treturn this.nativeElement ? this.nativeElement.resizeStep : undefined;\n\t}\n\tset resizeStep(value: number) {\n\t\tthis.nativeElement ? this.nativeElement.resizeStep = value : undefined;\n\t}\n\n\t/** @description Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts. */\n\t@Input()\n\tget rightToLeft(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.rightToLeft : undefined;\n\t}\n\tset rightToLeft(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.rightToLeft = value : undefined;\n\t}\n\n\t/** @description When enabled the resizing operation happens live. By default this feature is not enabled and the user sees a hightlighted bar while dragging instead of the actual splitter bar. */\n\t@Input()\n\tget liveResize(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.liveResize : undefined;\n\t}\n\tset liveResize(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.liveResize = value : undefined;\n\t}\n\n\t/** @description Determines the theme. Theme defines the look of the element */\n\t@Input()\n\tget theme(): string {\n\t\treturn this.nativeElement ? this.nativeElement.theme : undefined;\n\t}\n\tset theme(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.theme = value : undefined;\n\t}\n\n\t/** @description If is set to true, the element cannot be focused. */\n\t@Input()\n\tget unfocusable(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.unfocusable : undefined;\n\t}\n\tset unfocusable(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.unfocusable = value : undefined;\n\t}\n\n\t/** @description This event is triggered when splitter item is collapsed.\n\t*  @param event. The custom event. \t*/\n\t@Output() onCollapse: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when splitter item is expanded.\n\t*  @param event. The custom event. \t*/\n\t@Output() onExpand: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when splitter resizing begins.\n\t*  @param event. The custom event. \t*/\n\t@Output() onResizeStart: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description This event is triggered when splitter resizing finishes.\n\t*  @param event. The custom event. \t*/\n\t@Output() onResizeEnd: EventEmitter<CustomEvent> = new EventEmitter();\n\n\t/** @description Appends a new node. \n\t* @param {Node} node. The node to append\n\t*/\n    public appendChild(node: Node): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.appendChild(node);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.appendChild(node);\n            });\n        }\n    }\n\n\t/** @description Collapses splitter item. \n\t* @param {any} item. number indicating the index of the item or an isntance of JQX.SplitterItem\n\t* @param {boolean} far?. Indicates whether the item should collapse to it's far or near side\n\t*/\n    public collapse(item: any, far?: boolean): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapse(item, far);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapse(item, far);\n            });\n        }\n    }\n\n\t/** @description Expands the splitter item if possible (if there's enough space available). \n\t* @param {any} item. number indicating the index of the item or an isntance of JQX.SplitterItem\n\t*/\n    public expand(item: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expand(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expand(item);\n            });\n        }\n    }\n\n\t/** @description Hides a splitter bar \n\t* @param {number} splitterBar. A JQX.SplitterBar instance.\n\t* @returns {number}\n  */\n\tpublic async hideBar(splitterBar): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.hideBar(splitterBar);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Insert a new Splitter item at a given position. \n\t* @param {number} index. The index at which a new item will be inserted.\n\t* @param {any} details. An Object or string used as content if the splitter item.\n\t*/\n    public insert(index: number, details: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.insert(index, details);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.insert(index, details);\n            });\n        }\n    }\n\n\t/** @description Inserts the specified \"smart-splitter-item\" node before the reference \"smart-splitter-item\" node. \n\t* @param {Node} newNode. The  \"smart-splitter-item\" node to insert.\n\t* @param {Node | null} referenceNode?. The \"smart-splitter-item\" node before which newNode is inserted.\n\t* @returns {Node}\n  */\n\tpublic async insertBefore(newNode, referenceNode?): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.insertBefore(newNode, referenceNode);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Locks a splitter item so it's size can't change. \n\t* @param {number} index. The index of a Splitter Bar or it's instance.\n\t*/\n    public lockItem(index: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.lockItem(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.lockItem(index);\n            });\n        }\n    }\n\n\t/** @description Locks a splitter bar so it can't be dragged. \n\t* @param {number} index. The index of a Splitter Bar or it's instance.\n\t*/\n    public lockBar(index: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.lockBar(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.lockBar(index);\n            });\n        }\n    }\n\n\t/** @description Removes a Splitter item. \n\t* @param {number} index. An item to be removed.\n\t*/\n    public removeAt(index: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeAt(index);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeAt(index);\n            });\n        }\n    }\n\n\t/** @description Removes all items from the Splitter \n\t*/\n    public removeAll(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.removeAll();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.removeAll();\n            });\n        }\n    }\n\n\t/** @description Removes a child \"smart-splitter-item\" node. \n\t* @param {Node} node. The \"smart-splitter-item\" node to remove.\n\t* @returns {Node}\n  */\n\tpublic async removeChild(node): Promise<any> {\n\t\tconst getResultOnRender = () => {\n            return new Promise(resolve => {\n                this.nativeElement.whenRendered(() => {\n                    const result = this.nativeElement.removeChild(node);\n                    resolve(result)\n                });\n            });\n        };\n        const result = await getResultOnRender();\n\n        return result;\n    }\n\n\t/** @description Refreshes the Splitter \n\t*/\n    public refresh(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.refresh();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.refresh();\n            });\n        }\n    }\n\n\t/** @description Unhides a Splitter Bar \n\t* @param {number} splitterBar. An instance of a splitter bar.\n\t*/\n    public showBar(splitterBar: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.showBar(splitterBar);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.showBar(splitterBar);\n            });\n        }\n    }\n\n\t/** @description Unlocks a previously locked splitter item. \n\t* @param {number} item. The index of a Splitter Item or it's instance.\n\t*/\n    public unlockItem(item: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unlockItem(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unlockItem(item);\n            });\n        }\n    }\n\n\t/** @description Unlocks a previously locked splitter bar. \n\t* @param {number} item. The index of a Splitter Bar or it's instance.\n\t*/\n    public unlockBar(item: number): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unlockBar(item);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unlockBar(item);\n            });\n        }\n    }\n\n\t/** @description Updates the properties of a Splitter item inside the Splitter. \n\t* @param {any} item. The index of a JQX.SplitterItem or it's instance.\n\t* @param {any} settings. An object containing the properties of a JQX.SplitterItem.\n\t*/\n    public update(item: any, settings: any): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.update(item, settings);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.update(item, settings);\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t\tthis.listen();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.unlisten();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @description Add event listeners. */\n\tprivate listen(): void {\n        const that = this;\n\t\tthat.eventHandlers['collapseHandler'] = (event: CustomEvent) => { that.onCollapse.emit(event); }\n\t\tthat.nativeElement.addEventListener('collapse', that.eventHandlers['collapseHandler']);\n\n\t\tthat.eventHandlers['expandHandler'] = (event: CustomEvent) => { that.onExpand.emit(event); }\n\t\tthat.nativeElement.addEventListener('expand', that.eventHandlers['expandHandler']);\n\n\t\tthat.eventHandlers['resizeStartHandler'] = (event: CustomEvent) => { that.onResizeStart.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\n\t\tthat.eventHandlers['resizeEndHandler'] = (event: CustomEvent) => { that.onResizeEnd.emit(event); }\n\t\tthat.nativeElement.addEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\n\t}\n\n\t/** @description Remove event listeners. */\n\tprivate unlisten(): void {\n        const that = this;\n\t\tif (that.eventHandlers['collapseHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('collapse', that.eventHandlers['collapseHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['expandHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('expand', that.eventHandlers['expandHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeStartHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeStart', that.eventHandlers['resizeStartHandler']);\n\t\t}\n\n\t\tif (that.eventHandlers['resizeEndHandler']) {\n\t\t\tthat.nativeElement.removeEventListener('resizeEnd', that.eventHandlers['resizeEndHandler']);\n\t\t}\n\n\t}\n}\n","import { SplitterItem } from './../index';\nimport { ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { SplitterItem } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-splitter-item',\tselector: 'smart-splitter-item, [smart-splitter-item]'\n})\n\nexport class SplitterItemComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<SplitterItem>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as SplitterItem;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: SplitterItem;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <SplitterItem>document.createElement('smart-splitter-item');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Enables or disables the element. */\n\t@Input()\n\tget disabled(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.disabled : undefined;\n\t}\n\tset disabled(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.disabled = value : undefined;\n\t}\n\n\t/** @description Determines of the item is collapsed or not. */\n\t@Input()\n\tget collapsed(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.collapsed : undefined;\n\t}\n\tset collapsed(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.collapsed = value : undefined;\n\t}\n\n\t/** @description Determines of the item can be collapsed. If set to false, the item can't be collapsed */\n\t@Input()\n\tget collapsible(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.collapsible : undefined;\n\t}\n\tset collapsible(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.collapsible = value : undefined;\n\t}\n\n\t/** @description Determines the content of the splitter items */\n\t@Input()\n\tget content(): any {\n\t\treturn this.nativeElement ? this.nativeElement.content : undefined;\n\t}\n\tset content(value: any) {\n\t\tthis.nativeElement ? this.nativeElement.content = value : undefined;\n\t}\n\n\t/** @description Determines of the item can be resized or not. */\n\t@Input()\n\tget locked(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.locked : undefined;\n\t}\n\tset locked(value: boolean) {\n\t\tthis.nativeElement ? this.nativeElement.locked = value : undefined;\n\t}\n\n\t/** @description Determines the max size of the item. */\n\t@Input()\n\tget max(): string {\n\t\treturn this.nativeElement ? this.nativeElement.max : undefined;\n\t}\n\tset max(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.max = value : undefined;\n\t}\n\n\t/** @description Determines the min size of the item */\n\t@Input()\n\tget min(): string {\n\t\treturn this.nativeElement ? this.nativeElement.min : undefined;\n\t}\n\tset min(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.min = value : undefined;\n\t}\n\n\t/** @description Determines the size of the item. */\n\t@Input()\n\tget size(): string {\n\t\treturn this.nativeElement ? this.nativeElement.size : undefined;\n\t}\n\tset size(value: string) {\n\t\tthis.nativeElement ? this.nativeElement.size = value : undefined;\n\t}\n\n\t/** @description Collapses the item. \n\t* @param {string} far. If set to true the item will collapse to it's far side ( to the right for vertical splitter and down for horizontal)\n\t*/\n    public collapse(far: string): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.collapse(far);\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.collapse(far);\n            });\n        }\n    }\n\n\t/** @description Expands the item if it's collapsed. \n\t*/\n    public expand(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.expand();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.expand();\n            });\n        }\n    }\n\n\t/** @description Locks the item so it can no longer change it's size. \n\t*/\n    public lock(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.lock();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.lock();\n            });\n        }\n    }\n\n\t/** @description Unlocks a previously locked item. \n\t*/\n    public unlock(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unlock();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unlock();\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t}\n\n\tngOnDestroy() {\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { SplitterBar } from './../index';\nimport { ElementRenderMode} from './../index';\nimport { Component, Directive, AfterViewInit, ElementRef, Input, OnInit, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { BaseElement, Smart } from './smart.element';\nexport { ElementRenderMode} from './../index';\nexport { Smart } from './smart.element';\nexport { SplitterBar } from './../index';\n\n\n@Directive({\n\texportAs: 'smart-splitter-bar',\tselector: 'smart-splitter-bar, [smart-splitter-bar]'\n})\n\nexport class SplitterBarComponent extends BaseElement implements OnInit, AfterViewInit, OnDestroy, OnChanges {\n\tconstructor(ref: ElementRef<SplitterBar>) {\n\t\tsuper(ref);\n\t\tthis.nativeElement = ref.nativeElement as SplitterBar;\n\t}\n\n\tprivate eventHandlers: any[] = [];\n\n\tpublic nativeElement: SplitterBar;\n\t/** @description Creates the component on demand.\n\t * @param properties An optional object of properties, which will be added to the template binded ones.\n\t */\n\tpublic createComponent(properties = {}): any {\n    \tthis.nativeElement = <SplitterBar>document.createElement('smart-splitter-bar');\n\t\tfor (let propertyName in properties) { \n \t\t\tthis.nativeElement[propertyName] = properties[propertyName];\n\t\t}\n\t\treturn this.nativeElement;\n\t}\n\t/** @description Hides the splitter bar. \n\t*/\n    public hide(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.hide();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.hide();\n            });\n        }\n    }\n\n\t/** @description Unhides a splitter bar. \n\t*/\n    public show(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.show();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.show();\n            });\n        }\n    }\n\n\t/** @description Locks the splitter bar. \n\t*/\n    public lock(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.lock();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.lock();\n            });\n        }\n    }\n\n\t/** @description Unlocks the splitter bar. \n\t*/\n    public unlock(): void {\n        if (this.nativeElement.isRendered) {\n            this.nativeElement.unlock();\n        }\n        else\n        {\n            this.nativeElement.whenRendered(() => {\n                this.nativeElement.unlock();\n            });\n        }\n    }\n\n\n\tget isRendered(): boolean {\n\t\treturn this.nativeElement ? this.nativeElement.isRendered : false;\n\t}\n\n\tngOnInit() {\n\t}\n\n    ngAfterViewInit() {\n      const that = this;\n\n      that.onCreate.emit(that.nativeElement);\n\n\t\tSmart.Render();\n\n\t\tthis.nativeElement.classList.add('smart-angular');\n\n\t\tthis.nativeElement.whenRendered(() => { that.onReady.emit(that.nativeElement); });\n\t}\n\n\tngOnDestroy() {\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.nativeElement && this.nativeElement.isRendered) {\n\t\t\tfor (const propName in changes) {\n\t\t\t\tif (changes.hasOwnProperty(propName)) {\n\t\t\t\t\tthis.nativeElement[propName] = changes[propName].currentValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { SplitterComponent } from './smart.splitter';\nimport { CUSTOM_ELEMENTS_SCHEMA  } from '@angular/core';\nimport { SplitterItemComponent } from './smart.splitteritem';\nimport { SplitterBarComponent } from './smart.splitterbar';\n\n@NgModule({\n    declarations: [SplitterComponent, SplitterItemComponent, SplitterBarComponent],\n\tschemas: [CUSTOM_ELEMENTS_SCHEMA],\n\texports: [SplitterComponent, SplitterItemComponent, SplitterBarComponent]\n})\n\nexport class SplitterModule { }\n"]}